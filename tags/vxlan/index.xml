<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Vxlan - 标签 - plantegg</title>
        <link>http://localhost:1313/tags/vxlan/</link>
        <description>Vxlan - 标签 - plantegg</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Tue, 21 Aug 2018 16:30:03 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/vxlan/" rel="self" type="application/rss+xml" /><item>
    <title>vxlan网络性能测试</title>
    <link>http://localhost:1313/posts/vxlan%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Tue, 21 Aug 2018 16:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/vxlan%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
    <description><![CDATA[<h1 id="vxlan网络性能测试" class="headerLink">
    <a href="#vxlan%e7%bd%91%e7%bb%9c%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95" class="header-mark"></a>vxlan网络性能测试</h1><hr>
<h2 id="缘起" class="headerLink">
    <a href="#%e7%bc%98%e8%b5%b7" class="header-mark"></a>缘起</h2><blockquote>
  <p>Docker集群中需要给每个容器分配一个独立的IP，同时在不同宿主机环境上的容器IP又要能够互相联通，所以需要一个overlay的网络（vlan也可以解决这个问题）</p>
<p>overlay网络就是把容器之间的网络包重新打包在宿主机的IP包里面，传到目的容器所在的宿主机后，再把这个overlay的网络包还原成容器包交给容器</p>
<p>这里多了一次封包解包的过程，所以性能上必然有些损耗</p>
<p>封包解包可以在应用层（比如Flannel的UDP封装），但是需要将每个网络包从内核态复制到应用态进行封包，所以性能非常差</p>
<p>比较新的Linux内核带了vxlan功能，也就是将网络包直接在内核态完成封包，所以性能要好很多，本文vxlan指的就是这种方式</p>

</blockquote><h2 id="本文主要是比较通过vxlan实现的overlay网络之间的性能相对宿主机之间而言" class="headerLink">
    <a href="#%e6%9c%ac%e6%96%87%e4%b8%bb%e8%a6%81%e6%98%af%e6%af%94%e8%be%83%e9%80%9a%e8%bf%87vxlan%e5%ae%9e%e7%8e%b0%e7%9a%84overlay%e7%bd%91%e7%bb%9c%e4%b9%8b%e9%97%b4%e7%9a%84%e6%80%a7%e8%83%bd%e7%9b%b8%e5%af%b9%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b9%8b%e9%97%b4%e8%80%8c%e8%a8%80" class="header-mark"></a>本文主要是比较通过vxlan实现的overlay网络之间的性能（相对宿主机之间而言）</h2><h2 id="iperf3-下载和安装" class="headerLink">
    <a href="#iperf3-%e4%b8%8b%e8%bd%bd%e5%92%8c%e5%ae%89%e8%a3%85" class="header-mark"></a>iperf3 下载和安装</h2><ul>
<li>wget <a href="http://downloads.es.net/pub/iperf/iperf-3.9.tar.gz" target="_blank" rel="noopener noreferrer">http://downloads.es.net/pub/iperf/iperf-3.9.tar.gz</a> （https://downloads.es.net/pub/iperf/）</li>
<li>tar zxvf iperf-3.0.6.tar.gz</li>
<li>cd iperf-3.0.6</li>
<li>./configure</li>
<li>make install</li>
</ul>
<h2 id="测试环境宿主机的基本配置情况" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e7%8e%af%e5%a2%83%e5%ae%bf%e4%b8%bb%e6%9c%ba%e7%9a%84%e5%9f%ba%e6%9c%ac%e9%85%8d%e7%bd%ae%e6%83%85%e5%86%b5" class="header-mark"></a>测试环境宿主机的基本配置情况</h2><pre><code>conf:
loc_node   =  e12174.bja
loc_cpu=  2 Cores: Intel Xeon E5-2430 0 @ 2.20GHz
loc_os =  Linux 3.10.0-327.ali2010.alios7.x86_64
loc_qperf  =  0.4.9
rem_node   =  e26108.bja
rem_cpu=  2 Cores: Intel Xeon E5-2430 0 @ 2.20GHz
rem_os =  Linux 3.10.0-327.ali2010.alios7.x86_64
rem_qperf  =  0.4.9
</code></pre>
<h3 id="容器到自身宿主机之间-跟两容器在同一宿主机速度差不多" class="headerLink">
    <a href="#%e5%ae%b9%e5%99%a8%e5%88%b0%e8%87%aa%e8%ba%ab%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b9%8b%e9%97%b4-%e8%b7%9f%e4%b8%a4%e5%ae%b9%e5%99%a8%e5%9c%a8%e5%90%8c%e4%b8%80%e5%ae%bf%e4%b8%bb%e6%9c%ba%e9%80%9f%e5%ba%a6%e5%b7%ae%e4%b8%8d%e5%a4%9a" class="header-mark"></a>容器到自身宿主机之间, 跟两容器在同一宿主机，速度差不多</h3><pre><code>$iperf3 -c 192.168.6.6 
Connecting to host 192.168.6.6, port 5201
[  4] local 192.168.6.1 port 21112 connected to 192.168.6.6 port 5201
[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec  13.9 GBytes  11.9 Gbits/sec1 sender
[  4]   0.00-10.00  sec  13.9 GBytes  11.9 Gbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec  14.2 GBytes  12.2 Gbits/sec  139 sender
[  4]   0.00-10.00  sec  14.2 GBytes  12.2 Gbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec  13.9 GBytes  11.9 Gbits/sec   96 sender
[  4]   0.00-10.00  sec  13.9 GBytes  11.9 Gbits/sec  receiver
</code></pre>
<h3 id="从宿主机a到宿主机b上的容器" class="headerLink">
    <a href="#%e4%bb%8e%e5%ae%bf%e4%b8%bb%e6%9c%baa%e5%88%b0%e5%ae%bf%e4%b8%bb%e6%9c%bab%e4%b8%8a%e7%9a%84%e5%ae%b9%e5%99%a8" class="header-mark"></a>从宿主机A到宿主机B上的容器</h3><pre><code>$iperf3 -c 192.168.6.6
Connecting to host 192.168.6.6, port 5201
[  4] local 192.168.6.1 port 47940 connected to 192.168.6.6 port 5201
[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   409 MBytes   343 Mbits/sec0 sender
[  4]   0.00-10.00  sec   405 MBytes   340 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   389 MBytes   326 Mbits/sec   14 sender
[  4]   0.00-10.00  sec   386 MBytes   324 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   460 MBytes   386 Mbits/sec7 sender
[  4]   0.00-10.00  sec   458 MBytes   384 Mbits/sec  receiver
</code></pre>
<h3 id="两宿主机之间测试" class="headerLink">
    <a href="#%e4%b8%a4%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b9%8b%e9%97%b4%e6%b5%8b%e8%af%95" class="header-mark"></a>两宿主机之间测试</h3><pre><code>$iperf3 -c 10.125.26.108
Connecting to host 10.125.26.108, port 5201
[  4] local 10.125.12.174 port 24309 connected to 10.125.26.108 port 5201
[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   471 MBytes   395 Mbits/sec0 sender
[  4]   0.00-10.00  sec   469 MBytes   393 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   428 MBytes   359 Mbits/sec0 sender
[  4]   0.00-10.00  sec   426 MBytes   357 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   430 MBytes   360 Mbits/sec0 sender
[  4]   0.00-10.00  sec   427 MBytes   358 Mbits/sec  receiver
</code></pre>
<h3 id="两容器之间跨宿主机" class="headerLink">
    <a href="#%e4%b8%a4%e5%ae%b9%e5%99%a8%e4%b9%8b%e9%97%b4%e8%b7%a8%e5%ae%bf%e4%b8%bb%e6%9c%ba" class="header-mark"></a>两容器之间（跨宿主机）</h3><pre><code>$iperf3 -c 192.168.6.6
Connecting to host 192.168.6.6, port 5201
[  4] local 192.168.6.5 port 37719 connected to 192.168.6.6 port 5201
[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   403 MBytes   338 Mbits/sec   18 sender
[  4]   0.00-10.00  sec   401 MBytes   336 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   428 MBytes   359 Mbits/sec   15 sender
[  4]   0.00-10.00  sec   425 MBytes   356 Mbits/sec  receiver

[ ID] Interval   Transfer Bandwidth   Retr
[  4]   0.00-10.00  sec   508 MBytes   426 Mbits/sec   11 sender
[  4]   0.00-10.00  sec   506 MBytes   424 Mbits/sec  receiver
</code></pre>
<h2 id="pps-压测" class="headerLink">
    <a href="#pps-%e5%8e%8b%e6%b5%8b" class="header-mark"></a>PPS 压测</h2><p>必须到<a href="https://sourceforge.net/projects/iperf2/files/" target="_blank" rel="noopener noreferrer">这里下载最新版的iperf2</a> 才有增强的 pps 测试能力</p>
<p>购买的 ECS PPS为 600 万</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">iperf -c 10.0.1.2 -t 600 -u -i 1 -l 16 -b 500kpps -P 16 //实际outgoing 有丢包
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">调整参数刚好压到 ECS的标称 600万 PPS，同时通过netstat -s 观察没有丢包
</span></span><span class="line"><span class="cl">iperf -c 10.0.1.2 -t 600 -u -i 1 -l 16 -b 250kpps -P 24 -e
</span></span><span class="line"><span class="cl">[SUM] 25.00-26.00 sec  91.6 MBytes   768 Mbits/sec  6002993/1  6002999 pps
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">iperf -c 100.69.170.17 -u -i 1 -l 16 -b 2000kpps -e</span></span></code></pre>
</div>
<p>压测机器内核 3.10，故意不打满，160万pps</p>
<p>server收包端的top，几乎看不到si 和ksoftirq：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174305030.png   alt="image-20231227174305030"  ></p>
<p>对应的tsar pps 监控：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174402374.png   alt="image-20231227174402374"  ></p>
<p>client端的iperf 数据：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174428881.png   alt="image-20231227174428881"  ></p>
<p>在如上基础上加大压力，可以看到si% 快速被打爆，和流量不成正比，大量丢包</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174725237.png   alt="image-20231227174725237"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174802828.png   alt="image-20231227174802828"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20231227174829420.png   alt="image-20231227174829420"  ></p>
<p>实际流量只是从160万pps 增加到320万pps，但是si CPU的增加可不是翻倍，而是出现了踩踏，丢包也大量出现(因为si% 达到100%)</p>
<p>在4.19/5.10的内核上进行如上验证，也是一样出现了软中断CPU踩踏</p>
<h2 id="带宽压测" class="headerLink">
    <a href="#%e5%b8%a6%e5%ae%bd%e5%8e%8b%e6%b5%8b" class="header-mark"></a>带宽压测</h2><h2 id="netperf-安装依赖-automake-114-环境无法升级放弃" class="headerLink">
    <a href="#netperf-%e5%ae%89%e8%a3%85%e4%be%9d%e8%b5%96-automake-114-%e7%8e%af%e5%a2%83%e6%97%a0%e6%b3%95%e5%8d%87%e7%ba%a7%e6%94%be%e5%bc%83" class="header-mark"></a>netperf 安装依赖 automake-1.14, 环境无法升级，放弃</h2><h2 id="qperf-测试工具" class="headerLink">
    <a href="#qperf-%e6%b5%8b%e8%af%95%e5%b7%a5%e5%85%b7" class="header-mark"></a>qperf 测试工具</h2><ul>
<li>sudo yum install qperf -y</li>
</ul>
<h3 id="两台宿主机之间" class="headerLink">
    <a href="#%e4%b8%a4%e5%8f%b0%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b9%8b%e9%97%b4" class="header-mark"></a>两台宿主机之间</h3><pre><code>$qperf -t 10  10.125.26.108 tcp_bw tcp_lat
tcp_bw:
bw  =  50.5 MB/sec
tcp_lat:
latency  =  332 us
</code></pre>
<h4 id="包的大小分别为1和128" class="headerLink">
    <a href="#%e5%8c%85%e7%9a%84%e5%a4%a7%e5%b0%8f%e5%88%86%e5%88%ab%e4%b8%ba1%e5%92%8c128" class="header-mark"></a>包的大小分别为1和128</h4><pre><code>$qperf  -oo msg_size:1   10.125.26.108 tcp_bw tcp_lat
tcp_bw:
bw  =  1.75 MB/sec
tcp_lat:
latency  =  428 us

$qperf  -oo msg_size:128   10.125.26.108 tcp_bw tcp_lat
tcp_bw:
bw  =  57.8 MB/sec
tcp_lat:
latency  =  504 us
</code></pre>
<h4 id="两台宿主机之间包的大小从一个字节每次翻倍测试" class="headerLink">
    <a href="#%e4%b8%a4%e5%8f%b0%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b9%8b%e9%97%b4%e5%8c%85%e7%9a%84%e5%a4%a7%e5%b0%8f%e4%bb%8e%e4%b8%80%e4%b8%aa%e5%ad%97%e8%8a%82%e6%af%8f%e6%ac%a1%e7%bf%bb%e5%80%8d%e6%b5%8b%e8%af%95" class="header-mark"></a>两台宿主机之间，包的大小从一个字节每次翻倍测试</h4><pre><code>$qperf  -oo msg_size:1:4K:*2 -vu  10.125.26.108 tcp_bw tcp_lat 
tcp_bw:
bw=  1.86 MB/sec
msg_size  = 1 bytes
tcp_bw:
bw=  3.54 MB/sec
msg_size  = 2 bytes
tcp_bw:
bw=  6.43 MB/sec
msg_size  = 4 bytes
tcp_bw:
bw=  14.3 MB/sec
msg_size  = 8 bytes
tcp_bw:
bw=  27.1 MB/sec
msg_size  =16 bytes
tcp_bw:
bw=  42.3 MB/sec
msg_size  =32 bytes
tcp_bw:
bw=  51.8 MB/sec
msg_size  =64 bytes
tcp_bw:
bw=  49.7 MB/sec
msg_size  =   128 bytes
tcp_bw:
bw=  48.2 MB/sec
msg_size  =   256 bytes
tcp_bw:
bw=   58 MB/sec
msg_size  =  512 bytes
tcp_bw:
bw=  54.6 MB/sec
msg_size  = 1 KiB (1,024)
tcp_bw:
bw=  48.7 MB/sec
msg_size  = 2 KiB (2,048)
tcp_bw:
bw=  53.6 MB/sec
msg_size  = 4 KiB (4,096)
tcp_lat:
latency   =  432 us
msg_size  =1 bytes
tcp_lat:
latency   =  480 us
msg_size  =2 bytes
tcp_lat:
latency   =  441 us
msg_size  =4 bytes
tcp_lat:
latency   =  487 us
msg_size  =8 bytes
tcp_lat:
latency   =  404 us
msg_size  =   16 bytes
tcp_lat:
latency   =  335 us
msg_size  =   32 bytes
tcp_lat:
latency   =  338 us
msg_size  =   64 bytes
tcp_lat:
latency   =  401 us
msg_size  =  128 bytes
tcp_lat:
latency   =  496 us
msg_size  =  256 bytes
tcp_lat:
latency   =  684 us
msg_size  =  512 bytes
tcp_lat:
latency   =  534 us
msg_size  =1 KiB (1,024)
tcp_lat:
latency   =  681 us
msg_size  =2 KiB (2,048)
tcp_lat:
latency   =  701 us
msg_size  =4 KiB (4,096)
</code></pre>
<h3 id="两个容器之间分别在两台宿主机上" class="headerLink">
    <a href="#%e4%b8%a4%e4%b8%aa%e5%ae%b9%e5%99%a8%e4%b9%8b%e9%97%b4%e5%88%86%e5%88%ab%e5%9c%a8%e4%b8%a4%e5%8f%b0%e5%ae%bf%e4%b8%bb%e6%9c%ba%e4%b8%8a" class="header-mark"></a>两个容器之间（分别在两台宿主机上）</h3><pre><code>$qperf -t 10  192.168.6.6 tcp_bw tcp_lat 
tcp_bw:
bw  =  44.4 MB/sec
tcp_lat:
latency  =  512 us
</code></pre>
<h4 id="包的大小分别为1和128-1" class="headerLink">
    <a href="#%e5%8c%85%e7%9a%84%e5%a4%a7%e5%b0%8f%e5%88%86%e5%88%ab%e4%b8%ba1%e5%92%8c128-1" class="header-mark"></a>包的大小分别为1和128</h4><pre><code>$qperf -oo msg_size:1  192.168.6.6 tcp_bw tcp_lat 
tcp_bw:
bw  =  1.13 MB/sec
tcp_lat:
latency  =  630 us

$qperf -oo msg_size:128  192.168.6.6 tcp_bw tcp_lat 
tcp_bw:
bw  =  44.2 MB/sec
tcp_lat:
latency  =  526 us
</code></pre>
<h4 id="两个容器之间包的大小从一个字节每次翻倍测试" class="headerLink">
    <a href="#%e4%b8%a4%e4%b8%aa%e5%ae%b9%e5%99%a8%e4%b9%8b%e9%97%b4%e5%8c%85%e7%9a%84%e5%a4%a7%e5%b0%8f%e4%bb%8e%e4%b8%80%e4%b8%aa%e5%ad%97%e8%8a%82%e6%af%8f%e6%ac%a1%e7%bf%bb%e5%80%8d%e6%b5%8b%e8%af%95" class="header-mark"></a>两个容器之间，包的大小从一个字节每次翻倍测试</h4><pre><code>$qperf -oo msg_size:1:4K:*2  192.168.6.6 -vu tcp_bw tcp_lat 
tcp_bw:
bw=  1.06 MB/sec
msg_size  = 1 bytes
tcp_bw:
bw=  2.29 MB/sec
msg_size  = 2 bytes
tcp_bw:
bw=  3.79 MB/sec
msg_size  = 4 bytes
tcp_bw:
bw=  7.66 MB/sec
msg_size  = 8 bytes
tcp_bw:
bw=  14 MB/sec
msg_size  =  16 bytes
tcp_bw:
bw=  24.4 MB/sec
msg_size  =32 bytes
tcp_bw:
bw=  36 MB/sec
msg_size  =  64 bytes
tcp_bw:
bw=  46.7 MB/sec
msg_size  =   128 bytes
tcp_bw:
bw=   56 MB/sec
msg_size  =  256 bytes
tcp_bw:
bw=  42.2 MB/sec
msg_size  =   512 bytes
tcp_bw:
bw=  57.6 MB/sec
msg_size  = 1 KiB (1,024)
tcp_bw:
bw=  52.3 MB/sec
msg_size  = 2 KiB (2,048)
tcp_bw:
bw=  41.7 MB/sec
msg_size  = 4 KiB (4,096)
tcp_lat:
latency   =  447 us
msg_size  =1 bytes
tcp_lat:
latency   =  417 us
msg_size  =2 bytes
tcp_lat:
latency   =  503 us
msg_size  =4 bytes
tcp_lat:
latency   =  488 us
msg_size  =8 bytes
tcp_lat:
latency   =  452 us
msg_size  =   16 bytes
tcp_lat:
latency   =  537 us
msg_size  =   32 bytes
tcp_lat:
latency   =  712 us
msg_size  =   64 bytes
tcp_lat:
latency   =  521 us
msg_size  =  128 bytes
tcp_lat:
latency   =  450 us
msg_size  =  256 bytes
tcp_lat:
latency   =  442 us
msg_size  =  512 bytes
tcp_lat:
latency   =  630 us
msg_size  =1 KiB (1,024)
tcp_lat:
latency   =  519 us
msg_size  =2 KiB (2,048)
tcp_lat:
latency   =  621 us
msg_size  =4 KiB (4,096)
</code></pre>
<p>​</p>
<h2 id="结论" class="headerLink">
    <a href="#%e7%bb%93%e8%ae%ba" class="header-mark"></a>结论</h2><ul>
<li>iperf3测试带宽方面vxlan网络基本和宿主机一样，没有什么损失</li>
<li>qperf测试vxlan的带宽只相当于宿主机的60-80%</li>
<li>qperf测试一个字节的小包vxlan的带宽只相当于宿主机的60-65%</li>
<li>由上面的结论猜测：物理带宽更大的情况下vxlan跟宿主机的差别会扩大</li>
</ul>
<p><strong>qperf安装更容易； iperf3 可以多连接并发测试，可以控制包的大小、nodelay等等</strong></p>
<h2 id="网络方案性能" class="headerLink">
    <a href="#%e7%bd%91%e7%bb%9c%e6%96%b9%e6%a1%88%e6%80%a7%e8%83%bd" class="header-mark"></a>网络方案性能</h2>
<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: "><strong>OS</strong></th>
            <th style="text-align: "><strong>Host</strong></th>
            <th style="text-align: "><strong>Docker_Host</strong></th>
            <th style="text-align: "><strong>Docker_NAT_IPTABLES</strong></th>
            <th style="text-align: "><strong>Docker_NAT_PROXY</strong></th>
            <th style="text-align: "><strong>Docker_BRIDGE_VLAN</strong></th>
            <th style="text-align: "><strong>Docker_OVS_VLAN</strong></th>
            <th style="text-align: "><strong>Docker_HAVS_VLAN</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: "><strong>TPS</strong></td>
            <td style="text-align: ">6U</td>
            <td style="text-align: ">118727.5</td>
            <td style="text-align: ">115962.5</td>
            <td style="text-align: ">83281.08</td>
            <td style="text-align: ">29104.33</td>
            <td style="text-align: ">57327.15</td>
            <td style="text-align: ">55606.37</td>
            <td style="text-align: ">54686.88</td>
        </tr>
        <tr>
            <td style="text-align: "><strong>TPS</strong></td>
            <td style="text-align: ">7U</td>
            <td style="text-align: ">117501.4</td>
            <td style="text-align: ">110010.7</td>
            <td style="text-align: ">101131.2</td>
            <td style="text-align: ">34795.39</td>
            <td style="text-align: ">108857.7</td>
            <td style="text-align: ">107554.3</td>
            <td style="text-align: ">105021</td>
        </tr>
        <tr>
            <td style="text-align: "></td>
            <td style="text-align: ">6U</td>
            <td style="text-align: ">BASE</td>
            <td style="text-align: ">-2.38%</td>
            <td style="text-align: ">-42.56%</td>
            <td style="text-align: ">-307.94%</td>
            <td style="text-align: ">-107.11%</td>
            <td style="text-align: ">-113.51%</td>
            <td style="text-align: ">-117.10%</td>
        </tr>
        <tr>
            <td style="text-align: "></td>
            <td style="text-align: ">7U</td>
            <td style="text-align: ">BASE</td>
            <td style="text-align: ">-6.81%</td>
            <td style="text-align: ">-16.19%</td>
            <td style="text-align: ">-237.69%</td>
            <td style="text-align: ">-7.94%</td>
            <td style="text-align: ">-9.25%</td>
            <td style="text-align: ">-11.88%</td>
        </tr>
        <tr>
            <td style="text-align: "><strong>RT</strong></td>
            <td style="text-align: ">6U(ms)</td>
            <td style="text-align: ">0.330633</td>
            <td style="text-align: ">0.362042</td>
            <td style="text-align: ">0.505125</td>
            <td style="text-align: ">1.423767</td>
            <td style="text-align: ">0.799308</td>
            <td style="text-align: ">0.763842</td>
            <td style="text-align: ">0.840458</td>
        </tr>
        <tr>
            <td style="text-align: "><strong>RT</strong></td>
            <td style="text-align: ">7U(ms)</td>
            <td style="text-align: ">0.3028</td>
            <td style="text-align: ">0.321267</td>
            <td style="text-align: ">0.346325</td>
            <td style="text-align: ">1.183225</td>
            <td style="text-align: ">0.325333</td>
            <td style="text-align: ">0.335708</td>
            <td style="text-align: ">0.33535</td>
        </tr>
        <tr>
            <td style="text-align: "></td>
            <td style="text-align: ">6U(us)</td>
            <td style="text-align: ">BASE</td>
            <td style="text-align: ">31.40833</td>
            <td style="text-align: ">174.4917</td>
            <td style="text-align: ">1093.133</td>
            <td style="text-align: ">468.675</td>
            <td style="text-align: ">433.2083</td>
            <td style="text-align: ">509.825</td>
        </tr>
        <tr>
            <td style="text-align: "></td>
            <td style="text-align: ">7U(us)</td>
            <td style="text-align: ">BASE</td>
            <td style="text-align: ">18.46667</td>
            <td style="text-align: ">43.525</td>
            <td style="text-align: ">880.425</td>
            <td style="text-align: ">22.53333</td>
            <td style="text-align: ">32.90833</td>
            <td style="text-align: ">32.55</td>
        </tr>
    </tbody>
  </table>
</div>
<ul>
<li>Host：是指没有隔离的情况下，D13物理机；</li>
<li>Docker_Host：是指Docker采用Host网络模式;</li>
<li>Docker_NAT_IPTABLES：是指Docker采用NAT网络模式，通过IPTABLES进行网络转发。</li>
<li>Docker_NAT_PROXY：是指Docker采用NAT网络模式，通过docker-proxy进行网络转发。</li>
<li>Docker_BRIDGE：是指Docker采用Bridge网络模式，并且配置静态IP和VLAN701，这里使用VLAN。</li>
<li>Docker_OVS_VLAN：是指Docker采用VSwitch网络模式，通过OpenVSwitch进行网络通信，使用ACS VLAN Driver。</li>
<li>Docker_HAVS_VLAN：是指Docker采用VSwitch网络模式，通过HAVS进行网络通信，使用VLAN。</li>
</ul>
<h3 id="通过测试汇总测试结论如下" class="headerLink">
    <a href="#%e9%80%9a%e8%bf%87%e6%b5%8b%e8%af%95%e6%b1%87%e6%80%bb%e6%b5%8b%e8%af%95%e7%bb%93%e8%ae%ba%e5%a6%82%e4%b8%8b" class="header-mark"></a>通过测试，汇总测试结论如下</h3><ol>
<li>
<p>Docker_Host网络模式在6U和7U环境下，性能比物理机方案上性能降低了2<del>6%左右，RT增加了18</del>30us左右。</p>
</li>
<li>
<p>Docker_NAT_IPTABLES网络模式在6U环境下，性能比物理机方案上性能降低了43%左右，RT增加了174us；在7U环境下，性能比物理机方案上性能降低了16%左右，RT增加了44us；此外，可以明显看出，7U环境比6U环境性能上优化了20%，RT上减少了130us左右。</p>
</li>
<li>
<p>Docker_NAT_PROXY网络模式在6U环境下，性能比物理机方案性能降低了300%，RT增加了1ms以上；在7U环境下，性能比物理机方案性能降低了237%，RT增加了880us以上；此外，可以明显看出，7U环境比6U环境性能上优化了20%，RT上减少了200us左右。</p>
</li>
<li>
<p>Docker_BRIDGE_VLAN网络模式在6U环境下，性能比物理机方案性能降低了107%，RT增加了469us；在7U环境下，性能比物理机方案性能降低了8%左右，RT增加了23us左右；此外，可以明显看出，7U环境比6U环境性能上优化了90%，RT上减少了446us。从诊断上来看，6U和7U的性能差异主要在VLAN的处理上的spin_lock，详细可以参考之前的测试验证。</p>
</li>
<li>
<p>Docker_OVS_VLAN网络模式在6U环境下，性能比物理机方案性能降低了114%，RT增加了433us；在7U环境下，性能比物理机方案性能降低了9%左右，RT增加了33us；此外，可以明显看出，7U环境比6U环境性能上优化了93%，RT上减少了400us。从诊断上来看，6U和7U的性能差异主要在VLAN的处理上的spin_lock。并且发现，OVS与Bridge网络模式性能上基本持平，无较大性能上的差异。</p>
</li>
<li>
<p>Docker_HAVS_VLAN网络模式在6U环境下，性能比物理机方案性能降低了117%，RT增加了510us；在7U环境下，性能比物理机方案性能降低了12%左右，RT增加了33us；此外，可以明显看出，7U环境比6U环境性能上优化了92%，RT上减少了477us。从诊断上来看，6U和7U的性能差异主要在VLAN的处理上的spin_lock。并且发现，HAVS与Bridge网络模式性能上基本持平，无较大性能上的差异；HAVS与OVS的性能上差异也较小，无较大性能上的差异。</p>
</li>
<li>
<p>SR-IOV网络模式由于存在OS、Docker、网卡等要求，非通用化方案，将作为进一步的优化方案进行探索。</p>
</li>
</ol>
<h3 id="网络性能结果分析rama等同方舟vlan网络方案" class="headerLink">
    <a href="#%e7%bd%91%e7%bb%9c%e6%80%a7%e8%83%bd%e7%bb%93%e6%9e%9c%e5%88%86%e6%9e%90rama%e7%ad%89%e5%90%8c%e6%96%b9%e8%88%9fvlan%e7%bd%91%e7%bb%9c%e6%96%b9%e6%a1%88" class="header-mark"></a>网络性能结果分析（rama等同方舟vlan网络方案）</h3><p>延迟数据汇总：</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: ">host</th>
            <th style="text-align: ">rama不开启mac nat</th>
            <th style="text-align: ">rama开启mac nat</th>
            <th style="text-align: ">calico-bgp</th>
            <th style="text-align: ">flannel-vxlan</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">64</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.042</td>
            <td style="text-align: ">0.041</td>
        </tr>
        <tr>
            <td style="text-align: ">512</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.043</td>
            <td style="text-align: ">0.041</td>
            <td style="text-align: ">0.043</td>
        </tr>
        <tr>
            <td style="text-align: ">1024</td>
            <td style="text-align: ">0.045</td>
            <td style="text-align: ">0.045</td>
            <td style="text-align: ">0.045</td>
            <td style="text-align: ">0.046</td>
            <td style="text-align: ">0.048</td>
        </tr>
        <tr>
            <td style="text-align: ">2048</td>
            <td style="text-align: ">0.073</td>
            <td style="text-align: ">0.072</td>
            <td style="text-align: ">0.072</td>
            <td style="text-align: ">0.073</td>
            <td style="text-align: ">0.073</td>
        </tr>
        <tr>
            <td style="text-align: ">4096</td>
            <td style="text-align: ">0.072</td>
            <td style="text-align: ">0.070</td>
            <td style="text-align: ">0.073</td>
            <td style="text-align: ">0.071</td>
            <td style="text-align: ">0.079</td>
        </tr>
        <tr>
            <td style="text-align: ">16384</td>
            <td style="text-align: ">0.148</td>
            <td style="text-align: ">0.144</td>
            <td style="text-align: ">0.149</td>
            <td style="text-align: ">0.242</td>
            <td style="text-align: ">0.200</td>
        </tr>
        <tr>
            <td style="text-align: ">32678</td>
            <td style="text-align: ">0.244</td>
            <td style="text-align: ">0.335</td>
            <td style="text-align: ">0.242</td>
            <td style="text-align: ">0.320</td>
            <td style="text-align: ">0.352</td>
        </tr>
        <tr>
            <td style="text-align: ">64512</td>
            <td style="text-align: ">0.300</td>
            <td style="text-align: ">0.481</td>
            <td style="text-align: ">0.419</td>
            <td style="text-align: ">0.437</td>
            <td style="text-align: ">0.541</td>
        </tr>
    </tbody>
  </table>
</div>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/1589164443676-cc7b2394-67e1-4550-b34d-d489c34ad026.png   alt="image.png"  ></p>
<p>吞吐量数据汇总：</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: ">host</th>
            <th style="text-align: ">rama不开启mac nat</th>
            <th style="text-align: ">rama开启mac nat</th>
            <th style="text-align: ">calico-bgp</th>
            <th style="text-align: ">flannel-vxlan</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">64</td>
            <td style="text-align: ">386</td>
            <td style="text-align: ">381</td>
            <td style="text-align: ">381</td>
            <td style="text-align: ">377</td>
            <td style="text-align: ">359</td>
        </tr>
        <tr>
            <td style="text-align: ">512</td>
            <td style="text-align: ">2660</td>
            <td style="text-align: ">2370</td>
            <td style="text-align: ">2530</td>
            <td style="text-align: ">2580</td>
            <td style="text-align: ">1840</td>
        </tr>
        <tr>
            <td style="text-align: ">1024</td>
            <td style="text-align: ">5170</td>
            <td style="text-align: ">4590</td>
            <td style="text-align: ">4880</td>
            <td style="text-align: ">4510</td>
            <td style="text-align: ">2610</td>
        </tr>
        <tr>
            <td style="text-align: ">2048</td>
            <td style="text-align: ">7710</td>
            <td style="text-align: ">7350</td>
            <td style="text-align: ">7040</td>
            <td style="text-align: ">7420</td>
            <td style="text-align: ">3310</td>
        </tr>
        <tr>
            <td style="text-align: ">4096</td>
            <td style="text-align: ">9410</td>
            <td style="text-align: ">8750</td>
            <td style="text-align: ">8220</td>
            <td style="text-align: ">8440</td>
            <td style="text-align: ">3830</td>
        </tr>
        <tr>
            <td style="text-align: ">16384</td>
            <td style="text-align: ">9410</td>
            <td style="text-align: ">8850</td>
            <td style="text-align: ">8460</td>
            <td style="text-align: ">8580</td>
            <td style="text-align: ">5080</td>
        </tr>
        <tr>
            <td style="text-align: ">32678</td>
            <td style="text-align: ">9410</td>
            <td style="text-align: ">8810</td>
            <td style="text-align: ">8580</td>
            <td style="text-align: ">8550</td>
            <td style="text-align: ">4950</td>
        </tr>
        <tr>
            <td style="text-align: ">65507</td>
            <td style="text-align: ">9410</td>
            <td style="text-align: ">8660</td>
            <td style="text-align: ">8410</td>
            <td style="text-align: ">8540</td>
            <td style="text-align: ">4920</td>
        </tr>
    </tbody>
  </table>
</div>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/1589164443610-d5bb45a6-f688-4a6b-b697-8370387f4dd8.png   alt="image.png"  ></p>
<p>从延迟上来看，rama与calico-bgp相差不大，从数据上略低于host性能，略高于flannel-vxlan；从吞吐量上看，区别会明显一些，当报文长度大于4096 KB 时，均观察到各网络插件的吞吐量达到最大值，从最大值上来看可以初步得出以下结论：</p>
<p><strong>host &gt; rama不开启mac nat &gt;</strong> <strong>rama开启mac nat</strong> ≈ <strong>calico-bgp &gt;</strong> <strong>flannel-vxlan</strong></p>
<p>rama不开启mac nat时性能最高，开启mac nat功能，性能与calico-bgp基本相同，并且性能大幅度高于flannel-vxlan；虽然rama开启mac nat之后的性能与每个节点上的pod数量直接相关，但由于测试 rama开启mac nat方案 的时候，取的是两个个节点上50个pod中预计性能最差的pod，基本可以反映一般情况</p>
<h2 id="参考文章" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%ab%a0" class="header-mark"></a>参考文章：</h2><p><a href="https://linoxide.com/monitoring-2/install-iperf-test-network-speed-bandwidth/" target="_blank" rel="noopener noreferrer">https://linoxide.com/monitoring-2/install-iperf-test-network-speed-bandwidth/</a></p>
<p><a href="http://blog.yufeng.info/archives/2234" target="_blank" rel="noopener noreferrer">http://blog.yufeng.info/archives/2234</a></p>
]]></description>
</item></channel>
</rss>
