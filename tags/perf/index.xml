<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Perf - 标签 - plantegg</title>
        <link>http://localhost:1313/tags/perf/</link>
        <description>Perf - 标签 - plantegg</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Fri, 26 Apr 2024 12:30:03 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/perf/" rel="self" type="application/rss+xml" /><item>
    <title>流量一样但为什么CPU使用率差别很大</title>
    <link>http://localhost:1313/posts/%E6%B5%81%E9%87%8F%E4%B8%80%E6%A0%B7%E4%BD%86%E4%B8%BA%E4%BB%80%E4%B9%88cpu%E4%BD%BF%E7%94%A8%E7%8E%87%E5%B7%AE%E5%88%AB%E5%BE%88%E5%A4%A7/</link>
    <pubDate>Fri, 26 Apr 2024 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E6%B5%81%E9%87%8F%E4%B8%80%E6%A0%B7%E4%BD%86%E4%B8%BA%E4%BB%80%E4%B9%88cpu%E4%BD%BF%E7%94%A8%E7%8E%87%E5%B7%AE%E5%88%AB%E5%BE%88%E5%A4%A7/</guid>
    <description><![CDATA[<h1 id="流量一样但为什么cpu使用率差别很大" class="headerLink">
    <a href="#%e6%b5%81%e9%87%8f%e4%b8%80%e6%a0%b7%e4%bd%86%e4%b8%ba%e4%bb%80%e4%b9%88cpu%e4%bd%bf%e7%94%a8%e7%8e%87%e5%b7%ae%e5%88%ab%e5%be%88%e5%a4%a7" class="header-mark"></a>流量一样但为什么CPU使用率差别很大</h1><p>这是我翻到2013年的一篇文章，当时惊动所有公司高人，最后分析得知原因后所有人都跪拜，你要知道那是2013年，正好10年过去了，如果是现在用我们星球的理论去套的话，简直不要太容易</p>
<h2 id="问题描述" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0" class="header-mark"></a>问题描述</h2><blockquote>
  <p>同样大小内存、同样的CPU、同样数量的请求、几乎可以忽略的io，两个机器的load却差异挺大。一个机器的load是12左右，另外一个机器却是30左右</p>
<p>你可以理解这是两台一摸一样的物理机挂在一个LVS 下，LVS 分发流量绝对均衡</p>

</blockquote><p>所以要找出为什么？</p>
<h2 id="分析" class="headerLink">
    <a href="#%e5%88%86%e6%9e%90" class="header-mark"></a>分析</h2><p>两台机器的资源使用率：</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="o">//</span><span class="n">load低</span><span class="err">、</span><span class="n">CPU使用率低</span> <span class="err">的物理机，省略一部分核</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu0</span>  <span class="p">:</span> <span class="mf">67.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">30.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu1</span>  <span class="p">:</span> <span class="mf">64.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">34.3</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu2</span>  <span class="p">:</span> <span class="mf">63.0</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">35.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu3</span>  <span class="p">:</span> <span class="mf">60.0</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">38.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu4</span>  <span class="p">:</span> <span class="mf">59.8</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">37.9</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu5</span>  <span class="p">:</span> <span class="mf">56.7</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">42.3</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu6</span>  <span class="p">:</span> <span class="mf">63.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">34.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu7</span>  <span class="p">:</span> <span class="mf">62.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.0</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">35.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu8</span>  <span class="p">:</span> <span class="mf">58.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">39.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu9</span>  <span class="p">:</span> <span class="mf">55.8</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">42.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">//</span><span class="n">load高</span><span class="err">、</span><span class="n">CPU使用率高</span> <span class="err">的物理机，省略一部分核</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu0</span>  <span class="p">:</span> <span class="mf">90.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.1</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu1</span>  <span class="p">:</span> <span class="mf">88.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">8.0</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.6</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu2</span>  <span class="p">:</span> <span class="mf">90.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.7</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu3</span>  <span class="p">:</span> <span class="mf">86.9</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu4</span>  <span class="p">:</span> <span class="mf">87.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu5</span>  <span class="p">:</span> <span class="mf">87.3</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu6</span>  <span class="p">:</span> <span class="mf">90.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">6.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu7</span>  <span class="p">:</span> <span class="mf">90.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu8</span>  <span class="p">:</span> <span class="mf">89.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">6.7</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu9</span>  <span class="p">:</span> <span class="mf">90.7</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span></span></span></code></pre>
</div>
<p>可以分析产出为什么低，检查CPU是否降频、内存频率是否有差异——检查结果一致</p>
<p>10年前经过一阵 perf top 看热点后终于醒悟过来知道得去看 IPC，也就是相同CPU使用率下，其中慢的机器产出低了一半，那么继续通过perf看IPC：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/FrsOfjsmHa6Zwv67IBgTd-GTI2fT.png   alt="img"  ></p>
<p>可以看到两台机器的IPC是 0.3 VS 0.55，和CPU使用率差异基本一致，instructions几乎一样(意味着流量一样，LVS 不背锅)，但是处理同样的instructions 用掉的cpu-clock 几乎差了一倍，这应该是典型的内存时延大了一倍导致的。IPC 大致等于 instrunctions/cpu-clock （IPC：instrunctions per cycles）</p>
<p>经检查这两台物理机都是两路，虽然CPU型号/内存频率一致，但是主板间跨Socket的 QPI带宽差了一倍(主板是两个不同的服务商提供)。可以通过绑核测试不同Socket/Node 下内存时延来确认这个问题</p>
<p>这是同一台机器下两个Socket 的内存带宽，所以如果跨Socket 内存访问多了就会导致时延更高、CPU使用率更高</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/FmaZP2Wf1xiSoHyi2xHslbAVr71_.png   alt="img"  ></p>
<h2 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>总结</h2><p>在今天我们看到这种问题就很容易了，但我还是要感叹一下在入门前简直太神奇，入门后也不过尔尔，希望你也早点入门。</p>
<p>第一：向CPU要产出，同样的使用率产出得一样，不一样的话肯定是偷懒了，偷懒的直接证据就是 IPC 低了，导致IPC 低最常见的是内存时延高(内存频率、跨Node/Socket 等，或者内存碎片)；延伸阅读：<a href="https://t.zsxq.com/10fYf762S" target="_blank" rel="noopener noreferrer">性能的本质 IPC</a> ，也是本星球唯二的必读实验</p>
<p>第二：测试工具很完善了，<a href="https://github.com/intel/lmbench" target="_blank" rel="noopener noreferrer">lmbench</a> , 怎么用lmbench <a href="https://plantegg.github.io/2022/01/13/%e4%b8%8d%e5%90%8cCPU%e6%80%a7%e8%83%bd%e5%a4%a7PK/" target="_blank" rel="noopener noreferrer">可以看这篇</a> ; 怎么使用perf <a href="https://plantegg.github.io/2021/05/16/Perf_IPC%e4%bb%a5%e5%8f%8aCPU%e5%88%a9%e7%94%a8%e7%8e%87/" target="_blank" rel="noopener noreferrer">Perf IPC以及CPU性能</a></p>
<p>，学成后装逼可以看 <a href="https://plantegg.github.io/2022/03/15/%e8%ae%b0%e4%b8%80%e6%ac%a1%e5%90%ac%e9%a3%8e%e6%89%87%e5%a3%b0%e9%9f%b3%e6%9d%a5%e5%ae%9a%e4%bd%8d%e6%80%a7%e8%83%bd/" target="_blank" rel="noopener noreferrer">听风扇声音来定位性能瓶颈</a></p>
<p>我以前说过每个领域都有一些核心知识点，IPC 就是CPU领域的核心知识点，和tcp的rmem/wmem 一样很容易引导你入门</p>
<p>计算机专业里非要挑几个必学的知识点肯定得有计算机组成原理，但计算机组成原理内容太多，都去看也不现实，况且很多过时的东西，那么我只希望你能记住计算机组成原理里有个最核心的麻烦：内存墙——CPU 访问内存太慢导致了内存墙是我们碰到众多性能问题的最主要、最核心的一个，结合今天这个案例掌握IPC后再来学内存墙，再到理解计算机组成原理就对了，从一个实用的小点入手。</p>
<p>计算机专业里除掉组成原理(有点高大上，没那么接地气)，另外一个我觉得最有用的是网络——看着low但是接地气，问题多，很实用</p>
<p>2011年的文章：</p>
<h4 id="详解服务器内存带宽计算和使用情况测量httpblogyufenginfoarchives1511" class="headerLink">
    <a href="#%e8%af%a6%e8%a7%a3%e6%9c%8d%e5%8a%a1%e5%99%a8%e5%86%85%e5%ad%98%e5%b8%a6%e5%ae%bd%e8%ae%a1%e7%ae%97%e5%92%8c%e4%bd%bf%e7%94%a8%e6%83%85%e5%86%b5%e6%b5%8b%e9%87%8fhttpblogyufenginfoarchives1511" class="header-mark"></a><strong><a href="http://blog.yufeng.info/archives/1511" target="_blank" rel="noopener noreferrer">详解服务器内存带宽计算和使用情况测量</a></strong></h4><p>更好的工具来发现类似问题：https://github.com/intel/numatop</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/FlOhgPPnxN3DcMRPUvNvbZOuQy0q.png   alt="img"  ></p>
<h2 id="如果你觉得看完对你很有帮助可以通过如下方式找到我" class="headerLink">
    <a href="#%e5%a6%82%e6%9e%9c%e4%bd%a0%e8%a7%89%e5%be%97%e7%9c%8b%e5%ae%8c%e5%af%b9%e4%bd%a0%e5%be%88%e6%9c%89%e5%b8%ae%e5%8a%a9%e5%8f%af%e4%bb%a5%e9%80%9a%e8%bf%87%e5%a6%82%e4%b8%8b%e6%96%b9%e5%bc%8f%e6%89%be%e5%88%b0%e6%88%91" class="header-mark"></a>如果你觉得看完对你很有帮助可以通过如下方式找到我</h2><p>find me on twitter: <a href="https://twitter.com/plantegg" target="_blank" rel="noopener noreferrer">@plantegg</a></p>
<p>知识星球：<a href="https://t.zsxq.com/0cSFEUh2J" target="_blank" rel="noopener noreferrer">https://t.zsxq.com/0cSFEUh2J</a></p>
<p>开了一个星球，在里面讲解一些案例、知识、学习方法，肯定没法让大家称为顶尖程序员(我自己都不是)，只是希望用我的方法、知识、经验、案例作为你的垫脚石，帮助你快速、早日成为一个基本合格的程序员。</p>
<p>争取在星球内：</p>
<ul>
<li>养成基本动手能力</li>
<li>拥有起码的分析推理能力&ndash;按我接触的程序员，大多都是没有逻辑的</li>
<li>知识上教会你几个关键的知识点</li>
</ul>
<!-- raw HTML omitted -->
]]></description>
</item><item>
    <title>比较不同CPU下的分支预测</title>
    <link>http://localhost:1313/posts/%E6%AF%94%E8%BE%83%E4%B8%8D%E5%90%8Ccpu%E4%B8%8B%E7%9A%84%E5%88%86%E6%94%AF%E9%A2%84%E6%B5%8B/</link>
    <pubDate>Sun, 16 Apr 2023 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E6%AF%94%E8%BE%83%E4%B8%8D%E5%90%8Ccpu%E4%B8%8B%E7%9A%84%E5%88%86%E6%94%AF%E9%A2%84%E6%B5%8B/</guid>
    <description><![CDATA[<h1 id="比较不同cpu下的分支预测" class="headerLink">
    <a href="#%e6%af%94%e8%be%83%e4%b8%8d%e5%90%8ccpu%e4%b8%8b%e7%9a%84%e5%88%86%e6%94%af%e9%a2%84%e6%b5%8b" class="header-mark"></a>比较不同CPU下的分支预测</h1><h2 id="目的" class="headerLink">
    <a href="#%e7%9b%ae%e7%9a%84" class="header-mark"></a>目的</h2><p>本文通过一段对分支预测是否友好的代码来验证 branch load miss 差异，已经最终带来的 性能差异。同时在x86和aarch64 下各选几款CPU共5款进行差异性对比</p>
<h2 id="cpu-情况" class="headerLink">
    <a href="#cpu-%e6%83%85%e5%86%b5" class="header-mark"></a>CPU 情况</h2><h3 id="intel-x86" class="headerLink">
    <a href="#intel-x86" class="header-mark"></a>intel x86</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#lscpu</span>
</span></span><span class="line"><span class="cl"><span class="n">Architecture</span><span class="p">:</span>          <span class="n">x86_64</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">op</span><span class="o">-</span><span class="n">mode</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>        <span class="mi">32</span><span class="o">-</span><span class="n">bit</span><span class="p">,</span> <span class="mi">64</span><span class="o">-</span><span class="n">bit</span>
</span></span><span class="line"><span class="cl"><span class="n">Byte</span> <span class="n">Order</span><span class="p">:</span>            <span class="n">Little</span> <span class="n">Endian</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>                <span class="mi">48</span>
</span></span><span class="line"><span class="cl"><span class="n">On</span><span class="o">-</span><span class="n">line</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">list</span><span class="p">:</span>   <span class="mi">0</span><span class="o">-</span><span class="mi">47</span>
</span></span><span class="line"><span class="cl"><span class="ne">Thread</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">core</span><span class="p">:</span>    <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">Core</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">socket</span><span class="p">:</span>    <span class="mi">24</span>
</span></span><span class="line"><span class="cl"><span class="n">Socket</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>             <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>          <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">Vendor</span> <span class="n">ID</span><span class="p">:</span>             <span class="n">GenuineIntel</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">family</span><span class="p">:</span>            <span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span><span class="p">:</span>                 <span class="mi">85</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span> <span class="n">name</span><span class="p">:</span>            <span class="n">Intel</span><span class="p">(</span><span class="n">R</span><span class="p">)</span> <span class="n">Xeon</span><span class="p">(</span><span class="n">R</span><span class="p">)</span> <span class="n">Platinum</span> <span class="mi">8163</span> <span class="n">CPU</span> <span class="err">@</span> <span class="mf">2.50</span><span class="n">GHz</span>
</span></span><span class="line"><span class="cl"><span class="n">Stepping</span><span class="p">:</span>              <span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">MHz</span><span class="p">:</span>               <span class="mf">2500.195</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">max</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">3100.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">min</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">1000.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">BogoMIPS</span><span class="p">:</span>              <span class="mf">4998.89</span>
</span></span><span class="line"><span class="cl"><span class="n">Virtualization</span><span class="p">:</span>        <span class="n">VT</span><span class="o">-</span><span class="n">x</span>
</span></span><span class="line"><span class="cl"><span class="n">L1d</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">32</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L1i</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">32</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L2</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">1024</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L3</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">33792</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node0</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">0</span><span class="o">-</span><span class="mi">23</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node1</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">24</span><span class="o">-</span><span class="mi">47</span>
</span></span><span class="line"><span class="cl"><span class="n">Flags</span><span class="p">:</span>                 <span class="n">fpu</span> <span class="n">vme</span> <span class="n">de</span> <span class="n">pse</span> <span class="n">tsc</span> <span class="n">msr</span> <span class="n">pae</span> <span class="n">mce</span> <span class="n">cx8</span> <span class="n">apic</span> <span class="n">sep</span> <span class="n">mtrr</span> <span class="n">pge</span> <span class="n">mca</span> <span class="n">cmov</span> <span class="n">pat</span> <span class="n">pse36</span> <span class="n">clflush</span> <span class="n">dts</span> <span class="n">acpi</span> <span class="n">mmx</span> <span class="n">fxsr</span> <span class="n">sse</span> <span class="n">sse2</span> <span class="n">ss</span> <span class="n">ht</span> <span class="n">tm</span> <span class="n">pbe</span> <span class="n">syscall</span> <span class="n">nx</span> <span class="n">pdpe1gb</span> <span class="n">rdtscp</span> <span class="n">lm</span> <span class="n">constant_tsc</span> <span class="n">arch_perfmon</span> <span class="n">pebs</span> <span class="n">bts</span> <span class="n">rep_good</span> <span class="n">nopl</span> <span class="n">xtopology</span> <span class="n">nonstop_tsc</span> <span class="n">aperfmperf</span> <span class="n">eagerfpu</span> <span class="n">pni</span> <span class="n">pclmulqdq</span> <span class="n">dtes64</span> <span class="n">monitor</span> <span class="n">ds_cpl</span> <span class="n">vmx</span> <span class="n">smx</span> <span class="n">est</span> <span class="n">tm2</span> <span class="n">ssse3</span> <span class="n">fma</span> <span class="n">cx16</span> <span class="n">xtpr</span> <span class="n">pdcm</span> <span class="n">pcid</span> <span class="n">dca</span> <span class="n">sse4_1</span> <span class="n">sse4_2</span> <span class="n">x2apic</span> <span class="n">movbe</span> <span class="n">popcnt</span> <span class="n">tsc_deadline_timer</span> <span class="n">aes</span> <span class="n">xsave</span> <span class="n">avx</span> <span class="n">f16c</span> <span class="n">rdrand</span> <span class="n">lahf_lm</span> <span class="n">abm</span> <span class="mi">3</span><span class="n">dnowprefetch</span> <span class="n">ida</span> <span class="n">arat</span> <span class="n">epb</span> <span class="n">invpcid_single</span> <span class="n">pln</span> <span class="n">pts</span> <span class="n">dtherm</span> <span class="n">spec_ctrl</span> <span class="n">ibpb_support</span> <span class="n">tpr_shadow</span> <span class="n">vnmi</span> <span class="n">flexpriority</span> <span class="n">ept</span> <span class="n">vpid</span> <span class="n">fsgsbase</span> <span class="n">tsc_adjust</span> <span class="n">bmi1</span> <span class="n">hle</span> <span class="n">avx2</span> <span class="n">smep</span> <span class="n">bmi2</span> <span class="n">erms</span> <span class="n">invpcid</span> <span class="n">rtm</span> <span class="n">cqm</span> <span class="n">mpx</span> <span class="n">rdt</span> <span class="n">avx512f</span> <span class="n">avx512dq</span> <span class="n">rdseed</span> <span class="n">adx</span> <span class="n">smap</span> <span class="n">clflushopt</span> <span class="n">avx512cd</span> <span class="n">avx512bw</span> <span class="n">avx512vl</span> <span class="n">xsaveopt</span> <span class="n">xsavec</span> <span class="n">xgetbv1</span> <span class="n">cqm_llc</span> <span class="n">cqm_occup_llc</span> <span class="n">cqm_mbm_total</span> <span class="n">cqm_mbm_local</span> <span class="n">cat_l3</span> <span class="n">mba</span></span></span></code></pre>
</div>
<h3 id="hygon-7260" class="headerLink">
    <a href="#hygon-7260" class="header-mark"></a>hygon 7260</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:        x86_64
</span></span><span class="line"><span class="cl">CPU op-mode(s):      32-bit, 64-bit
</span></span><span class="line"><span class="cl">Byte Order:          Little Endian
</span></span><span class="line"><span class="cl">Address sizes:       43 bits physical, 48 bits virtual
</span></span><span class="line"><span class="cl">CPU(s):              48
</span></span><span class="line"><span class="cl">On-line CPU(s) list: 0-47
</span></span><span class="line"><span class="cl">Thread(s) per core:  1
</span></span><span class="line"><span class="cl">Core(s) per socket:  24
</span></span><span class="line"><span class="cl">Socket(s):           2
</span></span><span class="line"><span class="cl">NUMA node(s):        8
</span></span><span class="line"><span class="cl">Vendor ID:           HygonGenuine
</span></span><span class="line"><span class="cl">CPU family:          24
</span></span><span class="line"><span class="cl">Model:               1
</span></span><span class="line"><span class="cl">Model name:          Hygon C86 7260 24-core Processor
</span></span><span class="line"><span class="cl">Stepping:            1
</span></span><span class="line"><span class="cl">Frequency boost:     enabled
</span></span><span class="line"><span class="cl">CPU MHz:             1069.534
</span></span><span class="line"><span class="cl">CPU max MHz:         2200.0000
</span></span><span class="line"><span class="cl">CPU min MHz:         1200.0000
</span></span><span class="line"><span class="cl">BogoMIPS:            4399.38
</span></span><span class="line"><span class="cl">Virtualization:      AMD-V
</span></span><span class="line"><span class="cl">L1d cache:           32K
</span></span><span class="line"><span class="cl">L1i cache:           64K
</span></span><span class="line"><span class="cl">L2 cache:            512K
</span></span><span class="line"><span class="cl">L3 cache:            8192K
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):   0-5
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):   6-11
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):   12-17
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):   18-23
</span></span><span class="line"><span class="cl">NUMA node4 CPU(s):   24-29
</span></span><span class="line"><span class="cl">NUMA node5 CPU(s):   30-35
</span></span><span class="line"><span class="cl">NUMA node6 CPU(s):   36-41
</span></span><span class="line"><span class="cl">NUMA node7 CPU(s):   42-47</span></span></code></pre>
</div>
<h3 id="arm-鲲鹏920" class="headerLink">
    <a href="#arm-%e9%b2%b2%e9%b9%8f920" class="header-mark"></a>ARM 鲲鹏920</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-3" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:          aarch64
</span></span><span class="line"><span class="cl">Byte Order:            Little Endian
</span></span><span class="line"><span class="cl">CPU(s):                96
</span></span><span class="line"><span class="cl">On-line CPU(s) list:   0-95
</span></span><span class="line"><span class="cl">Thread(s) per core:    1
</span></span><span class="line"><span class="cl">Core(s) per socket:    48
</span></span><span class="line"><span class="cl">Socket(s):             2
</span></span><span class="line"><span class="cl">NUMA node(s):          4
</span></span><span class="line"><span class="cl">Model:                 0
</span></span><span class="line"><span class="cl">CPU max MHz:           2600.0000
</span></span><span class="line"><span class="cl">CPU min MHz:           200.0000
</span></span><span class="line"><span class="cl">BogoMIPS:              200.00
</span></span><span class="line"><span class="cl">L1d cache:             64K
</span></span><span class="line"><span class="cl">L1i cache:             64K
</span></span><span class="line"><span class="cl">L2 cache:              512K
</span></span><span class="line"><span class="cl">L3 cache:              24576K
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):     0-23
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):     24-47
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):     48-71
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):     72-95
</span></span><span class="line"><span class="cl">Flags:                 fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm jscvt fcma dcpop asimddp asimdfhm</span></span></code></pre>
</div>
<h3 id="arm-m710" class="headerLink">
    <a href="#arm-m710" class="header-mark"></a>ARM M710</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-4" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:          aarch64
</span></span><span class="line"><span class="cl">Byte Order:            Little Endian
</span></span><span class="line"><span class="cl">CPU(s):                128
</span></span><span class="line"><span class="cl">On-line CPU(s) list:   0-127
</span></span><span class="line"><span class="cl">Thread(s) per core:    1
</span></span><span class="line"><span class="cl">Core(s) per socket:    128
</span></span><span class="line"><span class="cl">Socket(s):             1
</span></span><span class="line"><span class="cl">NUMA node(s):          2
</span></span><span class="line"><span class="cl">Model:                 0
</span></span><span class="line"><span class="cl">BogoMIPS:              100.00
</span></span><span class="line"><span class="cl">L1d cache:             64K
</span></span><span class="line"><span class="cl">L1i cache:             64K
</span></span><span class="line"><span class="cl">L2 cache:              1024K
</span></span><span class="line"><span class="cl">L3 cache:              65536K
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):     0-63
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):     64-127
</span></span><span class="line"><span class="cl">Flags:                 fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm jscvt fcma lrcpc dcpop sha3 sm3 sm4 asimddp sha512 sve asimdfhm dit uscat ilrcpc flagm ssbs sb dcpodp sve2 sveaes svepmull svebitperm svesha3 svesm4 flagm2 frint svei8mm svebf16 i8mm bf16 dgh</span></span></code></pre>
</div>
<h3 id="arm-ft-s2500" class="headerLink">
    <a href="#arm-ft-s2500" class="header-mark"></a>ARM FT S2500</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-5" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:          aarch64
</span></span><span class="line"><span class="cl">Byte Order:            Little Endian
</span></span><span class="line"><span class="cl">CPU(s):                128
</span></span><span class="line"><span class="cl">On-line CPU(s) list:   0-127
</span></span><span class="line"><span class="cl">Thread(s) per core:    1
</span></span><span class="line"><span class="cl">Core(s) per socket:    64
</span></span><span class="line"><span class="cl">Socket(s):             2
</span></span><span class="line"><span class="cl">NUMA node(s):          16
</span></span><span class="line"><span class="cl">Model:                 3
</span></span><span class="line"><span class="cl">BogoMIPS:              100.00
</span></span><span class="line"><span class="cl">L1d cache:             32K
</span></span><span class="line"><span class="cl">L1i cache:             32K
</span></span><span class="line"><span class="cl">L2 cache:              2048K
</span></span><span class="line"><span class="cl">L3 cache:              65536K
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):     0-7
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):     8-15
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):     16-23
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):     24-31
</span></span><span class="line"><span class="cl">NUMA node4 CPU(s):     32-39
</span></span><span class="line"><span class="cl">NUMA node5 CPU(s):     40-47
</span></span><span class="line"><span class="cl">NUMA node6 CPU(s):     48-55
</span></span><span class="line"><span class="cl">NUMA node7 CPU(s):     56-63
</span></span><span class="line"><span class="cl">NUMA node8 CPU(s):     64-71
</span></span><span class="line"><span class="cl">NUMA node9 CPU(s):     72-79
</span></span><span class="line"><span class="cl">NUMA node10 CPU(s):    80-87
</span></span><span class="line"><span class="cl">NUMA node11 CPU(s):    88-95
</span></span><span class="line"><span class="cl">NUMA node12 CPU(s):    96-103
</span></span><span class="line"><span class="cl">NUMA node13 CPU(s):    104-111
</span></span><span class="line"><span class="cl">NUMA node14 CPU(s):    112-119
</span></span><span class="line"><span class="cl">NUMA node15 CPU(s):    120-127
</span></span><span class="line"><span class="cl">Flags:                 fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid</span></span></code></pre>
</div>
<h2 id="测试代码httpsstackoverflowcomquestions11227809why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e4%bb%a3%e7%a0%81httpsstackoverflowcomquestions11227809why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array" class="header-mark"></a><a href="https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array" target="_blank" rel="noopener noreferrer">测试代码</a></h2><p>对一个数组中较大的一半的值累加：</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">c&#43;&#43;</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-6" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;ctime&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 随机产生整数，用分区函数填充，以避免出现分桶不均
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">const</span> <span class="kt">unsigned</span> <span class="n">arraySize</span> <span class="o">=</span> <span class="mi">32768</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="kt">int</span> <span class="n">data</span><span class="p">[</span><span class="n">arraySize</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">arraySize</span><span class="p">;</span> <span class="o">++</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">rand</span><span class="p">()</span> <span class="o">%</span> <span class="mi">256</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">//排序后数据有序，CPU可以准确预测到if的分支
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">std</span><span class="o">::</span><span class="n">sort</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">data</span> <span class="o">+</span> <span class="n">arraySize</span><span class="p">);</span> <span class="c1">//预先排序，也可以注释掉，注释掉表示随机乱序几乎无法预测
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">    <span class="c1">// 测试部分
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">clock_t</span> <span class="n">start</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">    <span class="kt">long</span> <span class="kt">long</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100000</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// 主要计算部分，选一半元素参与计算
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">for</span> <span class="p">(</span><span class="kt">unsigned</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">c</span> <span class="o">&lt;</span> <span class="n">arraySize</span><span class="p">;</span> <span class="o">++</span><span class="n">c</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">c</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">128</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">sum</span> <span class="o">+=</span> <span class="n">data</span><span class="p">[</span><span class="n">c</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">double</span> <span class="n">elapsedTime</span> <span class="o">=</span> <span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">clock</span><span class="p">()</span> <span class="o">-</span> <span class="n">start</span><span class="p">)</span> <span class="o">/</span> <span class="n">CLOCKS_PER_SEC</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">elapsedTime</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;sum = &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">sum</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre>
</div>
<p>以上代码可以注释掉第15行，也就是不对代码排序直接累加，不排序的话 if (data[c] &gt;= 128) 有50% 概率成立，排序后前一半元素if都不成立，后一半元素if都成立，导致CPU流水线很好预测后面的代码，可以提前加载运算打高IPC</p>
<h2 id="测试结果" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e7%bb%93%e6%9e%9c" class="header-mark"></a>测试结果</h2><h3 id="aarch64-鲲鹏920" class="headerLink">
    <a href="#aarch64-%e9%b2%b2%e9%b9%8f920" class="header-mark"></a>aarch64 鲲鹏920</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-7" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">11.44</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           <span class="mi">470</span><span class="p">,</span><span class="mi">740</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">59.99</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span><span class="p">,</span><span class="mi">716</span><span class="p">,</span><span class="mi">627</span><span class="p">,</span><span class="mi">485</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2595.890 M/sec                    (60.03%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">96</span><span class="p">,</span><span class="mi">469</span><span class="p">,</span><span class="mi">435</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.420 % of all cache refs      (60.03%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">984</span><span class="p">,</span><span class="mi">316</span><span class="p">,</span><span class="mi">728</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1"># 2007.791 M/sec                    (60.03%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span><span class="p">,</span><span class="mi">716</span><span class="p">,</span><span class="mi">018</span><span class="p">,</span><span class="mi">641</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.596 GHz                      (65.02%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">666</span><span class="p">,</span><span class="mi">813</span><span class="p">,</span><span class="mi">837</span>      <span class="n">instructions</span>              <span class="c1">#    2.82  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.10  stalled cycles per insn  (65.02%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">8</span><span class="p">,</span><span class="mi">765</span><span class="p">,</span><span class="mi">807</span><span class="p">,</span><span class="mi">804</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   29.50% backend cycles idle      (65.02%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">8</span><span class="p">,</span><span class="mi">917</span><span class="p">,</span><span class="mi">112</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    0.03% frontend cycles idle     (65.02%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">5</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">11</span><span class="p">,</span><span class="mf">447.57</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">132</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.012 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">132</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.012 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">11</span><span class="p">,</span><span class="mf">447.57</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">        <span class="mi">96</span><span class="p">,</span><span class="mi">471</span><span class="p">,</span><span class="mi">779</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.42% of all L1-dcache accesses  (65.02%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">985</span><span class="p">,</span><span class="mi">408</span><span class="p">,</span><span class="mi">745</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 2007.886 M/sec                    (65.02%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">96</span><span class="p">,</span><span class="mi">472</span><span class="p">,</span><span class="mi">614</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>    <span class="c1">#    8.427 M/sec                    (65.02%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">986</span><span class="p">,</span><span class="mi">056</span><span class="p">,</span><span class="mi">706</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1"># 2007.943 M/sec                    (65.02%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">184</span><span class="p">,</span><span class="mi">402</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (65.02%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">14</span><span class="p">,</span><span class="mi">779</span><span class="p">,</span><span class="mi">996</span><span class="p">,</span><span class="mi">797</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1291.104 M/sec                    (64.99%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">330</span><span class="p">,</span><span class="mi">651</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.029 M/sec                    (64.96%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">561</span><span class="p">,</span><span class="mi">353</span><span class="p">,</span><span class="mi">921</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  573.166 M/sec                    (64.96%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">3</span><span class="p">,</span><span class="mi">464</span><span class="p">,</span><span class="mi">612</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.02% of all dTLB cache accesses  (64.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span><span class="p">,</span><span class="mi">008</span><span class="p">,</span><span class="mi">097</span><span class="p">,</span><span class="mi">187</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 2009.868 M/sec                    (59.96%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">745</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all iTLB cache accesses  (59.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">14</span><span class="p">,</span><span class="mi">779</span><span class="p">,</span><span class="mi">577</span><span class="p">,</span><span class="mi">851</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 1291.067 M/sec                    (59.96%)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">30.92</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">639</span><span class="p">,</span><span class="mi">558</span><span class="p">,</span><span class="mi">981</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">59.96</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">80</span><span class="p">,</span><span class="mi">284</span><span class="p">,</span><span class="mi">783</span><span class="p">,</span><span class="mi">419</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2595.949 M/sec                    (59.96%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">118</span><span class="p">,</span><span class="mi">459</span><span class="p">,</span><span class="mi">436</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.356 % of all cache refs      (59.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">285</span><span class="p">,</span><span class="mi">701</span><span class="p">,</span><span class="mi">200</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1"># 1076.269 M/sec                    (59.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">80</span><span class="p">,</span><span class="mi">283</span><span class="p">,</span><span class="mi">427</span><span class="p">,</span><span class="mi">379</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.596 GHz                      (64.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">694</span><span class="p">,</span><span class="mi">841</span><span class="p">,</span><span class="mi">472</span>      <span class="n">instructions</span>              <span class="c1">#    1.04  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.11  stalled cycles per insn  (64.98%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">8</span><span class="p">,</span><span class="mi">849</span><span class="p">,</span><span class="mi">746</span><span class="p">,</span><span class="mi">372</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   11.02% backend cycles idle      (64.99%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">8</span><span class="p">,</span><span class="mi">064</span><span class="p">,</span><span class="mi">207</span><span class="p">,</span><span class="mi">583</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#   10.04% frontend cycles idle     (65.00%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">10</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">30</span><span class="p">,</span><span class="mf">926.95</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">133</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.004 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">133</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.004 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">30</span><span class="p">,</span><span class="mf">926.95</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">118</span><span class="p">,</span><span class="mi">445</span><span class="p">,</span><span class="mi">576</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.36% of all L1-dcache accesses  (65.02%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">286</span><span class="p">,</span><span class="mi">586</span><span class="p">,</span><span class="mi">418</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1076.297 M/sec                    (65.03%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">118</span><span class="p">,</span><span class="mi">441</span><span class="p">,</span><span class="mi">599</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>    <span class="c1">#    3.830 M/sec                    (65.04%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">286</span><span class="p">,</span><span class="mi">751</span><span class="p">,</span><span class="mi">407</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1"># 1076.302 M/sec                    (65.05%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">410</span><span class="p">,</span><span class="mi">040</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (65.05%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">51</span><span class="p">,</span><span class="mi">611</span><span class="p">,</span><span class="mi">031</span><span class="p">,</span><span class="mi">810</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1668.805 M/sec                    (65.04%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">639</span><span class="p">,</span><span class="mi">731</span><span class="p">,</span><span class="mi">725</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   53.020 M/sec                    (65.03%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span><span class="p">,</span><span class="mi">520</span><span class="p">,</span><span class="mi">634</span><span class="p">,</span><span class="mi">791</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  243.174 M/sec                    (65.02%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">3</span><span class="p">,</span><span class="mi">536</span><span class="p">,</span><span class="mi">061</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.01% of all dTLB cache accesses  (65.00%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">47</span><span class="p">,</span><span class="mi">898</span><span class="p">,</span><span class="mi">134</span><span class="p">,</span><span class="mi">543</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 1548.751 M/sec                    (59.99%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">2</span><span class="p">,</span><span class="mi">529</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all iTLB cache accesses  (59.97%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">51</span><span class="p">,</span><span class="mi">612</span><span class="p">,</span><span class="mi">575</span><span class="p">,</span><span class="mi">118</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 1668.854 M/sec                    (59.96%)    </span></span></span></code></pre>
</div>
<p>以上在相同CPU下数据对比可以看到核心差异是branch-load-misses和branch-misses，当然最终也体现在 IPC 数值上，排序后IPC更高不是因为数据有序取起来更快，而是因为执行逻辑更容易提前预测，也就是可以提前加载if代码到cache中。符合预期</p>
<h3 id="aarch64-m710" class="headerLink">
    <a href="#aarch64-m710" class="header-mark"></a>aarch64 M710</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-8" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-icache-load-misses,L1-icache-loads,LLC-load-misses,LLC-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">8.20237</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           <span class="mi">912</span><span class="p">,</span><span class="mi">836</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">29.86</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">560</span><span class="p">,</span><span class="mi">165</span><span class="p">,</span><span class="mi">604</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2748.461 M/sec                    (29.91%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">068</span><span class="p">,</span><span class="mi">961</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.892 % of all cache refs      (29.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">998</span><span class="p">,</span><span class="mi">186</span><span class="p">,</span><span class="mi">284</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1"># 2801.824 M/sec                    (30.01%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">559</span><span class="p">,</span><span class="mi">518</span><span class="p">,</span><span class="mi">941</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.748 GHz                      (35.03%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">77</span><span class="p">,</span><span class="mi">068</span><span class="p">,</span><span class="mi">271</span><span class="p">,</span><span class="mi">833</span>      <span class="n">instructions</span>              <span class="c1">#    3.42  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.06  stalled cycles per insn  (35.08%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">4</span><span class="p">,</span><span class="mi">892</span><span class="p">,</span><span class="mi">933</span><span class="p">,</span><span class="mi">264</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   21.69% backend cycles idle      (35.13%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">103</span><span class="p">,</span><span class="mi">203</span><span class="p">,</span><span class="mi">963</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    4.89% frontend cycles idle     (35.13%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">17</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">8</span><span class="p">,</span><span class="mf">208.29</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">3</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">227</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.028 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">227</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.028 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">8</span><span class="p">,</span><span class="mf">208.30</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">384</span><span class="p">,</span><span class="mi">990</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.89% of all L1-dcache accesses  (35.13%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">997</span><span class="p">,</span><span class="mi">494</span><span class="p">,</span><span class="mi">522</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 2801.739 M/sec                    (35.13%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">66</span><span class="p">,</span><span class="mi">804</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (35.13%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">15</span><span class="p">,</span><span class="mi">486</span><span class="p">,</span><span class="mi">704</span><span class="p">,</span><span class="mi">750</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1886.715 M/sec                    (30.12%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">76</span><span class="p">,</span><span class="mi">066</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#    0.00% of all LL-cache accesses  (30.09%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.000 K/sec                    (30.03%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">672</span><span class="p">,</span><span class="mi">231</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.082 M/sec                    (29.98%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">9</span><span class="p">,</span><span class="mi">844</span><span class="p">,</span><span class="mi">109</span><span class="p">,</span><span class="mi">024</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1"># 1199.288 M/sec                    (29.93%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">107</span><span class="p">,</span><span class="mi">198</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache accesses  (29.89%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">22</span><span class="p">,</span><span class="mi">998</span><span class="p">,</span><span class="mi">647</span><span class="p">,</span><span class="mi">232</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 2801.880 M/sec                    (29.84%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">9</span><span class="p">,</span><span class="mi">497</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.08% of all iTLB cache accesses  (29.81%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">11</span><span class="p">,</span><span class="mi">755</span><span class="p">,</span><span class="mi">825</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    1.432 M/sec                    (29.82%)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       <span class="mf">8.210235171</span> <span class="n">seconds</span> <span class="n">time</span> <span class="n">elapsed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-icache-load-misses,L1-icache-loads,LLC-load-misses,LLC-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">16.8872</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">229</span><span class="p">,</span><span class="mi">182</span><span class="p">,</span><span class="mi">485</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">29.93</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">46</span><span class="p">,</span><span class="mi">401</span><span class="p">,</span><span class="mi">675</span><span class="p">,</span><span class="mi">872</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2747.200 M/sec                    (29.95%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">206</span><span class="p">,</span><span class="mi">116</span><span class="p">,</span><span class="mi">950</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.546 % of all cache refs      (29.97%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">37</span><span class="p">,</span><span class="mi">773</span><span class="p">,</span><span class="mi">036</span><span class="p">,</span><span class="mi">315</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1"># 2236.343 M/sec                    (30.01%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">46</span><span class="p">,</span><span class="mi">410</span><span class="p">,</span><span class="mi">071</span><span class="p">,</span><span class="mi">081</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.748 GHz                      (35.03%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">77</span><span class="p">,</span><span class="mi">083</span><span class="p">,</span><span class="mi">625</span><span class="p">,</span><span class="mi">280</span>      <span class="n">instructions</span>              <span class="c1">#    1.66  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.06  stalled cycles per insn  (35.07%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">961</span><span class="p">,</span><span class="mi">071</span><span class="p">,</span><span class="mi">890</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#    4.23% backend cycles idle      (35.11%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">4</span><span class="p">,</span><span class="mi">988</span><span class="p">,</span><span class="mi">241</span><span class="p">,</span><span class="mi">014</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#   10.75% frontend cycles idle     (35.11%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">100</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.065 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">16</span><span class="p">,</span><span class="mf">890.39</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    0.997 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">7</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">229</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.014 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">229</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.014 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">16</span><span class="p">,</span><span class="mf">890.69</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    0.997 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">761</span><span class="p">,</span><span class="mi">970</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.54% of all L1-dcache accesses  (35.09%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">37</span><span class="p">,</span><span class="mi">832</span><span class="p">,</span><span class="mi">336</span><span class="p">,</span><span class="mi">945</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 2239.854 M/sec                    (35.06%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">207</span><span class="p">,</span><span class="mi">158</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (35.04%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">41</span><span class="p">,</span><span class="mi">944</span><span class="p">,</span><span class="mi">228</span><span class="p">,</span><span class="mi">741</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 2483.298 M/sec                    (30.00%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">135</span><span class="p">,</span><span class="mi">144</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#    0.00% of all LL-cache accesses  (29.97%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.000 K/sec                    (29.97%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">232</span><span class="p">,</span><span class="mi">325</span><span class="p">,</span><span class="mi">180</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   72.960 M/sec                    (29.96%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">14</span><span class="p">,</span><span class="mi">776</span><span class="p">,</span><span class="mi">289</span><span class="p">,</span><span class="mi">690</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  874.827 M/sec                    (29.96%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">177</span><span class="p">,</span><span class="mi">790</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache accesses  (29.97%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">37</span><span class="p">,</span><span class="mi">839</span><span class="p">,</span><span class="mi">288</span><span class="p">,</span><span class="mi">998</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 2240.266 M/sec                    (29.95%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">46</span><span class="p">,</span><span class="mi">301</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all iTLB cache accesses  (29.94%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">12</span><span class="p">,</span><span class="mi">631</span><span class="p">,</span><span class="mi">307</span><span class="p">,</span><span class="mi">441</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  747.833 M/sec                    (29.92%)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="mf">16.943678377</span> <span class="n">seconds</span> <span class="n">time</span> <span class="n">elapsed</span></span></span></code></pre>
</div>
<p>M710上排序与否和鲲鹏差不多，但是 M710比 鲲鹏要快一些，差别只要有主频高一点点(6%)，另外M710编译后的指令数量也略少(8%)。</p>
<p>最大的差别是没有排序的话 branch-load-misses(1,232,325,180)/branch-loads(14,776,289,690) 比例只有鲲鹏的50%，导致整体 IPC 比鲲鹏高不少(1.66 VS 1.04)</p>
<p>如果是排序后的数据来看 M710比鲲鹏好40%，IPC 好了20%，iTLB-loads 差异特别大</p>
<h3 id="aarch64-ft-s2500" class="headerLink">
    <a href="#aarch64-ft-s2500" class="header-mark"></a>aarch64 FT S2500</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-9" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,iTLB-load-misses ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">16.63</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">298</span><span class="p">,</span><span class="mi">873</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#    0.078 M/sec                    (37.49%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">34</span><span class="p">,</span><span class="mi">893</span><span class="p">,</span><span class="mi">306</span><span class="p">,</span><span class="mi">641</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2096.049 M/sec                    (37.51%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">211</span><span class="p">,</span><span class="mi">447</span><span class="p">,</span><span class="mi">452</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.913 % of all cache refs      (37.53%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span><span class="p">,</span><span class="mi">154</span><span class="p">,</span><span class="mi">909</span><span class="p">,</span><span class="mi">673</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1"># 1390.921 M/sec                    (37.54%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">34</span><span class="p">,</span><span class="mi">891</span><span class="p">,</span><span class="mi">766</span><span class="p">,</span><span class="mi">353</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.096 GHz                      (43.79%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">918</span><span class="p">,</span><span class="mi">069</span><span class="p">,</span><span class="mi">835</span>      <span class="n">instructions</span>              <span class="c1">#    2.41  insns per cycle          (43.79%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">102</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.006 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">16647.131540</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">35</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">384</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.023 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">384</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.023 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">16647.178560</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">211</span><span class="p">,</span><span class="mi">277</span><span class="p">,</span><span class="mi">069</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.91% of all L1-dcache hits    (43.79%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span><span class="p">,</span><span class="mi">168</span><span class="p">,</span><span class="mi">806</span><span class="p">,</span><span class="mi">437</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1391.756 M/sec                    (43.77%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">211</span><span class="p">,</span><span class="mi">376</span><span class="p">,</span><span class="mi">611</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>    <span class="c1">#   12.697 M/sec                    (43.75%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span><span class="p">,</span><span class="mi">172</span><span class="p">,</span><span class="mi">492</span><span class="p">,</span><span class="mi">978</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1"># 1391.977 M/sec                    (43.73%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">6</span><span class="p">,</span><span class="mi">060</span><span class="p">,</span><span class="mi">438</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.364 M/sec                    (43.72%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">23</span><span class="p">,</span><span class="mi">283</span><span class="p">,</span><span class="mi">174</span><span class="p">,</span><span class="mi">318</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1398.626 M/sec                    (37.48%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">201</span><span class="p">,</span><span class="mi">268</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.072 M/sec                    (37.47%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">626</span><span class="p">,</span><span class="mi">003</span><span class="p">,</span><span class="mi">512</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  398.026 M/sec                    (37.47%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">4</span><span class="p">,</span><span class="mi">417</span><span class="p">,</span><span class="mi">981</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.265 M/sec                    (37.47%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">58</span><span class="p">,</span><span class="mi">242</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.003 M/sec                    (37.47%)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,iTLB-load-misses ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">39.8</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">641</span><span class="p">,</span><span class="mi">714</span><span class="p">,</span><span class="mi">982</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#   41.244 M/sec                    (37.50%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">450</span><span class="p">,</span><span class="mi">971</span><span class="p">,</span><span class="mi">727</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2096.514 M/sec                    (37.51%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">209</span><span class="p">,</span><span class="mi">942</span><span class="p">,</span><span class="mi">920</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.625 % of all cache refs      (37.51%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">584</span><span class="p">,</span><span class="mi">108</span><span class="p">,</span><span class="mi">027</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#  843.724 M/sec                    (37.51%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">446</span><span class="p">,</span><span class="mi">991</span><span class="p">,</span><span class="mi">284</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.096 GHz                      (43.76%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">83</span><span class="p">,</span><span class="mi">872</span><span class="p">,</span><span class="mi">213</span><span class="p">,</span><span class="mi">462</span>      <span class="n">instructions</span>              <span class="c1">#    1.01  insns per cycle          (43.75%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">165</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.004 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">39804.395840</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">104</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.003 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">728</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.018 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">728</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.018 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">39804.626860</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">209</span><span class="p">,</span><span class="mi">884</span><span class="p">,</span><span class="mi">485</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.62% of all L1-dcache hits    (43.75%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">591</span><span class="p">,</span><span class="mi">847</span><span class="p">,</span><span class="mi">895</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  843.918 M/sec                    (43.75%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">209</span><span class="p">,</span><span class="mi">796</span><span class="p">,</span><span class="mi">158</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>    <span class="c1">#    5.271 M/sec                    (43.75%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">33</span><span class="p">,</span><span class="mi">595</span><span class="p">,</span><span class="mi">628</span><span class="p">,</span><span class="mi">139</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1">#  844.013 M/sec                    (43.75%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">5</span><span class="p">,</span><span class="mi">575</span><span class="p">,</span><span class="mi">802</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.140 M/sec                    (43.75%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">68</span><span class="p">,</span><span class="mi">272</span><span class="p">,</span><span class="mi">798</span><span class="p">,</span><span class="mi">305</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1715.198 M/sec                    (37.50%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">642</span><span class="p">,</span><span class="mi">653</span><span class="p">,</span><span class="mi">627</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   41.268 M/sec                    (37.50%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">846</span><span class="p">,</span><span class="mi">418</span><span class="p">,</span><span class="mi">902</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  172.001 M/sec                    (37.50%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">4</span><span class="p">,</span><span class="mi">162</span><span class="p">,</span><span class="mi">728</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.105 M/sec                    (37.50%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">57</span><span class="p">,</span><span class="mi">375</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.001 M/sec                    (37.50%)</span></span></span></code></pre>
</div>
<h3 id="intel-x86-8163" class="headerLink">
    <a href="#intel-x86-8163" class="header-mark"></a>Intel x86 8163</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-10" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,ref-cycles,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-stores,L1-icache-load-misses,LLC-load-misses,LLC-loads,LLC-store-misses,LLC-stores,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,dTLB-store-misses,dTLB-stores,iTLB-load-misses,iTLB-loads,node-load-misses,node-loads,node-store-misses,node-stores ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">9.77</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">541</span><span class="p">,</span><span class="mi">060</span><span class="p">,</span><span class="mi">672</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1">#  669.204 M/sec                    (10.72%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">727</span><span class="p">,</span><span class="mi">847</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#    0.01% of all branches          (14.30%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">241</span><span class="p">,</span><span class="mi">730</span><span class="p">,</span><span class="mi">862</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#   24.731 M/sec                    (17.88%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">275</span><span class="p">,</span><span class="mi">443</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   44.685 % of all cache refs      (21.45%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">616</span><span class="p">,</span><span class="mi">413</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#    0.063 M/sec                    (25.03%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">24</span><span class="p">,</span><span class="mi">186</span><span class="p">,</span><span class="mi">369</span><span class="p">,</span><span class="mi">646</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.474 GHz                      (28.60%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span><span class="p">,</span><span class="mi">491</span><span class="p">,</span><span class="mi">804</span><span class="p">,</span><span class="mi">977</span>      <span class="n">instructions</span>              <span class="c1">#    1.22  insns per cycle          (32.18%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">24</span><span class="p">,</span><span class="mi">198</span><span class="p">,</span><span class="mi">780</span><span class="p">,</span><span class="mi">299</span>      <span class="n">ref</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2475.731 M/sec                    (35.75%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">16</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">9774.393202</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">8</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.001 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">490</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.050 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">490</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.050 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">9774.396556</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.001 CPUs utilized</span>
</span></span><span class="line"><span class="cl">        <span class="mi">74</span><span class="p">,</span><span class="mi">078</span><span class="p">,</span><span class="mi">676</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    1.64% of all L1-dcache hits    (189256748561.94%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">4</span><span class="p">,</span><span class="mi">515</span><span class="p">,</span><span class="mi">522</span><span class="p">,</span><span class="mi">850</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  461.975 M/sec                    (189237344482.16%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">3</span><span class="p">,</span><span class="mi">798</span><span class="p">,</span><span class="mi">032</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1">#    0.389 M/sec                    (189217941721.85%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">077</span><span class="p">,</span><span class="mi">146</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.110 M/sec                    (189198537875.18%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">89</span><span class="p">,</span><span class="mi">144</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#   74.54% of all LL-cache hits     (189179139811.86%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">119</span><span class="p">,</span><span class="mi">586</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.012 M/sec                    (189159737036.24%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">3</span><span class="p">,</span><span class="mi">450</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.353 K/sec                    (189140342885.02%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">105</span><span class="p">,</span><span class="mi">021</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">stores</span>                <span class="c1">#    0.011 M/sec                    (7.15%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">458</span><span class="p">,</span><span class="mi">465</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.047 M/sec                    (10.73%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">557</span><span class="p">,</span><span class="mi">558</span><span class="p">,</span><span class="mi">579</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  670.891 M/sec                    (14.30%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">733</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache hits   (17.87%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">12</span><span class="p">,</span><span class="mi">039</span><span class="p">,</span><span class="mi">967</span><span class="p">,</span><span class="mi">837</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1"># 1231.786 M/sec                    (21.44%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">104</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.011 K/sec                    (25.01%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">7</span><span class="p">,</span><span class="mi">040</span><span class="p">,</span><span class="mi">783</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.720 M/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">763</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#   62.80% of all iTLB cache hits   (28.56%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">215</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.124 K/sec                    (28.55%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">168</span><span class="p">,</span><span class="mi">588</span>      <span class="n">node</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.017 M/sec                    (28.55%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">131</span><span class="p">,</span><span class="mi">578</span>      <span class="n">node</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.013 M/sec                    (28.55%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">4</span><span class="p">,</span><span class="mi">484</span>      <span class="n">node</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.459 K/sec                    (7.14%)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">42</span>      <span class="n">node</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.004 K/sec                    (7.14%)</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,ref-cycles,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-stores,L1-icache-load-misses,LLC-load-misses,LLC-loads,LLC-store-misses,LLC-stores,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,dTLB-store-misses,dTLB-stores,iTLB-load-misses,iTLB-loads,node-load-misses,node-loads,node-store-misses,node-stores ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">29.52</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">565</span><span class="p">,</span><span class="mi">036</span><span class="p">,</span><span class="mi">614</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1">#  222.370 M/sec                    (10.72%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">599</span><span class="p">,</span><span class="mi">826</span><span class="p">,</span><span class="mi">737</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#   24.37% of all branches          (14.29%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">730</span><span class="p">,</span><span class="mi">977</span><span class="p">,</span><span class="mi">010</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#   24.760 M/sec                    (17.86%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">920</span><span class="p">,</span><span class="mi">858</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   48.057 % of all cache refs      (21.43%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">916</span><span class="p">,</span><span class="mi">178</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#    0.065 M/sec                    (25.00%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">73</span><span class="p">,</span><span class="mi">123</span><span class="p">,</span><span class="mi">904</span><span class="p">,</span><span class="mi">158</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.477 GHz                      (28.57%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span><span class="p">,</span><span class="mi">618</span><span class="p">,</span><span class="mi">485</span><span class="p">,</span><span class="mi">912</span>      <span class="n">instructions</span>              <span class="c1">#    0.41  insns per cycle          (32.14%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">73</span><span class="p">,</span><span class="mi">152</span><span class="p">,</span><span class="mi">861</span><span class="p">,</span><span class="mi">566</span>      <span class="n">ref</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2477.828 M/sec                    (35.72%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">26</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.001 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">29522.972689</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">13</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">593</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.020 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">593</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.020 K/sec</span>
</span></span><span class="line"><span class="cl">      <span class="mf">29522.976661</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.001 CPUs utilized</span>
</span></span><span class="line"><span class="cl">        <span class="mi">76</span><span class="p">,</span><span class="mi">164</span><span class="p">,</span><span class="mi">025</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    1.68% of all L1-dcache hits    (62596004730.92%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">4</span><span class="p">,</span><span class="mi">521</span><span class="p">,</span><span class="mi">935</span><span class="p">,</span><span class="mi">099</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  153.167 M/sec                    (62593882213.79%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">170</span><span class="p">,</span><span class="mi">288</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1">#    0.040 M/sec                    (62591759384.11%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">2</span><span class="p">,</span><span class="mi">975</span><span class="p">,</span><span class="mi">318</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.101 M/sec                    (62591281765.29%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">178</span><span class="p">,</span><span class="mi">510</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#   66.98% of all LL-cache hits     (62591281765.30%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">266</span><span class="p">,</span><span class="mi">514</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.009 M/sec                    (62591281765.18%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">841</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.232 K/sec                    (62591578887.87%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">335</span><span class="p">,</span><span class="mi">369</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">stores</span>                <span class="c1">#    0.011 M/sec                    (7.15%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">600</span><span class="p">,</span><span class="mi">893</span><span class="p">,</span><span class="mi">693</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   54.225 M/sec                    (10.72%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">565</span><span class="p">,</span><span class="mi">516</span><span class="p">,</span><span class="mi">562</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  222.387 M/sec                    (14.29%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">33</span><span class="p">,</span><span class="mi">070</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache hits   (17.87%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">12</span><span class="p">,</span><span class="mi">043</span><span class="p">,</span><span class="mi">088</span><span class="p">,</span><span class="mi">689</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  407.923 M/sec                    (21.44%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">180</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.006 K/sec                    (25.01%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">2</span><span class="p">,</span><span class="mi">359</span><span class="p">,</span><span class="mi">365</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.080 M/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">9</span><span class="p">,</span><span class="mi">399</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#  849.82% of all iTLB cache hits   (28.58%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">106</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.037 K/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">439</span><span class="p">,</span><span class="mi">052</span>      <span class="n">node</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.015 M/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">367</span><span class="p">,</span><span class="mi">546</span>      <span class="n">node</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.012 M/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">7</span><span class="p">,</span><span class="mi">539</span>      <span class="n">node</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.255 K/sec                    (7.15%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">736</span>      <span class="n">node</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.059 K/sec                    (7.14%)            </span></span></span></code></pre>
</div>
<p>从 x86 和 aarch 对比来看，x86 编译后的指令数是 aarch 的35%，ARM 是精简指令，数量多比较好理解。主频2.5 GHz 较 M710低了11%。</p>
<p>IPC 差异比较大，有一部分是因为 ARM 精简指令本来有较高的 IPC。</p>
<p>从排序前的差异来看除了指令集外导致 IPC 较高的原因主要也是 branch-load-misses(1,232,325,180)/branch-loads(14,776,289,690)  比 intel的 1,602,020,038/6,568,921,480, 也就是 M710的 branch miss 率比 intel 低了一倍。</p>
<p>排序后去掉了 branch miss 差异，M710 比 intel 快了 10%，只要是因为主频的差异</p>
<p>on 8269 3.2GHz</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-11" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,cpu-cycles,instructions,branch-load-misses,branch-loads,task-clock,cpu-clock ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">22.96</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> <span class="ne">Performance</span> <span class="n">counter</span> <span class="n">stats</span> <span class="k">for</span> <span class="s1">&#39;./beforesort&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">573</span><span class="p">,</span><span class="mi">626</span><span class="p">,</span><span class="mi">859</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1">#  286.177 M/sec                    (83.33%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">602</span><span class="p">,</span><span class="mi">898</span><span class="p">,</span><span class="mi">541</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#   24.38% of all branches          (83.33%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">73</span><span class="p">,</span><span class="mi">189</span><span class="p">,</span><span class="mi">204</span><span class="p">,</span><span class="mi">878</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    3.186 GHz                      (66.67%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">29</span><span class="p">,</span><span class="mi">627</span><span class="p">,</span><span class="mi">520</span><span class="p">,</span><span class="mi">323</span>      <span class="n">instructions</span>              <span class="c1">#    0.40  insns per cycle          (83.33%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">602</span><span class="p">,</span><span class="mi">848</span><span class="p">,</span><span class="mi">454</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   69.779 M/sec                    (83.33%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">6</span><span class="p">,</span><span class="mi">572</span><span class="p">,</span><span class="mi">915</span><span class="p">,</span><span class="mi">651</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  286.146 M/sec                    (83.33%)</span>
</span></span><span class="line"><span class="cl">      <span class="mf">22970.482491</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.001 CPUs utilized</span>
</span></span><span class="line"><span class="cl">      <span class="mf">22970.482557</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span></span></span></code></pre>
</div>
<h3 id="hygon-7260-1" class="headerLink">
    <a href="#hygon-7260-1" class="header-mark"></a>hygon 7260</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-12" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-prefetches,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">10.9479</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">     <span class="mi">9</span><span class="p">,</span><span class="mi">848</span><span class="p">,</span><span class="mi">123</span><span class="p">,</span><span class="mi">830</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1">#  898.161 M/sec                    (26.26%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">496</span><span class="p">,</span><span class="mi">734</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#    0.01% of all branches          (26.30%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">713</span><span class="p">,</span><span class="mi">235</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.336 % of all cache refs      (26.34%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">212</span><span class="p">,</span><span class="mi">455</span><span class="p">,</span><span class="mi">257</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#   19.376 M/sec                    (26.37%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">27</span><span class="p">,</span><span class="mi">277</span><span class="p">,</span><span class="mi">461</span><span class="p">,</span><span class="mi">559</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.488 GHz                      (26.41%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">32</span><span class="p">,</span><span class="mi">785</span><span class="p">,</span><span class="mi">270</span><span class="p">,</span><span class="mi">866</span>      <span class="n">instructions</span>              <span class="c1">#    1.20  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.58  stalled cycles per insn  (26.43%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">19</span><span class="p">,</span><span class="mi">069</span><span class="p">,</span><span class="mi">766</span><span class="p">,</span><span class="mi">918</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   69.91% backend cycles idle      (26.43%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">6</span><span class="p">,</span><span class="mi">560</span><span class="p">,</span><span class="mi">109</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    0.02% frontend cycles idle     (26.42%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">086</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.099 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">10</span><span class="p">,</span><span class="mf">964.61</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    0.999 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">154</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.014 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">154</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.014 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">10</span><span class="p">,</span><span class="mf">964.91</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    0.999 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">206</span><span class="p">,</span><span class="mi">294</span><span class="p">,</span><span class="mi">123</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    1.14% of all L1-dcache hits    (26.38%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">18</span><span class="p">,</span><span class="mi">083</span><span class="p">,</span><span class="mi">269</span><span class="p">,</span><span class="mi">173</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1649.217 M/sec                    (26.35%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">499</span><span class="p">,</span><span class="mi">292</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">prefetches</span>      <span class="c1">#   18.742 M/sec                    (26.31%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">749</span><span class="p">,</span><span class="mi">548</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    8.67% of all L1-icache hits    (26.27%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">8</span><span class="p">,</span><span class="mi">643</span><span class="p">,</span><span class="mi">478</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#    0.788 M/sec                    (26.25%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">305</span><span class="p">,</span><span class="mi">577</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.028 M/sec                    (26.25%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">9</span><span class="p">,</span><span class="mi">850</span><span class="p">,</span><span class="mi">674</span><span class="p">,</span><span class="mi">490</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  898.394 M/sec                    (26.25%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">736</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    6.85% of all dTLB cache hits   (26.25%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">98</span><span class="p">,</span><span class="mi">327</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.009 M/sec                    (26.25%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">114</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#   78.62% of all iTLB cache hits   (26.25%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">145</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.013 K/sec                    (26.25%)</span>
</span></span><span class="line"><span class="cl">               
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-prefetches,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">23.3648</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">9</span><span class="p">,</span><span class="mi">843</span><span class="p">,</span><span class="mi">358</span><span class="p">,</span><span class="mi">378</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1">#  421.186 M/sec                    (26.26%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">156</span><span class="p">,</span><span class="mi">804</span><span class="p">,</span><span class="mi">801</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#   11.75% of all branches          (26.28%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">754</span><span class="p">,</span><span class="mi">542</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    0.351 % of all cache refs      (26.29%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">215</span><span class="p">,</span><span class="mi">234</span><span class="p">,</span><span class="mi">724</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#    9.210 M/sec                    (26.31%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">58</span><span class="p">,</span><span class="mi">274</span><span class="p">,</span><span class="mi">116</span><span class="p">,</span><span class="mi">562</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.493 GHz                      (26.33%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">32</span><span class="p">,</span><span class="mi">850</span><span class="p">,</span><span class="mi">416</span><span class="p">,</span><span class="mi">330</span>      <span class="n">instructions</span>              <span class="c1">#    0.56  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.06  stalled cycles per insn  (26.34%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">838</span><span class="p">,</span><span class="mi">222</span><span class="p">,</span><span class="mi">200</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#    3.15% backend cycles idle      (26.34%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">187</span><span class="p">,</span><span class="mi">291</span><span class="p">,</span><span class="mi">146</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    2.04% frontend cycles idle     (26.34%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">             <span class="mi">2</span><span class="p">,</span><span class="mi">326</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.100 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">23</span><span class="p">,</span><span class="mf">370.23</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    0.999 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">150</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.006 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">150</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.006 K/sec</span>
</span></span><span class="line"><span class="cl">         <span class="mi">23</span><span class="p">,</span><span class="mf">370.97</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    0.999 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">207</span><span class="p">,</span><span class="mi">451</span><span class="p">,</span><span class="mi">839</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.82% of all L1-dcache hits    (26.34%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">25</span><span class="p">,</span><span class="mi">180</span><span class="p">,</span><span class="mi">673</span><span class="p">,</span><span class="mi">249</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1"># 1077.451 M/sec                    (26.34%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">669</span><span class="p">,</span><span class="mi">557</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">prefetches</span>      <span class="c1">#    8.800 M/sec                    (26.34%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">725</span><span class="p">,</span><span class="mi">971</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    8.12% of all L1-icache hits    (26.34%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">21</span><span class="p">,</span><span class="mi">265</span><span class="p">,</span><span class="mi">604</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#    0.910 M/sec                    (26.34%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">157</span><span class="p">,</span><span class="mi">454</span><span class="p">,</span><span class="mi">249</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#   49.526 M/sec                    (26.34%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">9</span><span class="p">,</span><span class="mi">843</span><span class="p">,</span><span class="mi">015</span><span class="p">,</span><span class="mi">406</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  421.171 M/sec                    (26.33%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">22</span><span class="p">,</span><span class="mi">287</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    7.08% of all dTLB cache hits   (26.31%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">314</span><span class="p">,</span><span class="mi">618</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.013 M/sec                    (26.29%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">445</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#   44.95% of all iTLB cache hits   (26.28%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">990</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.042 K/sec                    (26.26%)</span></span></span></code></pre>
</div>
<p>hygon 在这两个场景中排序前比 intel 好了 20%，IPC 好30%，但是指令数多了10%，最关键的也是因为hygon的 branch-load-misses 率较低。</p>
<p>排序后 hygon 略慢10%，主要是指令数多了将近10%。</p>
<p>如果直接将 intel 下 编译好的二进制放到 hygon 下运行，完全可以跑通，指令数也显示和 intel 一样了，但是总时间较在hygon下编译的二进制没有变化</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20230308145915585.png   alt="image-20230308145915585"  ></p>
<h2 id="开启-gcc-o3-优化" class="headerLink">
    <a href="#%e5%bc%80%e5%90%af-gcc-o3-%e4%bc%98%e5%8c%96" class="header-mark"></a>开启 gcc O3 优化</h2><h3 id="intel-8163" class="headerLink">
    <a href="#intel-8163" class="header-mark"></a>intel 8163</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-13" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,ref-cycles,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-stores,L1-icache-load-misses,LLC-load-misses,LLC-loads,LLC-store-misses,LLC-stores,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,dTLB-store-misses,dTLB-stores,iTLB-load-misses,iTLB-loads,node-load-misses,node-loads,node-store-misses,node-stores ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">2.94</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">268</span><span class="p">,</span><span class="mi">501</span><span class="p">,</span><span class="mi">946</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1"># 1109.263 M/sec                    (10.74%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">226</span><span class="p">,</span><span class="mi">833</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#    0.01% of all branches          (14.33%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">72</span><span class="p">,</span><span class="mi">998</span><span class="p">,</span><span class="mi">727</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#   24.774 M/sec                    (17.90%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">89</span><span class="p">,</span><span class="mi">636</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   34.026 % of all cache refs      (21.47%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">263</span><span class="p">,</span><span class="mi">434</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#    0.089 M/sec                    (25.03%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span><span class="p">,</span><span class="mi">301</span><span class="p">,</span><span class="mi">839</span><span class="p">,</span><span class="mi">495</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.478 GHz                      (28.59%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">26</span><span class="p">,</span><span class="mi">180</span><span class="p">,</span><span class="mi">809</span><span class="p">,</span><span class="mi">574</span>      <span class="n">instructions</span>              <span class="c1">#    3.59  insns per cycle          (32.16%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span><span class="p">,</span><span class="mi">304</span><span class="p">,</span><span class="mi">150</span><span class="p">,</span><span class="mi">283</span>      <span class="n">ref</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2478.880 M/sec                    (35.73%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">10</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.003 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">2946.550492</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">7</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">370</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.126 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">370</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.126 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">2946.552985</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.001 CPUs utilized</span>
</span></span><span class="line"><span class="cl">        <span class="mi">73</span><span class="p">,</span><span class="mi">550</span><span class="p">,</span><span class="mi">829</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    8.97% of all L1-dcache hits    (627063379426.55%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">820</span><span class="p">,</span><span class="mi">264</span><span class="p">,</span><span class="mi">255</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  278.381 M/sec                    (627063379426.55%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">301</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1">#    0.002 M/sec                    (627063379426.52%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">344</span><span class="p">,</span><span class="mi">639</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.117 M/sec                    (627063379426.51%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">70</span><span class="p">,</span><span class="mi">181</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#   84.80% of all LL-cache hits     (630745019998.59%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">82</span><span class="p">,</span><span class="mi">757</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.028 M/sec                    (630529428492.86%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">592</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.201 K/sec                    (630313967916.99%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">33</span><span class="p">,</span><span class="mi">362</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">stores</span>                <span class="c1">#    0.011 M/sec                    (7.17%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">153</span><span class="p">,</span><span class="mi">522</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.052 M/sec                    (10.75%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">263</span><span class="p">,</span><span class="mi">884</span><span class="p">,</span><span class="mi">498</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1"># 1107.696 M/sec                    (14.33%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">274</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache hits   (17.90%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">2</span><span class="p">,</span><span class="mi">179</span><span class="p">,</span><span class="mi">821</span><span class="p">,</span><span class="mi">780</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  739.787 M/sec                    (21.47%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">8</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.003 K/sec                    (25.04%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">12</span><span class="p">,</span><span class="mi">708</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.004 M/sec                    (28.61%)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">59</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#   52.68% of all iTLB cache hits   (28.60%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">112</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.038 K/sec                    (28.59%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">5</span><span class="p">,</span><span class="mi">919</span>      <span class="n">node</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.002 M/sec                    (28.59%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">648</span>      <span class="n">node</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.559 K/sec                    (28.58%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">560</span>      <span class="n">node</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.190 K/sec                    (7.15%)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">14</span>      <span class="n">node</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.005 K/sec                    (7.14%)</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-instructions,branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,ref-cycles,alignment-faults,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-stores,L1-icache-load-misses,LLC-load-misses,LLC-loads,LLC-store-misses,LLC-stores,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,dTLB-store-misses,dTLB-stores,iTLB-load-misses,iTLB-loads,node-load-misses,node-loads,node-store-misses,node-stores ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">2.95</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">184</span><span class="p">,</span><span class="mi">180</span>      <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span>       <span class="c1"># 1102.320 M/sec                    (10.74%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">791</span><span class="p">,</span><span class="mi">180</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>             <span class="c1">#    0.02% of all branches          (14.35%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">73</span><span class="p">,</span><span class="mi">001</span><span class="p">,</span><span class="mi">075</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#   24.721 M/sec                    (17.93%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">520</span><span class="p">,</span><span class="mi">140</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   82.262 % of all cache refs      (21.52%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">632</span><span class="p">,</span><span class="mi">298</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#    0.214 M/sec                    (25.11%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span><span class="p">,</span><span class="mi">309</span><span class="p">,</span><span class="mi">286</span><span class="p">,</span><span class="mi">959</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.475 GHz                      (28.69%)</span>
</span></span><span class="line"><span class="cl">    <span class="mi">26</span><span class="p">,</span><span class="mi">120</span><span class="p">,</span><span class="mi">077</span><span class="p">,</span><span class="mi">275</span>      <span class="n">instructions</span>              <span class="c1">#    3.57  insns per cycle          (32.28%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">7</span><span class="p">,</span><span class="mi">316</span><span class="p">,</span><span class="mi">568</span><span class="p">,</span><span class="mi">954</span>      <span class="n">ref</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2477.649 M/sec                    (35.86%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                <span class="mi">10</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.003 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">2953.027151</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">3</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.001 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">370</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.125 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">370</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.125 K/sec</span>
</span></span><span class="line"><span class="cl">       <span class="mf">2953.029425</span>      <span class="n">task</span><span class="o">-</span><span class="n">clock</span> <span class="p">(</span><span class="n">msec</span><span class="p">)</span>         <span class="c1">#    1.001 CPUs utilized</span>
</span></span><span class="line"><span class="cl">        <span class="mi">73</span><span class="p">,</span><span class="mi">778</span><span class="p">,</span><span class="mi">174</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    8.94% of all L1-dcache hits    (625801033059.49%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">825</span><span class="p">,</span><span class="mi">038</span><span class="p">,</span><span class="mi">324</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  279.387 M/sec                    (625693600466.98%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">137</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>          <span class="c1">#    0.002 M/sec                    (625693600466.94%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">339</span><span class="p">,</span><span class="mi">275</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.115 M/sec                    (625693600466.87%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">7</span><span class="p">,</span><span class="mi">611</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#   52.34% of all LL-cache hits     (625693600466.22%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">14</span><span class="p">,</span><span class="mi">542</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.005 M/sec                    (625693600466.18%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">975</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.330 K/sec                    (625718826721.74%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">28</span><span class="p">,</span><span class="mi">542</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">stores</span>                <span class="c1">#    0.010 M/sec                    (7.17%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">150</span><span class="p">,</span><span class="mi">256</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.051 M/sec                    (10.75%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">260</span><span class="p">,</span><span class="mi">765</span><span class="p">,</span><span class="mi">171</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1"># 1104.210 M/sec                    (14.33%)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">84</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache hits   (17.91%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">2</span><span class="p">,</span><span class="mi">177</span><span class="p">,</span><span class="mi">927</span><span class="p">,</span><span class="mi">665</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  737.523 M/sec                    (21.48%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.000 K/sec                    (25.05%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">12</span><span class="p">,</span><span class="mi">502</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.004 M/sec                    (28.62%)</span>
</span></span><span class="line"><span class="cl">                <span class="mi">10</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    5.62% of all iTLB cache hits   (28.61%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">178</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.060 K/sec                    (28.60%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">14</span><span class="p">,</span><span class="mi">538</span>      <span class="n">node</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.005 M/sec                    (28.59%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">527</span>      <span class="n">node</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    0.517 K/sec                    (28.62%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">2</span><span class="p">,</span><span class="mi">339</span>      <span class="n">node</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>         <span class="c1">#    0.792 K/sec                    (7.18%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">node</span><span class="o">-</span><span class="n">stores</span>               <span class="c1">#    0.000 K/sec                    (7.14%)                </span></span></span></code></pre>
</div>
<p>可以看到 O3 优化后是否排序执行时间差不多，并且都比没有 O3 前的快几倍，指令数较优化前基本不变。</p>
<p>最明显的是排序前的 branch-load-misses 几乎都被优化掉了，这也导致 IPC 从0.41 提升到了3.59</p>
<h3 id="aarch64-m710-1" class="headerLink">
    <a href="#aarch64-m710-1" class="header-mark"></a>aarch64 M710</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-14" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-icache-load-misses,L1-icache-loads,LLC-load-misses,LLC-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads  ./beforesort</span>
</span></span><span class="line"><span class="cl"><span class="mf">1.19468</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           <span class="mi">178</span><span class="p">,</span><span class="mi">045</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">29.84</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">290</span><span class="p">,</span><span class="mi">281</span><span class="p">,</span><span class="mi">574</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2748.321 M/sec                    (29.84%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">204</span><span class="p">,</span><span class="mi">017</span><span class="p">,</span><span class="mi">139</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   24.768 % of all cache refs      (29.84%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">823</span><span class="p">,</span><span class="mi">700</span><span class="p">,</span><span class="mi">482</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#  688.024 M/sec                    (29.84%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">290</span><span class="p">,</span><span class="mi">247</span><span class="p">,</span><span class="mi">311</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.748 GHz                      (34.85%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">5</span><span class="p">,</span><span class="mi">730</span><span class="p">,</span><span class="mi">855</span><span class="p">,</span><span class="mi">778</span>      <span class="n">instructions</span>              <span class="c1">#    1.74  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.26  stalled cycles per insn  (34.85%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">485</span><span class="p">,</span><span class="mi">014</span><span class="p">,</span><span class="mi">712</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   45.13% backend cycles idle      (35.03%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">980</span><span class="p">,</span><span class="mi">441</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    0.03% frontend cycles idle     (35.08%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">2</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">1</span><span class="p">,</span><span class="mf">197.20</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">140</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.117 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">140</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.117 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">1</span><span class="p">,</span><span class="mf">197.20</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">399</span><span class="p">,</span><span class="mi">817</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#   25.00% of all L1-dcache accesses  (35.08%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">821</span><span class="p">,</span><span class="mi">607</span><span class="p">,</span><span class="mi">081</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  686.276 M/sec                    (35.08%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">10</span><span class="p">,</span><span class="mi">361</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (35.08%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">150</span><span class="p">,</span><span class="mi">511</span><span class="p">,</span><span class="mi">080</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  961.004 M/sec                    (30.07%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">275</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#    0.00% of all LL-cache accesses  (30.07%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.000 K/sec                    (30.07%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">103</span><span class="p">,</span><span class="mi">368</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.086 M/sec                    (30.07%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">821</span><span class="p">,</span><span class="mi">524</span><span class="p">,</span><span class="mi">106</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  686.206 M/sec                    (30.07%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">15</span><span class="p">,</span><span class="mi">315</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache accesses  (30.07%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">821</span><span class="p">,</span><span class="mi">589</span><span class="p">,</span><span class="mi">564</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  686.261 M/sec                    (30.07%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">1</span><span class="p">,</span><span class="mi">084</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.07% of all iTLB cache accesses  (30.07%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">613</span><span class="p">,</span><span class="mi">786</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    1.348 M/sec                    (29.89%)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,stalled-cycles-backend,stalled-cycles-frontend,alignment-faults,bpf-output,context-switches,cpu-clock,cpu-migrations,dummy,emulation-faults,major-faults,minor-faults,page-faults,task-clock,L1-dcache-load-misses,L1-dcache-loads,L1-icache-load-misses,L1-icache-loads,LLC-load-misses,LLC-loads,branch-load-misses,branch-loads,dTLB-load-misses,dTLB-loads,iTLB-load-misses,iTLB-loads  ./aftersort</span>
</span></span><span class="line"><span class="cl"><span class="mf">1.1949</span>
</span></span><span class="line"><span class="cl"><span class="n">sum</span> <span class="o">=</span> <span class="mi">314931600000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">           <span class="mi">656</span><span class="p">,</span><span class="mi">175</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">29.91</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">293</span><span class="p">,</span><span class="mi">615</span><span class="p">,</span><span class="mi">450</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1"># 2748.397 M/sec                    (29.91%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">203</span><span class="p">,</span><span class="mi">683</span><span class="p">,</span><span class="mi">518</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#   24.631 % of all cache refs      (29.91%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">826</span><span class="p">,</span><span class="mi">934</span><span class="p">,</span><span class="mi">774</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>          <span class="c1">#  690.046 M/sec                    (29.91%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">3</span><span class="p">,</span><span class="mi">293</span><span class="p">,</span><span class="mi">560</span><span class="p">,</span><span class="mi">111</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                <span class="c1">#    2.748 GHz                      (34.92%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">5</span><span class="p">,</span><span class="mi">732</span><span class="p">,</span><span class="mi">241</span><span class="p">,</span><span class="mi">288</span>      <span class="n">instructions</span>              <span class="c1">#    1.74  insn per cycle</span>
</span></span><span class="line"><span class="cl">                                                  <span class="c1">#    0.29  stalled cycles per insn  (34.91%)</span>
</span></span><span class="line"><span class="cl">     <span class="mi">1</span><span class="p">,</span><span class="mi">645</span><span class="p">,</span><span class="mi">938</span><span class="p">,</span><span class="mi">192</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span>    <span class="c1">#   49.97% backend cycles idle      (35.00%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">757</span><span class="p">,</span><span class="mi">056</span>      <span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span>   <span class="c1">#    0.05% frontend cycles idle     (35.05%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">alignment</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">bpf</span><span class="o">-</span><span class="n">output</span>                <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">2</span>      <span class="n">context</span><span class="o">-</span><span class="n">switches</span>          <span class="c1">#    0.002 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">1</span><span class="p">,</span><span class="mf">198.38</span> <span class="n">msec</span> <span class="n">cpu</span><span class="o">-</span><span class="n">clock</span>                 <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">migrations</span>            <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">dummy</span>                     <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">emulation</span><span class="o">-</span><span class="n">faults</span>          <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">major</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.000 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">137</span>      <span class="n">minor</span><span class="o">-</span><span class="n">faults</span>              <span class="c1">#    0.114 K/sec</span>
</span></span><span class="line"><span class="cl">               <span class="mi">137</span>      <span class="n">page</span><span class="o">-</span><span class="n">faults</span>               <span class="c1">#    0.114 K/sec</span>
</span></span><span class="line"><span class="cl">          <span class="mi">1</span><span class="p">,</span><span class="mf">198.38</span> <span class="n">msec</span> <span class="n">task</span><span class="o">-</span><span class="n">clock</span>                <span class="c1">#    1.000 CPUs utilized</span>
</span></span><span class="line"><span class="cl">       <span class="mi">205</span><span class="p">,</span><span class="mi">557</span><span class="p">,</span><span class="mi">180</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#   25.00% of all L1-dcache accesses  (35.05%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">822</span><span class="p">,</span><span class="mi">366</span><span class="p">,</span><span class="mi">213</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  686.233 M/sec                    (35.04%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">12</span><span class="p">,</span><span class="mi">708</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    0.00% of all L1-icache accesses  (35.05%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">987</span><span class="p">,</span><span class="mi">422</span><span class="p">,</span><span class="mi">733</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>           <span class="c1">#  823.967 M/sec                    (30.04%)</span>
</span></span><span class="line"><span class="cl">             <span class="mi">6</span><span class="p">,</span><span class="mi">234</span>      <span class="n">LLC</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>           <span class="c1">#    0.00% of all LL-cache accesses  (30.04%)</span>
</span></span><span class="line"><span class="cl">                 <span class="mi">0</span>      <span class="n">LLC</span><span class="o">-</span><span class="n">loads</span>                 <span class="c1">#    0.000 K/sec                    (30.04%)</span>
</span></span><span class="line"><span class="cl">           <span class="mi">103</span><span class="p">,</span><span class="mi">635</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>        <span class="c1">#    0.086 M/sec                    (30.04%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">822</span><span class="p">,</span><span class="mi">357</span><span class="p">,</span><span class="mi">251</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>              <span class="c1">#  686.226 M/sec                    (30.04%)</span>
</span></span><span class="line"><span class="cl">            <span class="mi">13</span><span class="p">,</span><span class="mi">961</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.00% of all dTLB cache accesses  (30.04%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">822</span><span class="p">,</span><span class="mi">374</span><span class="p">,</span><span class="mi">897</span>      <span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#  686.241 M/sec                    (30.04%)</span>
</span></span><span class="line"><span class="cl">               <span class="mi">709</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>          <span class="c1">#    0.05% of all iTLB cache accesses  (30.04%)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">1</span><span class="p">,</span><span class="mi">562</span><span class="p">,</span><span class="mi">083</span>      <span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span>                <span class="c1">#    1.303 M/sec                    (29.96%)</span></span></span></code></pre>
</div>
<p>可以看到在M710上开启 O3 优化后是否排序执行时间差不多，并且都比没有 O3 前</p>
<p>的快几倍，最明显的是指令数只有之前的7%。另外就是排序前的 branch-load-misses 几乎都被优化掉了，虽然这里 IPC 提升不大但主要在指令数的减少上。</p>
<p>O3意味着代码尽可能展开，更长的代码意味着对 L1i（以及 L2和更高级别）高速缓存的压力更高。这会导致性能降低。更短的代码可以运行得更快。幸运的是，gcc 有一个优化选项可以指定此项。如果使用-Os，则编译器将优化代码大小。使用后，能够增加代码大小的哪些优化将被禁用。使用此选项通常会产生令人惊讶的结果。特别是循环展开和内联没有实质优势时，那么此选项将是一个很好的选择。</p>
<h2 id="分支预测原理介绍" class="headerLink">
    <a href="#%e5%88%86%e6%94%af%e9%a2%84%e6%b5%8b%e5%8e%9f%e7%90%86%e4%bb%8b%e7%bb%8d" class="header-mark"></a>分支预测原理介绍</h2><p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/v2-475f184ea376484878515491a120bf49_1440w.png   alt="img"  ></p>
<p>如上图的上面部分代表通常情况下的简单代码布局。如果区域 B（这里是内联函数 inlfct 生成的代码）经常由于条件 I 被跳过，而不会执行，处理器的预取将拉入很少使用的包含块 B 的高速缓存行。使用块重新排序可以改变这种局面，改变之后的效果可以在图的下半部分看到。经常执行的代码在内存中是线性的，而很少执行的代码被移动到不会损害预取和 L1i 效率的位置。</p>
<h2 id="linux内核流水线优化案例" class="headerLink">
    <a href="#linux%e5%86%85%e6%a0%b8%e6%b5%81%e6%b0%b4%e7%ba%bf%e4%bc%98%e5%8c%96%e6%a1%88%e4%be%8b" class="header-mark"></a>Linux内核流水线优化案例</h2><p>在Linux Kernel中有大量的 likely/unlikely</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">c</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-15" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">//ip 层收到消息后，如果是tcp就调用tcp_v4_rcv作为tcp协议的入口
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_v4_rcv</span><span class="p">(</span><span class="k">struct</span> <span class="n">sk_buff</span> <span class="o">*</span><span class="n">skb</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">...</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">tcphdr</span><span class="p">)</span> <span class="o">/</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">bad_packet</span><span class="p">;</span> <span class="c1">//概率很小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nf">pskb_may_pull</span><span class="p">(</span><span class="n">skb</span><span class="p">,</span> <span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">*</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">discard_it</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1">//file: net/ipv4/tcp_input.c
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_rcv_established</span><span class="p">(</span><span class="k">struct</span> <span class="n">sock</span> <span class="o">*</span><span class="n">sk</span><span class="p">,</span> <span class="p">...)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">sk</span><span class="o">-&gt;</span><span class="n">sk_rx_dst</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">  <span class="p">......</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//file: include/linux/compiler.h
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define likely(x)   __builtin_expect(!!(x),1)
</span></span></span><span class="line"><span class="cl"><span class="cp">#define unlikely(x) __builtin_expect(!!(x),0)</span></span></span></code></pre>
</div>
<p>__builtin_expect 这个指令是 gcc 引入的。该函数作用是允许程序员将最有可能执行的分支告诉编译器，来辅助系统进行分支预测。(参见 <a href="https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html" target="_blank" rel="noopener noreferrer">https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html</a>)</p>
<p>它的用法为：__builtin_expect(EXP, N)。意思是：EXP == N的概率很大。那么上面 likely 和 unlikely 这两句的具体含义就是：</p>
<ul>
<li>__builtin_expect(!!(x),1) x 为真的可能性更大  //0两次取反还是0，非0两次取反都是1，这样可以适配__builtin_expect(EXP, N)的N，要不N的参数没法传</li>
<li>__builtin_expect(!!(x),0) x 为假的可能性更大</li>
</ul>
<p>当正确地使用了__builtin_expect后，编译器在编译过程中会根据程序员的指令，将可能性更大的代码紧跟着前面的代码，从而减少指令跳转带来的性能上的下降。让L1i中加载的代码尽量有效紧凑</p>
<p>这样可以让 CPU流水线分支预测的时候默认走可能性更大的分支。如果分支预测错误所有流水线都要取消重新计算。</p>
<p>如果程序员利用这些宏，然后使用 <code>-freorder-blocks</code> 优化选项，则 gcc 将对块进行重新排序，如原理解图所示。该选项在 -O 2中启用，但在-Os 中禁用。还有另一种对块进行重新排序的选项（<code>-freorder-blocks-and-partition</code> ），但是它的用处有限，因为它不适用于异常处理。</p>
<h2 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>总结</h2><p>不排序的代码(分支极难预测正确)运行数据对比：</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: ">branch-load-misses/branch-loads</th>
            <th style="text-align: ">instructions</th>
            <th style="text-align: ">IPC</th>
            <th style="text-align: ">耗时(秒)</th>
            <th style="text-align: ">排序后耗时(秒)</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">鲲鹏920</td>
            <td style="text-align: ">21.7%</td>
            <td style="text-align: ">83,694,841,472</td>
            <td style="text-align: ">1.04</td>
            <td style="text-align: ">30.92</td>
            <td style="text-align: ">11.44</td>
        </tr>
        <tr>
            <td style="text-align: ">M710</td>
            <td style="text-align: ">8.3%</td>
            <td style="text-align: ">77,083,625,280</td>
            <td style="text-align: ">1.66</td>
            <td style="text-align: ">16.89</td>
            <td style="text-align: ">8.20</td>
        </tr>
        <tr>
            <td style="text-align: ">Intel 8163</td>
            <td style="text-align: ">24.4%</td>
            <td style="text-align: ">29,618,485,912</td>
            <td style="text-align: ">0.41</td>
            <td style="text-align: ">29.52</td>
            <td style="text-align: ">9.77</td>
        </tr>
        <tr>
            <td style="text-align: ">hygon 7260</td>
            <td style="text-align: ">11.8%</td>
            <td style="text-align: ">32,850,416,330</td>
            <td style="text-align: ">0.56</td>
            <td style="text-align: ">23.36</td>
            <td style="text-align: ">10.95</td>
        </tr>
        <tr>
            <td style="text-align: ">FT S2500</td>
            <td style="text-align: ">24%</td>
            <td style="text-align: ">83,872,213,462</td>
            <td style="text-align: ">1.01</td>
            <td style="text-align: ">39.8</td>
            <td style="text-align: ">16.63</td>
        </tr>
    </tbody>
  </table>
</div>
<p>排序后的代码(分支预测容易)运行数据对比：</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "></th>
            <th style="text-align: ">instructions</th>
            <th style="text-align: ">instructions(排序前)</th>
            <th style="text-align: ">IPC</th>
            <th style="text-align: ">耗时(秒)</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">鲲鹏920</td>
            <td style="text-align: ">83,666,813,837</td>
            <td style="text-align: ">83,694,841,472</td>
            <td style="text-align: ">2.82</td>
            <td style="text-align: ">11.44</td>
        </tr>
        <tr>
            <td style="text-align: ">M710</td>
            <td style="text-align: ">77,068,271,833</td>
            <td style="text-align: ">77,083,625,280</td>
            <td style="text-align: ">3.42</td>
            <td style="text-align: ">8.20</td>
        </tr>
        <tr>
            <td style="text-align: ">Intel 8163</td>
            <td style="text-align: ">29,491,804,977</td>
            <td style="text-align: ">29,618,485,912</td>
            <td style="text-align: ">1.22</td>
            <td style="text-align: ">9.77</td>
        </tr>
        <tr>
            <td style="text-align: ">hygon 7260</td>
            <td style="text-align: ">32,785,270,866</td>
            <td style="text-align: ">32,850,416,330</td>
            <td style="text-align: ">1.20</td>
            <td style="text-align: ">10.95</td>
        </tr>
        <tr>
            <td style="text-align: ">FT S2500</td>
            <td style="text-align: ">83,918,069,835</td>
            <td style="text-align: ">83,872,213,462</td>
            <td style="text-align: ">2.41</td>
            <td style="text-align: ">16.63</td>
        </tr>
    </tbody>
  </table>
</div>
<ul>
<li>所有 CPU 都期望对分支预测友好的代码</li>
<li>分支预测重点关注 perf branch-load-misses/branch-loads</li>
<li>aarch64 较 x86_64 指令数是2.6倍，同时对流水线更友好，也就是 IPC 更高(2.6倍)，测试代码单线程、无锁</li>
<li>M710的分支预测正确率是鲲鹏920、intel的3倍，hygon 是鲲鹏 、intel的分支预测率的2倍</li>
<li>10% 的分支load miss 会带来一倍的性能差异</li>
<li>gcc O3 优化效果很明显，代价就是代码展开后很大，容易造成icache不够，对小段测试代码效果最好，实践不一定</li>
<li>测试代码只是极简场景，实际生产环境更复杂，也就是预测效果不会这么明显</li>
</ul>
]]></description>
</item><item>
    <title>Perf IPC以及CPU性能</title>
    <link>http://localhost:1313/posts/perf-ipc%E4%BB%A5%E5%8F%8Acpu%E5%88%A9%E7%94%A8%E7%8E%87/</link>
    <pubDate>Sun, 16 May 2021 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/perf-ipc%E4%BB%A5%E5%8F%8Acpu%E5%88%A9%E7%94%A8%E7%8E%87/</guid>
    <description><![CDATA[<h1 id="perf-ipc以及cpu性能" class="headerLink">
    <a href="#perf-ipc%e4%bb%a5%e5%8f%8acpu%e6%80%a7%e8%83%bd" class="header-mark"></a>Perf IPC以及CPU性能</h1><p>为了让程序能快点，特意了解了CPU的各种原理，比如多核、超线程、NUMA、睿频、功耗、GPU、大小核再到分支预测、cache_line失效、加锁代价、IPC等各种指标（都有对应的代码和测试数据）都会在这系列文章中得到答案。当然一定会有程序员最关心的分支预测案例、Disruptor无锁案例、cache_line伪共享案例等等。</p>
<p>这次让我们从最底层的沙子开始用8篇文章来回答各种疑问以及大量的实验对比案例和测试数据。</p>
<p>大的方面主要是从这几个疑问来写这些文章：</p>
<ul>
<li>同样程序为什么CPU跑到800%还不如CPU跑到200%快？</li>
<li>IPC背后的原理和和程序效率的关系？</li>
<li>为什么数据库领域都爱把NUMA关了，这对吗？</li>
<li>几个国产芯片的性能到底怎么样？</li>
</ul>
<h2 id="系列文章" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="https://plantegg.github.io/2021/07/19/CPU%e6%80%a7%e8%83%bd%e5%92%8cCACHE/" target="_blank" rel="noopener noreferrer">CPU性能和CACHE</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87-FT2500%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210802161455950.png   alt="image-20210802161455950"  ></p>
<h2 id="程序性能" class="headerLink">
    <a href="#%e7%a8%8b%e5%ba%8f%e6%80%a7%e8%83%bd" class="header-mark"></a>程序性能</h2><blockquote>
  <p>程序的 CPU 执行时间 = 指令数/(主频*IPC)</p>

</blockquote><p>IPC: insns per cycle  insn/cycles</p>
<h2 id="cpu-流水线工作原理" class="headerLink">
    <a href="#cpu-%e6%b5%81%e6%b0%b4%e7%ba%bf%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86" class="header-mark"></a>CPU 流水线工作原理</h2><p>cycles：CPU时钟周期。CPU从它的指令集(instruction set)中选择指令执行。</p>
<p>一个指令包含以下的步骤，每个步骤由CPU的一个叫做功能单元(functional unit)的组件来进行处理，每个步骤的执行都至少需要花费一个时钟周期。</p>
<ul>
<li>指令读取(instruction fetch， IF)</li>
<li>指令解码(instruction decode， ID)</li>
<li>执行(execute， EXE)</li>
<li>内存访问(memory access，MEM)</li>
<li>寄存器回写(register write-back， WB)</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/950px-skylake_server_block_diagram.svg.png   alt="skylake server block diagram.svg"  ></p>
<p>以上结构简化成流水线就是：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210511154816751.png   alt="image-20210511154816751"  ></p>
<p>IF/ID 就是我们常说的前端，他负责不停地取指和译指，然后为后端提供译指之后的指令，最核心的优化就是要做好<strong>分支预测</strong>，终归取指是要比执行慢，只有提前做好预测才能尽量匹配上后端。后端核心优化是要做好执行单元的并发量，以及乱序执行能力，最终要将乱序执行结果正确组合并输出。</p>
<p>在流水线指令之前是单周期处理器：也就是一个周期完成一条指令。每个时钟周期必须完成取指、译码、读寄存器、 执行、访存等很多组合逻辑工作，为了保证在下一个时钟上升沿到来之前准备好寄存器堆的写数 据，需要将每个时钟周期的间隔拉长，导致处理器的主频无法提高。</p>
<p>使用流水线技术可以提高处 理器的主频。五个步骤只能串行，<strong>但是可以做成pipeline提升效率</strong>，也就是第一个指令做第二步的时候，指令读取单元可以去读取下一个指令了，如果有一个指令慢就会造成stall，也就是pipeline有地方卡壳了。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">$sudo perf stat -a -- sleep 10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Performance counter stats for &#39;system wide&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> 239866.330098      task-clock (msec)         #   23.985 CPUs utilized    /10*1000        (100.00%)
</span></span><span class="line"><span class="cl">        45,709      context-switches          #    0.191 K/sec                    (100.00%)
</span></span><span class="line"><span class="cl">         1,715      cpu-migrations            #    0.007 K/sec                    (100.00%)
</span></span><span class="line"><span class="cl">        79,586      page-faults               #    0.332 K/sec
</span></span><span class="line"><span class="cl"> 3,488,525,170      cycles                    #    0.015 GHz                      (83.34%)
</span></span><span class="line"><span class="cl"> 9,708,140,897      stalled-cycles-frontend   #  278.29% /cycles frontend cycles idle     (83.34%)
</span></span><span class="line"><span class="cl"> 9,314,891,615      stalled-cycles-backend    #  267.02% /cycles backend  cycles idle     (66.68%)
</span></span><span class="line"><span class="cl"> 2,292,955,367      instructions              #    0.66  insns per cycle  insn/cycles
</span></span><span class="line"><span class="cl">                                              #    4.23  stalled cycles per insn stalled-cycles-frontend/insn (83.34%)
</span></span><span class="line"><span class="cl">   447,584,805      branches                  #    1.866 M/sec                    (83.33%)
</span></span><span class="line"><span class="cl">     8,470,791      branch-misses             #    1.89% of all branches          (83.33%)</span></span></code></pre>
</div>
<p>stalled-cycles，则是指令管道未能按理想状态发挥并行作用，发生停滞的时钟周期。stalled-cycles-frontend指指令读取或解码的指令步骤，而stalled-cycles-backend则是指令执行步骤。第二列中的cycles idle其实意思跟stalled是一样的，由于指令执行停滞了，所以指令管道也就空闲了，千万不要误解为CPU的空闲率。这个数值是由stalled-cycles-frontend或stalled-cycles-backend除以上面的cycles得出的。</p>
<p>另外cpu可以同时有多条pipeline，这就是理论上最大的IPC.</p>
<h3 id="pipeline效率和ipchttpswwwhikunpengcomdocumentdetailzhkunpenggrfprogtunegkunpengprogramming_05_0009html" class="headerLink">
    <a href="#pipeline%e6%95%88%e7%8e%87%e5%92%8cipchttpswwwhikunpengcomdocumentdetailzhkunpenggrfprogtunegkunpengprogramming_05_0009html" class="header-mark"></a><a href="https://www.hikunpeng.com/document/detail/zh/kunpenggrf/progtuneg/kunpengprogramming_05_0009.html" target="_blank" rel="noopener noreferrer">pipeline效率和IPC</a></h3><p>虽然一个指令需要5个步骤，也就是完全执行完需要5个cycles，这样一个时钟周期最多能执行0.2条指令，IPC就是0.2，显然太低了。</p>
<ul>
<li>非流水线：</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210511154859711.png   alt="image-20210511154859711"  ></p>
<p>如果把多个指令的五个步骤用pipeline流水线跑起来，在理想情况下一个时钟周期就能跑完一条指令了，这样IPC就能达到1了。</p>
<p>这种非流水线的方式将一个指令分解成多个步骤后，能提升主频，但是一个指令执行需要的时间基本没变</p>
<ul>
<li>标量流水线, 标量（Scalar）流水计算机是<strong>只有一条指令流水线</strong>的计算机:</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210511155530477.png   alt="image-20210511155530477"  ></p>
<p>进一步优化，如果我们加大流水线的条数，让多个指令并行执行，就能得到更高的IPC了，但是这种并行必然会有指令之间的依赖，比如第二个指令依赖第一个的结果，所以多个指令并行更容易出现互相等待(stall).</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/58c7dc9084fa648f204a6468209ca788.png   alt="img"  ></p>
<p>在每个时钟周期的开始，指令的部分数据和控制信息都保存在流水线锁存器中，并且该信息形成了下一个流水线的逻辑电路输入。在时钟周期内，信号通过组合逻辑传播，从而在时钟周期结束时及时产生输出，以供下一个pipeline锁存器捕获。</p>
<p>早期的RISC处理器，例如IBM的801原型，MIPS R2000（基于斯坦福MIPS机器）和原始的SPARC（来自Berkeley RISC项目），都实现了一个简单的5阶段流水线，与上面所示的流水线不同（ 额外的阶段是内存访问，在执行后存放结果）。在那个时代，主流的CISC架构80386、68030和VAX处理器使用微码顺序工作（通过RISC进行流水作业比较容易，因为指令都是简单的寄存器到寄存器操作，与x86、68k或VAX不同）。导致的结果，以20 MHz运行的SPARC比以33 MHz运行的386快得多。从那以后，每个处理器都至少在某种程度上进行了流水线处理。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/e6d5e70e0cbdc4ba662d79f2306758b6.png   alt="img"  ></p>
<ul>
<li>超标量流水线：所谓超标量（Superscalar）流 水计算机，是指它<strong>具有两条以上的指令流水线</strong>, 超标流水线数量也就是ALU执行单元的并行度</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210511155708234.png   alt="image-20210511155708234"  ></p>
<p>一般而言流水线的超标量不能超过单条流水线的深度</p>
<p>每个功能单元都有独立的管道，甚至可以具有不同的长度。 这使更简单的指令可以更快地完成，从而减少了等待时间。 在各个管道内部之间也有许多旁路，但是为简单起见，这些旁路已被省略。</p>
<p>下图中，处理器可能每个周期执行3条不同的指令，例如，一个整数，一个浮点和一个存储器操作。 甚至可以添加更多的功能单元，以便处理器能够在每个周期执行两个整数指令，或两个浮点指令，或使用任何其他方式。</p>
<p>鲲鹏的流水线结构：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/zh-cn_image_0000001237942853.png   alt="zh-cn_image_0000001237942853.png"  ></p>
<p>三级流水线的执行容易被打断，导致指令执行效率低，后面发展起来的五级指令流水线技术被认为是经典的处理器设置方式，已经在多种RISC处理器中广泛使用，它在三级流水线（取指、译码、执行）的基础上，增加了两级处理，将“执行”动作进一步分解为执行、访存、回写，解决了三级流水线中存储器访问指令在指令执行阶段的延迟问题，但是容易出现寄存器互锁等问题导致流水线中断。鲲鹏920处理器采用八级流水线结构，首先是提取指令，然后通过解码、寄存器重命名和调度阶段。一旦完成调度，指令将无序发射到八个执行管道中的一个，每个执行管道每个周期都可以接受并完成一条指令，最后就是访存和回写操作。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/b0f6c495a6794d0a1e9a8ea93d87795b.png   alt="img"  ></p>
<p>流水线的设计可以实现不间断取指、解码、执行、写回，也可以同时做几条流水线一起取指、解码、执行、写回，也就引出了超标量设计。</p>
<p>超标量处理器可以在一个时钟周期内执行多个指令。需要注意的是，每个执行单元不是单独的处理器，而是单个CPU内(也可以理解成单core)的执行资源，在上面图中也由体现。</p>
<p>三路超标量四工位流水线的指令/周期，将CPI从1变成0.33，即每周期执行3.33条指令，这样的改进幅度实在是令人着迷的，因此在初期的时候超标量甚至被人们赞美为标量程序的向量式处理。</p>
<p>理想是丰满的，现实却是骨感的，现实中的CPI是不可能都这样的，因为现在的处理器执行不同指令时候的“执行”段的工位并不完全一样，例如整数可能短一些，浮点或者向量和 Load/Store 指令需要长一些(这也是为什么AVX512指令下，CPU会降频的原因，因为一个工位太费时间了，不得不降速,频率快了也没啥用)，加上一些别的因素，实际大部分程序的实际 CPI 都是 1.x 甚至更高。</p>
<p>多发射分发逻辑的复杂性随着发射数量呈现平方和指数的变化。也就是说，5发射处理器的调度逻辑几乎是4发射设计的两倍，其中6发射是4倍，而7发射是8倍，依此类推。</p>
<h3 id="流水线的实际效果" class="headerLink">
    <a href="#%e6%b5%81%e6%b0%b4%e7%ba%bf%e7%9a%84%e5%ae%9e%e9%99%85%e6%95%88%e6%9e%9c" class="header-mark"></a>流水线的实际效果</h3><p>假如一个15级的流水线，如果处理器要将做无用功的时间限制在 10%，那么它必须在正确预测每个分支的准确率达到 99.3%（因为错误一次，15级流水线都要重置，所以错误会放大15倍，0.7*15=10） 。很少有通用程序能够如此准确地预测分支。</p>
<p>下图是不同场景在英特尔酷睿 i7 基准测试，可以看到有19% 的指令都被浪费了，但能耗的浪费情况更加严重，因为处理器必须利用额外的能量才能在推测失误时恢复原来的状态。这样的度量导致许多人得出结论，架构师需要一种不同的方法来实现性能改进。于是多级流水线不能疯狂增加，这样只能往多核发展。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/f4.jpg   alt="f4.jpg"  ></p>
<h3 id="deeper-pipelines深度流水线" class="headerLink">
    <a href="#deeper-pipelines%e6%b7%b1%e5%ba%a6%e6%b5%81%e6%b0%b4%e7%ba%bf" class="header-mark"></a>Deeper Pipelines深度流水线</h3><p>由于时钟速度受流水线中最长阶段的长度的限制，因此每个级的逻辑门可以再细分，尤其是较长的逻辑门，从而将流水线转换为更深的深度流水线,各阶段的数量长度变小而阶段总数量变多，如下图。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/ffdf76ae7c34c3445594657466b1a8fe.png   alt="img"  ></p>
<p>​    这样整个处理器可以更高的时钟速度运行。当然，每个指令将需要更多的周期来完成（等待时间），但是处理器仍将在每个周期中完成1条指令，这样每秒将有更多的周期，处理器每秒将完成更多的指令。</p>
<p>​    Alpha架构师尤其喜欢这个深度流水线，这也是为什么早期的Alpha拥有非常深的流水线，并且在那个时代以很高的时钟速度运行。 当然还有Intel的NetBurst架构，唯主频论。</p>
<p>​    如今，现代处理器努力将每个流水线阶段的门延迟数量降低到很少（大约12-25个）。</p>
<p>​    在PowerPC G4e中为7-12，在ARM11和Cortex-A9中为8+，在Athlon中为10-15，在Pentium-Pro/II/III/M中为12+，在Athlon64/Phenom/Fusion-A中为12-17，在Cortex-A8中为13+，在UltraSPARC-III/IV中为14，在Core 2中为14+，在Core i*2中为14-18+，在Core i中为16+，在PowerPC G5中为16-25，在Pentium-4中为20+， 在奔腾4E中为31+。 与RISC相比，x86处理器通常具有更深的流水线，因为它们需要做更多的工作来解码复杂的x86指令。UltraSPARC-T1/T2/T3是深度流水线趋势的例外（UltraSPARC-T1仅6个，T2/T3是8-12，因为其倾向让单核简化的方式来堆叠核数量）。</p>
<p>​	不同架构的CPU流水线的级数（长度）存在很大差异，从几级到几十级不等，流水线级数越多，CPU结构就越复杂，功能也就越强大，同时功耗也会越大。相反地，流水线级数少，CPU结构简单，功耗就会降低很多。下表是一些典型的ARM流水线级别。</p>
<p>例如 Cortex-A15、Sandy Bridge 都分别具备 15 级、14 级流水线，而 Intel NetBurst（Pentium 4）、AMD Bulldozer 都是 20 级流水线，它们的工位数都远超出基本的四（或者五）工位流水线设计。更长的流水线虽然能提高频率，但是代价是耗电更高而且可能会有各种性能惩罚。</p>
<p>ARM指令集以及对应的流水线</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: ">型号</th>
            <th style="text-align: ">指令集</th>
            <th style="text-align: ">流水线</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">ARM7</td>
            <td style="text-align: ">ARMv4</td>
            <td style="text-align: ">3级</td>
        </tr>
        <tr>
            <td style="text-align: ">ARM9</td>
            <td style="text-align: ">ARMv5</td>
            <td style="text-align: ">5级</td>
        </tr>
        <tr>
            <td style="text-align: ">ARM11</td>
            <td style="text-align: ">ARMv6</td>
            <td style="text-align: ">8级</td>
        </tr>
        <tr>
            <td style="text-align: ">Cortex-A8</td>
            <td style="text-align: ">ARMv7-A</td>
            <td style="text-align: ">13级</td>
        </tr>
        <tr>
            <td style="text-align: ">鲲鹏920/Cortex-A55</td>
            <td style="text-align: ">ARMv8</td>
            <td style="text-align: ">8级</td>
        </tr>
    </tbody>
  </table>
</div>
<p>流水线越长带来的问题：</p>
<ul>
<li>每一级流水线之间需要流水线寄存器暂存数据，存取需要额外的负担</li>
<li>功耗高</li>
<li>对分支预测不友好</li>
</ul>
<h3 id="指令延时" class="headerLink">
    <a href="#%e6%8c%87%e4%bb%a4%e5%bb%b6%e6%97%b6" class="header-mark"></a>指令延时</h3><p>​    考虑一个非流水线机器，具有6个执行阶段，长度分别为50 ns，50 ns，60 ns，60 ns，50 ns和50 ns。</p>
<p>​    -这台机器上的指令等待时间是多少？</p>
<p>​    -执行100条指令需要多少时间？</p>
<p>​    指令等待时间 = 50+50+60+60+50+50= 320 ns
​    执行100条指令需 = 100*320 = 32000 ns</p>
<h3 id="对比流水线延时" class="headerLink">
    <a href="#%e5%af%b9%e6%af%94%e6%b5%81%e6%b0%b4%e7%ba%bf%e5%bb%b6%e6%97%b6" class="header-mark"></a>对比流水线延时</h3><p>​    假设在上面这台机器上引入了流水线技术，但引入流水线技术时，时钟偏移会给每个执行阶段增加5ns的开销。</p>
<p>​    -流水线机器上的指令等待时间是多少？</p>
<p>​    -执行100条指令需要多少时间？</p>
<p>​    这里需要注意的是，在流水线实现中，流水线级的长度必须全部相同，即最慢级的速度加上开销，开销为5ns。</p>
<p>​    流水线级的长度= MAX（非流水线级的长度）+开销= 60 + 5 = 65 ns</p>
<p>​    指令等待时间= 65 ns</p>
<p>​    执行100条指令的时间= 65 * 6 * 1 + 65 * 1 * 99 = 390 + 6435 = 6825 ns</p>
<h3 id="保留站和乱序执行" class="headerLink">
    <a href="#%e4%bf%9d%e7%95%99%e7%ab%99%e5%92%8c%e4%b9%b1%e5%ba%8f%e6%89%a7%e8%a1%8c" class="header-mark"></a>保留站和乱序执行</h3><p>指令在做完取码、译码后一般先交由一个指令保留站，统一交给后面的多个执行单元（多发射），执行完后再次将结果排序就行，有依赖关系的需要等待。</p>
<p>保留站后面就是乱序执行技术，就好像在指令的执行阶段提供一个“线程池”。指令不再是顺序执行的，而是根据池里所拥有的资源，以及各个任务是否可以进行执行，进行动态调度。在执行完成之后，又重新把结果在一个队列里面，按照指令的分发顺序重新排序。即使内部是“乱序”的，但是在外部看起来，仍然是井井有条地顺序执行。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221102161222519.png   alt="image-20221102161222519"  ></p>
<h3 id="从流水线获得加速" class="headerLink">
    <a href="#%e4%bb%8e%e6%b5%81%e6%b0%b4%e7%ba%bf%e8%8e%b7%e5%be%97%e5%8a%a0%e9%80%9f" class="header-mark"></a>从流水线获得加速</h3><p>加速是没有流水线的平均指令时间与有流水线的平均指令时间之比。（这里不考虑由不同类型的危害引起的任何失速）</p>
<p>假设：</p>
<p>​    未流水线的平均指令时间= 320 ns</p>
<p>​    流水线的平均指令时间= 65 ns</p>
<p>​    那么，100条指令的加速= 32000/6825 = 4.69，这种理想情况下效率提升了4.69倍。</p>
<p>每一个功能单元的流水线的长度是不同的。事实上，不同的功能单元的流水线长度本来就不一样。我们平时所说的 14 级流水线，指的通常是进行整数计算指令的流水线长度。如果是浮点数运算，实际的流水线长度则会更长一些。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/85f15ec667d09fd2d368822904029b32.jpeg   alt="img"  ></p>
<h3 id="指令缓存instruction-cache和数据缓存data-cache" class="headerLink">
    <a href="#%e6%8c%87%e4%bb%a4%e7%bc%93%e5%ad%98instruction-cache%e5%92%8c%e6%95%b0%e6%8d%ae%e7%bc%93%e5%ad%98data-cache" class="header-mark"></a>指令缓存（Instruction Cache）和数据缓存（Data Cache）</h3><p>在第 1 条指令执行到访存（MEM）阶段的时候，流水线里的第 4 条指令，在执行取指令（Fetch）的操作。访存和取指令，都要进行内存数据的读取。我们的内存，只有一个地址译码器的作为地址输入，那就只能在一个时钟周期里面读取一条数据，没办法同时执行第 1 条指令的读取内存数据和第 4 条指令的读取指令代码。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/c2a4c0340cb835350ea954cdc520704e.jpeg   alt="img"  ></p>
<p>把内存拆成两部分的解决方案，在计算机体系结构里叫作哈佛架构（Harvard Architecture），来自哈佛大学设计Mark I 型计算机时候的设计。我们今天使用的 CPU，仍然是冯·诺依曼体系结构的，并没有把内存拆成程序内存和数据内存这两部分。因为如果那样拆的话，对程序指令和数据需要的内存空间，我们就没有办法根据实际的应用去动态分配了。虽然解决了资源冲突的问题，但是也失去了灵活性。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/e7508cb409d398380753b292b6df8391.jpeg   alt="img"  ></p>
<p>在流水线产生依赖的时候必须pipeline stall，也就是让依赖的指令执行NOP。</p>
<h3 id="intel-x86每个指令需要的cycle" class="headerLink">
    <a href="#intel-x86%e6%af%8f%e4%b8%aa%e6%8c%87%e4%bb%a4%e9%9c%80%e8%a6%81%e7%9a%84cycle" class="header-mark"></a>Intel X86每个指令需要的cycle</h3><p>Intel xeon</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/v2-73a5cce599828b6c28f6f29bb310687a_1440w.jpg   alt="img"  ></p>
<p>不同架构带来IPC变化：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/intel-ice-lake-ipc-over-time.jpg   alt="img"  ></p>
<p>Intel 最新的CPU Ice Lake和其上一代的性能对比数据：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/intel-ice-lake-sunny-cove-core-table.jpg   alt="img"  ></p>
<p>上图最终结果导致了IPC提升了20%，以及整体效率的提升：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/Intel-Ice-Lake-improved-perf-per-core-April-2021.png   alt="img"  ></p>
<h2 id="linux内核分支预测优化案例" class="headerLink">
    <a href="#linux%e5%86%85%e6%a0%b8%e5%88%86%e6%94%af%e9%a2%84%e6%b5%8b%e4%bc%98%e5%8c%96%e6%a1%88%e4%be%8b" class="header-mark"></a>Linux内核分支预测优化案例</h2><p>在Linux Kernel中有大量的 likely/unlikely</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">c</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">//ip 层收到消息后，如果是tcp就调用tcp_v4_rcv作为tcp协议的入口
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_v4_rcv</span><span class="p">(</span><span class="k">struct</span> <span class="n">sk_buff</span> <span class="o">*</span><span class="n">skb</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">...</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">tcphdr</span><span class="p">)</span> <span class="o">/</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">bad_packet</span><span class="p">;</span> <span class="c1">//概率很小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nf">pskb_may_pull</span><span class="p">(</span><span class="n">skb</span><span class="p">,</span> <span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">*</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">discard_it</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1">//file: net/ipv4/tcp_input.c
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_rcv_established</span><span class="p">(</span><span class="k">struct</span> <span class="n">sock</span> <span class="o">*</span><span class="n">sk</span><span class="p">,</span> <span class="p">...)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">sk</span><span class="o">-&gt;</span><span class="n">sk_rx_dst</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">  <span class="p">......</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//file: include/linux/compiler.h
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define likely(x)   __builtin_expect(!!(x),1)
</span></span></span><span class="line"><span class="cl"><span class="cp">#define unlikely(x) __builtin_expect(!!(x),0)</span></span></span></code></pre>
</div>
<p>__builtin_expect 这个指令是 gcc 引入的。该函数作用是允许程序员将最有可能执行的分支告诉编译器，来辅助系统进行分支预测。(参见 <a href="https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html" target="_blank" rel="noopener noreferrer">https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html</a>)</p>
<p>它的用法为：__builtin_expect(EXP, N)。意思是：EXP == N的概率很大。那么上面 likely 和 unlikely 这两句的具体含义就是：</p>
<ul>
<li>__builtin_expect(!!(x),1) x 为真的可能性更大  //0两次取反还是0，非0两次取反都是1，这样可以适配__builtin_expect(EXP, N)的N，要不N的参数没法传</li>
<li>__builtin_expect(!!(x),0) x 为假的可能性更大</li>
</ul>
<p>当正确地使用了__builtin_expect后，编译器在编译过程中会根据程序员的指令，将可能性更大的代码紧跟着前面的代码，从而减少指令跳转带来的性能上的下降。让L1i中加载的代码尽量有效紧凑</p>
<p>这样可以让 CPU流水线分支预测的时候默认走可能性更大的分支。如果分支预测错误所有流水线都要取消重新计算。</p>
<p>编译器的分支预测和CPU内部流水线分支预测是两个维度，编译器的分支预测主要是为了充分利用 ICache, 尽量让每一次ICache load效率更高；CPU的流水线分支预测是在译码以后就做的，也就是说分支预测的结果下一条指令的取址之间几乎是无缝的，这中间没有stall，代价就是错误预测</p>
<h2 id="perf-使用" class="headerLink">
    <a href="#perf-%e4%bd%bf%e7%94%a8" class="header-mark"></a>perf 使用</h2><p>主要是通过采集 PMU（Performance Monitoring Unit &ndash; CPU内部提供）数据来做性能监控</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/5edebc74-f8ac-483c-8bcd-24e09abfd06b.png   alt="img"  ></p>
<p>Perf 是一个包含 22 种子工具的工具集，每个工具分别作为一个子命令。</p>
<p>annotate 命令读取 perf.data 并显示注释过的代码;diff 命令读取两个 perf.data 文件并显示两份剖析信息之间的差异;</p>
<p>evlist 命令列出一个 perf.data 文件的事件名称;</p>
<p>inject 命令过滤以加强事件流，在其中加入额外的信 息;</p>
<p>kmem 命令为跟踪和测量内核中 slab 子系统属性的工具;</p>
<p>kvm 命令为跟踪和测量 kvm 客户机操 作系统的工具;</p>
<p>list 命令列出所有符号事件类型;</p>
<p>lock 命令分析锁事件;</p>
<p>probe 命令定义新的动态跟 踪点;</p>
<p>record 命令运行一个程序，并把剖析信息记录在 perf.data 中;</p>
<p>report 命令读取 perf.data 并显 示剖析信息;</p>
<p>sched 命令为跟踪和测量内核调度器属性的工具;</p>
<p>script 命令读取 perf.data 并显示跟踪 输出;</p>
<p>stat 命令运行一个程序并收集性能计数器统计信息;</p>
<p>timechart 命令为可视化某个负载在某时 间段的系统总体性能的工具;</p>
<p>top 命令为系统剖析工具。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">asm</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-3" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">record</span> <span class="p">-</span><span class="no">g</span> <span class="p">-</span><span class="no">a</span> <span class="p">-</span><span class="no">e</span> <span class="no">skb</span><span class="p">:</span><span class="no">kfree_skb</span> <span class="c1">//perf 记录丢包调用栈 然后sudo perf script 查看 （网络报文被丢弃时会调用该函数kfree_skb）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">perf</span> <span class="no">record</span> <span class="p">-</span><span class="no">e</span> <span class="err">&#39;</span><span class="no">skb</span><span class="p">:</span><span class="no">consume_skb</span><span class="err">&#39;</span> <span class="p">-</span><span class="no">ag</span>  <span class="c1">//记录网络消耗
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">perf</span> <span class="no">probe</span> <span class="p">--</span><span class="no">add</span> <span class="no">tcp_sendmsg</span> <span class="c1">//增加监听probe  perf record -e probe:tcp_sendmsg -aR sleep 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">sched</span> <span class="no">record</span> <span class="p">--</span> <span class="no">sleep</span> <span class="mi">1</span> <span class="c1">//记录cpu调度的延时
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">sched</span> <span class="no">latency</span> <span class="c1">//查看
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">sched</span> <span class="no">latency</span> <span class="p">--</span><span class="no">sort</span> <span class="no">max</span> <span class="c1">//查看上一步记录的结果，以调度延迟排序。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">record</span> <span class="p">--</span><span class="no">call-graph</span> <span class="no">dwarf</span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">report</span> 
</span></span><span class="line"><span class="cl"><span class="no">perf</span> <span class="no">report</span> <span class="p">--</span><span class="no">call-graph</span> <span class="p">-</span><span class="no">G</span> <span class="c1">//反转调用关系
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">展开汇编结果</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="err">占比</span>   <span class="err">行号</span>  <span class="err">指令</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%r13</span><span class="p">,</span><span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%r8</span><span class="p">,</span><span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.56</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%r9</span><span class="p">,</span><span class="nv">%rcx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.19</span> <span class="err">│</span>      <span class="no">lock</span>   <span class="no">cmpxchg16b</span> <span class="mi">0x10</span><span class="p">(</span><span class="nv">%rsi</span><span class="p">)</span> <span class="c1">//加锁占89.53，下一行
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="err">89</span><span class="nf">.53</span> <span class="err">│</span>      <span class="no">sete</span>   <span class="nv">%al</span>
</span></span><span class="line"><span class="cl">  <span class="err">1</span><span class="nf">.50</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%al</span><span class="p">,</span><span class="nv">%r13b</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.19</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="no">$0x1</span><span class="p">,</span><span class="nv">%al</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">test</span>   <span class="nv">%r13b</span><span class="p">,</span><span class="nv">%r13b</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">je</span>     <span class="no">eb</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jmpq</span>   <span class="no">ef</span>
</span></span><span class="line"><span class="cl">       <span class="err">│47:</span>   <span class="nf">mov</span>    <span class="nv">%r9</span><span class="p">,(</span><span class="nv">%rsp</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//如下代码的汇编
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">void</span> <span class="no">main</span><span class="p">()</span> <span class="err">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="err">{</span>
</span></span><span class="line"><span class="cl">		 <span class="nf">__asm__</span> <span class="p">(</span><span class="err">&#34;</span><span class="no">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">&#34;</span><span class="p">)</span><span class="c1">;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">}</span>       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//每行pause占20%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">Disassembly</span> <span class="no">of</span> <span class="no">section</span> <span class="no">.text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">00000000004004</span><span class="nf">ed</span> <span class="err">&lt;</span><span class="no">main</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">push</span>   <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%rsp</span><span class="p">,</span><span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.71</span> <span class="err">│</span> <span class="mi">4</span><span class="p">:</span>   <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.35</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">20</span><span class="nf">.20</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.81</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.88</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">20</span><span class="nf">.04</span> <span class="err">│</span>    <span class="err">↑</span> <span class="no">jmp</span>    <span class="mi">4</span>
</span></span><span class="line"><span class="cl"> </span></span></code></pre>
</div>
<p>网络收包软中断</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">asm</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-4" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="nf">_raw_spin_lock_irqsave</span>  <span class="err">/</span><span class="no">proc</span><span class="err">/</span><span class="no">kcore</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">Disassembly</span> <span class="no">of</span> <span class="no">section</span> <span class="no">load2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">ffffffff81662b00</span> <span class="err">&lt;</span><span class="no">load2</span><span class="err">+</span><span class="mi">0x662b00</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.30</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">push</span>   <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.21</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%rsp</span><span class="p">,</span><span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.15</span> <span class="err">│</span>      <span class="no">push</span>   <span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span>      <span class="no">pushfq</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.57</span> <span class="err">│</span>      <span class="no">pop</span>    <span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.45</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.15</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%rax</span><span class="p">,</span><span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.21</span> <span class="err">│</span>      <span class="no">cli</span>
</span></span><span class="line"><span class="cl">  <span class="err">1</span><span class="nf">.20</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="no">$0x20000</span><span class="p">,</span><span class="nv">%edx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="na">lock</span>   <span class="nf">xadd</span>   <span class="nv">%edx</span><span class="p">,(</span><span class="nv">%rdi</span><span class="p">)</span> <span class="c1">//加锁耗时83%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="err">83</span><span class="nf">.42</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%edx</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">shr</span>    <span class="no">$0x10</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.66</span> <span class="err">│</span>      <span class="no">cmp</span>    <span class="nv">%dx</span><span class="p">,</span><span class="nv">%cx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jne</span>    <span class="mi">34</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.06</span> <span class="err">│</span><span class="mi">2</span><span class="no">e</span><span class="p">:</span>   <span class="no">mov</span>    <span class="nv">%rbx</span><span class="p">,</span><span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">pop</span>    <span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">pop</span>    <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.57</span> <span class="err">│</span>    <span class="err">←</span> <span class="no">retq</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span><span class="mi">34</span><span class="p">:</span>   <span class="no">mov</span>    <span class="nv">%ecx</span><span class="p">,</span><span class="nv">%r8d</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.03</span> <span class="err">│</span>      <span class="no">movzwl</span> <span class="nv">%cx</span><span class="p">,</span><span class="nv">%esi</span>
</span></span><span class="line"><span class="cl">       <span class="err">│3</span><span class="nl">a:</span>   <span class="nf">mov</span>    <span class="no">$0x8000</span><span class="p">,</span><span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jmp</span>    <span class="mi">4</span><span class="no">f</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.06</span> <span class="err">│</span><span class="mi">48</span><span class="p">:</span>   <span class="no">pause</span>
</span></span><span class="line"><span class="cl">  <span class="err">4</span><span class="nf">.67</span> <span class="err">│</span>      <span class="no">sub</span>    <span class="no">$0x1</span><span class="p">,</span><span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">je</span>     <span class="mi">69</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span><span class="mi">4</span><span class="no">f</span><span class="p">:</span>   <span class="no">movzwl</span> <span class="p">(</span><span class="nv">%rdi</span><span class="p">),</span><span class="nv">%edx</span>  <span class="c1">//慢操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="err">6</span><span class="nf">.73</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%edx</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">xor</span>    <span class="nv">%r8d</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">and</span>    <span class="no">$0xfffe</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jne</span>    <span class="mi">48</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span>      <span class="no">movzwl</span> <span class="nv">%dx</span><span class="p">,</span><span class="nv">%esi</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.09</span> <span class="err">│</span>      <span class="no">callq</span>  <span class="mi">0xffffffff8165501c</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jmp</span>    <span class="mi">2</span><span class="no">e</span>
</span></span><span class="line"><span class="cl">       <span class="err">│69:</span>   <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jmp</span>    <span class="mi">3</span><span class="no">a</span></span></span></code></pre>
</div>
<p>可以通过perf看到cpu的使用情况：</p>
<pre><code>$sudo perf stat -a -- sleep 10

Performance counter stats for 'system wide':

 239866.330098      task-clock (msec)         #   23.985 CPUs utilized    /10*1000        (100.00%)
        45,709      context-switches          #    0.191 K/sec                    (100.00%)
         1,715      cpu-migrations            #    0.007 K/sec                    (100.00%)
        79,586      page-faults               #    0.332 K/sec
 3,488,525,170      cycles                    #    0.015 GHz                      (83.34%)
 9,708,140,897      stalled-cycles-frontend   #  278.29% /cycles frontend cycles idle     (83.34%)
 9,314,891,615      stalled-cycles-backend    #  267.02% /cycles backend  cycles idle     (66.68%)
 2,292,955,367      instructions              #    0.66  insns per cycle  insn/cycles
                                             #    4.23  stalled cycles per insn stalled-cycles-frontend/insn (83.34%)
   447,584,805      branches                  #    1.866 M/sec                    (83.33%)
     8,470,791      branch-misses             #    1.89% of all branches          (83.33%)
</code></pre>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/f96e50b5f3d0825b68be5b654624f839.png   alt="image.png"  ></p>
<h2 id="ipc测试" class="headerLink">
    <a href="#ipc%e6%b5%8b%e8%af%95" class="header-mark"></a>IPC测试</h2><p>实际运行的时候增加如下nop到100个以上</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-5" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">void main() {
</span></span><span class="line"><span class="cl">    while(1) {
</span></span><span class="line"><span class="cl">         __asm__ (&#34;nop\n\t&#34;
</span></span><span class="line"><span class="cl">                 &#34;nop\n\t&#34;
</span></span><span class="line"><span class="cl">                 &#34;nop&#34;);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}</span></span></code></pre>
</div>
<p>如果同时运行两个如上测试程序，鲲鹏920运行，每个程序的IPC都是3.99</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-6" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#perf stat -- ./nop.out
</span></span><span class="line"><span class="cl">failed to read counter branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;./nop.out&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       8826.948260      task-clock (msec)         #    1.000 CPUs utilized
</span></span><span class="line"><span class="cl">                 8      context-switches          #    0.001 K/sec
</span></span><span class="line"><span class="cl">                 0      cpu-migrations            #    0.000 K/sec
</span></span><span class="line"><span class="cl">                37      page-faults               #    0.004 K/sec
</span></span><span class="line"><span class="cl">    22,949,862,030      cycles                    #    2.600 GHz
</span></span><span class="line"><span class="cl">         2,099,719      stalled-cycles-frontend   #    0.01% frontend cycles idle
</span></span><span class="line"><span class="cl">        18,859,839      stalled-cycles-backend    #    0.08% backend  cycles idle
</span></span><span class="line"><span class="cl">    91,465,043,922      instructions              #    3.99  insns per cycle
</span></span><span class="line"><span class="cl">                                                  #    0.00  stalled cycles per insn
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      branches
</span></span><span class="line"><span class="cl">            33,262      branch-misses             #    0.00% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       8.827886000 seconds time elapsed</span></span></code></pre>
</div>
<p>intel X86 8260</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-7" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#perf stat -- ./nop.out
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;./nop.out&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      65061.160345      task-clock (msec)         #    1.001 CPUs utilized
</span></span><span class="line"><span class="cl">                46      context-switches          #    0.001 K/sec
</span></span><span class="line"><span class="cl">                92      cpu-migrations            #    0.001 K/sec
</span></span><span class="line"><span class="cl">               108      page-faults               #    0.002 K/sec
</span></span><span class="line"><span class="cl">   155,659,827,263      cycles                    #    2.393 GHz
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      stalled-cycles-frontend
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      stalled-cycles-backend
</span></span><span class="line"><span class="cl">   603,247,401,995      instructions              #    3.88  insns per cycle
</span></span><span class="line"><span class="cl">     4,742,051,659      branches                  #   72.886 M/sec
</span></span><span class="line"><span class="cl">         1,799,428      branch-misses             #    0.04% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      65.012821629 seconds time elapsed</span></span></code></pre>
</div>
<p>这两块CPU理论IPC最大值都是4，实际x86离理论值更远一些. 增加while循环中的nop数量（从132增加到432个）IPC能提升到3.92</p>
<h2 id="ipc和超线程" class="headerLink">
    <a href="#ipc%e5%92%8c%e8%b6%85%e7%ba%bf%e7%a8%8b" class="header-mark"></a>IPC和超线程</h2><p>ipc是指每个core的IPC</p>
<h3 id="超线程hyper-threading原理httpswwwintelcomcontentwwwusengamingresourceshyper-threadinghtml" class="headerLink">
    <a href="#%e8%b6%85%e7%ba%bf%e7%a8%8bhyper-threading%e5%8e%9f%e7%90%86httpswwwintelcomcontentwwwusengamingresourceshyper-threadinghtml" class="header-mark"></a><a href="https://www.intel.com/content/www/us/en/gaming/resources/hyper-threading.html" target="_blank" rel="noopener noreferrer">超线程(Hyper-Threading)原理</a></h3><p><strong>概念</strong>：一个核还可以进一步分成几个逻辑核，来执行多个控制流程，这样可以进一步提高并行程度，这一技术就叫超线程，intel体系下也叫做 simultaneous multi-threading（<a href="https://en.wikipedia.org/wiki/Simultaneous_multithreading" target="_blank" rel="noopener noreferrer">SMT&ndash;wiki用的是simultaneous</a>，<a href="https://akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener noreferrer">也有人用 symmetric</a>（29页），我觉得symmetric也比较能表达超线程的意思）。</p>
<blockquote>
  <p>Two logical cores can work through tasks more efficiently than a traditional single-threaded core. By taking advantage of idle time when the core would formerly be waiting for other tasks to complete, Intel® Hyper-Threading Technology improves CPU throughput (by up to 30% in server applications).</p>

</blockquote><p>超线程技术主要的出发点是，当处理器在运行一个线程，执行指令代码时，很多时候处理器并不会使用到全部的计算能力，部分计算能力就会处于空闲状态。而超线程技术就是通过多线程来进一步“压榨”处理器。<strong>pipeline进入stalled状态就可以切到其它超线程上</strong></p>
<p>举个例子，如果一个线程运行过程中，必须要等到一些数据加载到缓存中以后才能继续执行，此时 CPU 就可以切换到另一个线程，去执行其他指令，而不用去处于空闲状态，等待当前线程的数据加载完毕。<strong>通常，一个传统的处理器在线程之间切换，可能需要几万个时钟周期。而一个具有 HT 超线程技术的处理器只需要 1 个时钟周期。因此就大大减小了线程之间切换的成本，从而最大限度地让处理器满负荷运转。</strong></p>
<blockquote>
  <p>ARM芯片基本不做超线程，另外请思考为什么有了应用层的多线程切换还需要CPU层面的超线程？</p>

</blockquote><p><strong>超线程(Hyper-Threading)物理实现</strong>: 在CPU内部增加寄存器等硬件设施，但是ALU、译码器等关键单元还是共享。在一个物理 CPU 核心内部，会有双份的 PC 寄存器、指令寄存器乃至条件码寄存器。超线程的目的，是在一个线程 A 的指令，在流水线里停顿的时候，让另外一个线程去执行指令。因为这个时候，CPU 的译码器和 ALU 就空出来了，那么另外一个线程 B，就可以拿来干自己需要的事情。这个线程 B 可没有对于线程 A 里面指令的关联和依赖。</p>
<p>CPU超线程设计过程中会引入5%的硬件，但是有30%的提升（经验值，场景不一样效果不一样，阿里的OB/MySQL/ODPS业务经验是提升35%），这是引入超线程的理论基础。如果是一个core 4个HT的话提升会是 50%</p>
<h3 id="超线程如何查看" class="headerLink">
    <a href="#%e8%b6%85%e7%ba%bf%e7%a8%8b%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b" class="header-mark"></a>超线程如何查看</h3><p>如果physical id和core id都一样的话，说明这两个core实际是一个物理core，其中一个是HT。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/191276e2a1a1731969da748f1690bc9b.png   alt="image.png"  ></p>
<p>physical id对应socket，也就是物理上购买到的一块CPU； core id对应着每个物理CPU里面的一个物理core，同一个phyiscal id下core id一样说明开了HT</p>
<h3 id="ipc和超线程的关系" class="headerLink">
    <a href="#ipc%e5%92%8c%e8%b6%85%e7%ba%bf%e7%a8%8b%e7%9a%84%e5%85%b3%e7%b3%bb" class="header-mark"></a>IPC和超线程的关系</h3><p>IPC 和一个core上运行多少个进程没有关系。实际测试将两个运行nop指令的进程绑定到一个core上，IPC不变, 因为IPC就是该进程分到的circle里执行了多少个指令，只和进程业务逻辑相关。但是如果是这两个进程绑定到一个物理core以及对应的超线程core上那么IPC就会减半。如果程序是IO bound（比如需要频繁读写内存）首先IPC远远低于理论值4的，这个时候超线程同时工作的话IPC基本能翻倍</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210513123233344.png   alt="image-20210513123233344"  ></p>
<p>对应的CPU使用率, 两个进程的CPU使用率是200%，实际产出IPC是2.1+1.64=3.75，比单个进程的IPC为3.92小多了。而单个进程CPU使用率才100%</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210513130252565.png   alt="image-20210513130252565"  ></p>
<p>以上测试CPU为Intel(R) Xeon(R) Platinum 8260 CPU @ 2.40GHz (Thread(s) per core:    2)</p>
<p>再来看如下CPU上，0和64核是一对HT，单独跑nop、Pause指令的IPC分别是5/0.17(nop是一条完全不会卡顿的指令)，可以得到这款CPU的最高IPC是5，一条 Pause 指令需要28-30个时钟周期。</p>
<p>如果在0/64上同时跑两个nop指令，虽然是两个超线程得到的IPC只有5的一半，也就是超线程在这种完全不卡顿的 nop 指令上完全没用；另外对比在0/64上同时跑两个Pause 指令，IPC 都还是0.17，也就是 Pause 指令完全可以将一个物理核发挥出两倍的运算能力</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221108095422200.png   alt="image-20221108095422200"  ></p>
<p>Pause指令和nop指令同时跑在一对HT上，nop基本不受影响，Pause降得非常低</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221108094802841.png   alt="image-20221108094802841"  ></p>
<p>Pause指令和nop指令同时跑在一个核上，IPC 倒是各自保持不变，但是抢到的 CPU 配额相当于各自 50%(在自己的50%范围内独占，IPC也不受影响)</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221108095753861.png   alt="image-20221108095753861"  ></p>
<p>关掉如上CPU的超线程，从测试结果看海光如果开了超线程 Pause 是28个时钟周期，关掉超线程 Pause 是14个时钟周期</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-8" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">//关掉超线程后 Pause 的IPC 从0.17提升到了0.34
</span></span><span class="line"><span class="cl">#perf stat taskset -c 0 ./pause
</span></span><span class="line"><span class="cl">^Ctaskset: Interrupt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;taskset -c 0 ./pause&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">          3,190.28 msec task-clock                #    0.999 CPUs utilized
</span></span><span class="line"><span class="cl">               302      context-switches          #    0.095 K/sec
</span></span><span class="line"><span class="cl">                 1      cpu-migrations            #    0.000 K/sec
</span></span><span class="line"><span class="cl">                99      page-faults               #    0.031 K/sec
</span></span><span class="line"><span class="cl">     7,951,451,789      cycles                    #    2.492 GHz
</span></span><span class="line"><span class="cl">         1,337,801      stalled-cycles-frontend   #    0.02% frontend cycles idle
</span></span><span class="line"><span class="cl">     7,842,812,091      stalled-cycles-backend    #   98.63% backend cycles idle
</span></span><span class="line"><span class="cl">     2,671,280,445      instructions              #    0.34  insn per cycle
</span></span><span class="line"><span class="cl">                                                  #    2.94  stalled cycles per insn
</span></span><span class="line"><span class="cl">        21,917,856      branches                  #    6.870 M/sec
</span></span><span class="line"><span class="cl">            29,607      branch-misses             #    0.14% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       3.192937987 seconds time elapsed
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       3.190322000 seconds user
</span></span><span class="line"><span class="cl">       0.000000000 seconds sys
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:        x86_64
</span></span><span class="line"><span class="cl">CPU op-mode(s):      32-bit, 64-bit
</span></span><span class="line"><span class="cl">Byte Order:          Little Endian
</span></span><span class="line"><span class="cl">Address sizes:       43 bits physical, 48 bits virtual
</span></span><span class="line"><span class="cl">CPU(s):              48
</span></span><span class="line"><span class="cl">On-line CPU(s) list: 0-47
</span></span><span class="line"><span class="cl">Thread(s) per core:  1
</span></span><span class="line"><span class="cl">Core(s) per socket:  24
</span></span><span class="line"><span class="cl">Socket(s):           2
</span></span><span class="line"><span class="cl">NUMA node(s):        8
</span></span><span class="line"><span class="cl">Vendor ID:           HygonGenuine
</span></span><span class="line"><span class="cl">CPU family:          24
</span></span><span class="line"><span class="cl">Model:               1
</span></span><span class="line"><span class="cl">Model name:          Hygon C86 7260 24-core Processor
</span></span><span class="line"><span class="cl">Stepping:            1
</span></span><span class="line"><span class="cl">Frequency boost:     enabled
</span></span><span class="line"><span class="cl">CPU MHz:             1070.009
</span></span><span class="line"><span class="cl">CPU max MHz:         2200.0000
</span></span><span class="line"><span class="cl">CPU min MHz:         1200.0000
</span></span><span class="line"><span class="cl">BogoMIPS:            4399.40
</span></span><span class="line"><span class="cl">Virtualization:      AMD-V
</span></span><span class="line"><span class="cl">L1d cache:           1.5 MiB
</span></span><span class="line"><span class="cl">L1i cache:           3 MiB
</span></span><span class="line"><span class="cl">L2 cache:            24 MiB
</span></span><span class="line"><span class="cl">L3 cache:            128 MiB
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):   0-5
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):   6-11
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):   12-17
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):   18-23
</span></span><span class="line"><span class="cl">NUMA node4 CPU(s):   24-29
</span></span><span class="line"><span class="cl">NUMA node5 CPU(s):   30-35
</span></span><span class="line"><span class="cl">NUMA node6 CPU(s):   36-41
</span></span><span class="line"><span class="cl">NUMA node7 CPU(s):   42-47</span></span></code></pre>
</div>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221108175100638.png   alt="image-20221108175100638"  ></p>
<h3 id="intel和amd单核以及ht性能比较" class="headerLink">
    <a href="#intel%e5%92%8camd%e5%8d%95%e6%a0%b8%e4%bb%a5%e5%8f%8aht%e6%80%a7%e8%83%bd%e6%af%94%e8%be%83" class="header-mark"></a>Intel和AMD单核以及HT性能比较</h3><p>测试命令，这个测试命令无论在哪个CPU下，用2个物理核用时都是一个物理核的一半，所以这个计算是可以完全并行的</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-9" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">taskset -c 1,53 /usr/bin/sysbench --num-threads=2 --test=cpu --cpu-max-prime=50000 run //单核用一个threads，绑核， HT用2个threads，绑一对HT</span></span></code></pre>
</div>
<p>测试结果为耗时，单位秒，Hygon 7280 就是Zen2架构</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: left">Family Name</th>
            <th style="text-align: left">Intel 8269CY CPU @ 2.50GHz</th>
            <th style="text-align: left">Intel E5-2682 v4 @ 2.50GHz</th>
            <th style="text-align: left">Hygon 7280 2.1G</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left">单核  prime 50000</td>
            <td style="text-align: left">83</td>
            <td style="text-align: left">109</td>
            <td style="text-align: left">89</td>
        </tr>
        <tr>
            <td style="text-align: left">HT  prime 50000</td>
            <td style="text-align: left">48</td>
            <td style="text-align: left">74</td>
            <td style="text-align: left">87</td>
        </tr>
    </tbody>
  </table>
</div>
<h2 id="流量一样但cpu使用率差别很大" class="headerLink">
    <a href="#%e6%b5%81%e9%87%8f%e4%b8%80%e6%a0%b7%e4%bd%86cpu%e4%bd%bf%e7%94%a8%e7%8e%87%e5%b7%ae%e5%88%ab%e5%be%88%e5%a4%a7" class="header-mark"></a>流量一样但CPU使用率差别很大</h2><p>同样大小内存、同样的cpu、同样的查询请求、同样的数据、几乎可以忽略的io，两个机器的load却表现异样。一个机器的load是12左右，另外一个机器却是30左右</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-10" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="o">//</span><span class="n">load低</span><span class="err">、</span><span class="n">CPU使用率低</span> <span class="err">的物理机，省略一部分核</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu0</span>  <span class="p">:</span> <span class="mf">67.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">30.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu1</span>  <span class="p">:</span> <span class="mf">64.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">34.3</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu2</span>  <span class="p">:</span> <span class="mf">63.0</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">35.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu3</span>  <span class="p">:</span> <span class="mf">60.0</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">38.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu4</span>  <span class="p">:</span> <span class="mf">59.8</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">37.9</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu5</span>  <span class="p">:</span> <span class="mf">56.7</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">42.3</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu6</span>  <span class="p">:</span> <span class="mf">63.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">34.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu7</span>  <span class="p">:</span> <span class="mf">62.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.0</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">35.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu8</span>  <span class="p">:</span> <span class="mf">58.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">39.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.7</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu9</span>  <span class="p">:</span> <span class="mf">55.8</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">42.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">//</span><span class="n">load高</span><span class="err">、</span><span class="n">CPU使用率高</span> <span class="err">的物理机，省略一部分核</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu0</span>  <span class="p">:</span> <span class="mf">90.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.1</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">1.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu1</span>  <span class="p">:</span> <span class="mf">88.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">8.0</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.6</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu2</span>  <span class="p">:</span> <span class="mf">90.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.7</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu3</span>  <span class="p">:</span> <span class="mf">86.9</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu4</span>  <span class="p">:</span> <span class="mf">87.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.2</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu5</span>  <span class="p">:</span> <span class="mf">87.3</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span> <span class="mf">10.5</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu6</span>  <span class="p">:</span> <span class="mf">90.4</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">6.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu7</span>  <span class="p">:</span> <span class="mf">90.1</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.6</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu8</span>  <span class="p">:</span> <span class="mf">89.5</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">2.6</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">6.7</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">1.3</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span>
</span></span><span class="line"><span class="cl"><span class="n">Cpu9</span>  <span class="p">:</span> <span class="mf">90.7</span><span class="o">%</span><span class="n">us</span><span class="p">,</span>  <span class="mf">1.9</span><span class="o">%</span><span class="n">sy</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">ni</span><span class="p">,</span>  <span class="mf">7.4</span><span class="o">%</span><span class="n">id</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">wa</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">hi</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">si</span><span class="p">,</span>  <span class="mf">0.0</span><span class="o">%</span><span class="n">st</span></span></span></code></pre>
</div>
<p>也就是相同CPU使用率下，其中慢的机器产出低了一半。可以分析产出为什么低，检查CPU是否降频、内存频率是否有差异。检查结果一致，那么继续通过perf看IPC：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/b_24609_1386328836_1250309361.png   alt="img"  ></p>
<p>可以看到两台机器的IPC是 0.3 VS 0.55，和CPU使用率差异基本一致，instructions几乎一样(流量一样)，但是使用掉的cpu-clock 几乎差了一倍，这应该是典型的内存时延大了一倍导致的。</p>
<p>经检查这两台物理机都是两路，虽然CPU型号一致，但是主板间跨Socket的QPI带宽差了一倍(主板是两个不同的服务商提供)。可以通过绑核测试不同Socket/Node 下内存时延来确认这个问题</p>
<h2 id="主频和性价比" class="headerLink">
    <a href="#%e4%b8%bb%e9%a2%91%e5%92%8c%e6%80%a7%e4%bb%b7%e6%af%94" class="header-mark"></a>主频和性价比</h2><p>拿Intel 在数据中心计算的大核CPU IvyBridge与当时用于 存储系列的小核CPU Avoton（ATOM）, 分别测试阿里巴巴(Oceanbase ，MySQL, ODPS)的workload，得到性能吞吐如下：</p>
<p>Intel 大小CPU 核心                   阿里 Workload Output(QPS)</p>
<p>Avoton(8 cores) 2.4GHZ                 10K on single core</p>
<p>Ivy Bridge(2650 v2 disable HT) 2.6GHZ      20K on single core</p>
<p>Ivy Bridge(2650 v2 enable HT) 2.4GHZ       25K on single core</p>
<p>Ivy Bridge(2650 v2 enable HT) 2.6GHZ       27K on single core</p>
<ol>
<li>超线程等于将一个大核CPU 分拆成两个小核，Ivy Bridge的数据显示超线程给 Ivy Bridge <strong>1.35倍</strong>(27K/20K) 的提升</li>
<li>现在我们分别评判 两种CPU对应的性能密度 (performance/core die size) ，该数据越大越好，根据我们的计算和测量发现：Avoton(包含L1D, L1I, and L2 per core)大约是 3<del>4平方毫米，Ivy Bridge (包含L1D, L1I, L2 )大约是12</del>13平方毫米, L3/core是 6~7平方毫米, 所以 Ivy Bridge 单核心的芯片面积需要18 ~ 20平方毫米。基于上面的数据我们得到的 Avoton core的性能密度为 2.5 (10K/4sqmm)，而Ivy Bridge的性能密度是1.35 (27K/20sqmm)，因此相同的芯片面积下 Avoton 的性能是 Ivy Bridge的 <strong>1.85倍</strong>(2.5/1.35).</li>
<li>从功耗的角度看性能的提升的对比数据，E5-2650v2(Ivy Bridge) 8core TDP 90w， Avoton 8 core TDP 20瓦， 性能/功耗 Avoton 是 10K QPS/20瓦， Ivy Bridge是 27KQPS/90瓦， 因此 相同的功耗下 Avoton是 Ivy Bridge的 <strong>1.75倍</strong>（10K QPS/20）/ （27KQPS/95）</li>
<li>从价格方面再进行比较，E5-2650v2(Ivy Bridge) 8core 官方价格是1107美元， Avoton 8 core官方价格是171美元。性能/价格 Avoton是 10KQPS/171美元，Ivy Bridge 是 27KQPS/1107美元， 因此相同的美元 Avoton的性能是 Ivy Bridge 的**2.3倍（**1 10KQPS/171美元）/ （27KQPS/1107美元）</li>
</ol>
<p>从以上结论可以看到在数据中心的场景下，由于指令数据相关性较高，同时由于内存访问的延迟更多，因此复杂的CPU体系结构并不能获得相应性能提升，该原因导致我们需要的是更多的小核CPU，以此达到高吞吐量的能力，因此2014年我们向Intel提出需要将物理CPU的超线程由 2个升级到4个/8个， 或者直接将用更多的小核CPU增加服务器的吞吐能力，最新数据表明Intel 会在大核CPU中引入4个超线程，和在相同的芯片面积下引入更多的小核CPU。</p>
<p>预测：为了减少数据中心的功耗，我们需要提升单位面积下的计算密度，因此将来会引入Rack Computing的计算模式，每台服务器将会有4～5百个CPU core，如果使用4个CPU socket，每台机器将会达到～1000个CPU core，结合Compute Express Link (CXL), 一个机架内允许16台服务器情况下，可以引入共享内存，那么一个进程可以运行在上万个CPU core中，这样复杂环境下，我们需要对于这样的软件环境做出更多的布局和优化。</p>
<h2 id="perf-top-和-pause-的案例httpstopicatatechorgarticles85549" class="headerLink">
    <a href="#perf-top-%e5%92%8c-pause-%e7%9a%84%e6%a1%88%e4%be%8bhttpstopicatatechorgarticles85549" class="header-mark"></a><a href="https://topic.atatech.org/articles/85549" target="_blank" rel="noopener noreferrer">perf top 和 pause 的案例</a></h2><p>在Skylake的架构中，将pause由10个时钟周期增加到了140个时钟周期。主要用在spin lock当中因为spin loop 多线程竞争差生的内存乱序而引起的性能下降。pause的时钟周期高过了绝大多数的指令cpu cycles，那么当我们利用perf top统计cpu 性能的时候，pause会有什么影响呢？我们可以利用一段小程序来测试一下.</p>
<p>测试机器：
CPU: Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz * 2, 共96个超线程</p>
<p>案例：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/864427c491497acb02d37c02cb35eeb2.png   alt="image.png"  ></p>
<p>对如上两个pause指令以及一个 count++（addq），进行perf top：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/40945b005eb9f716e429fd30be55b6d1.png   alt="image.png"  ></p>
<p>可以看到第一个pasue在perf top中cycles为0，第二个为46.85%，另外一个addq也有48.83%，基本可以猜测perf top在这里数据都往后挪了一个。</p>
<p><strong>问题总结：</strong>
我们知道perf top是通过读取PMU的PC寄存器来获取当前执行的指令进而根据汇编的symbol信息获得是执行的哪条指令。所以看起来CPU在执行pause指令的时候，从PMU中看到的PC值指向到了下一条指令，进而导致我们看到的这个现象。通过查阅《Intel® 64 and IA-32 Architectures Optimization Reference Manual》目前还无法得知这是CPU的一个设计缺陷还是PMU的一个bug(需要对pause指令做特殊处理)。<strong>不管怎样，这个实验证明了我们统计spin lock的CPU占比还是准确的，不会因为pause指令导致PMU采样出错导致统计信息的整体失真。只是对于指令级的CPU统计，我们能确定的就是它把pause的执行cycles 数统计到了下一条指令。</strong></p>
<p><strong>补充说明：</strong> <strong>经过测试，非skylake CPU也同样存在perf top会把pause(执行数cycles是10)的执行cycles数统计到下一条指令的问题，看来这是X86架构都存在的问题。</strong></p>
<h2 id="perf-和火焰图" class="headerLink">
    <a href="#perf-%e5%92%8c%e7%81%ab%e7%84%b0%e5%9b%be" class="header-mark"></a>perf 和火焰图</h2><p>调用 perf record 采样几秒钟，一般需要加 -g 参数，也就是 call-graph，还需要抓取函数的调用关系。在多核的机器上，还要记得加上 -a 参数，保证获取所有 CPU Core 上的函数运行情况。至于采样数据的多少，在讲解 perf 概念的时候说过，我们可以用 -c 或者 -F 参数来控制。</p>
<pre><code>   83  07/08/19 13:56:26 sudo perf record -ag -p 4759
   84  07/08/19 13:56:50 ls /tmp/
   85  07/08/19 13:57:06 history |tail -16
   86  07/08/19 13:57:20 sudo chmod 777 perf.data
   87  07/08/19 13:57:33 perf script &gt;out.perf
   88  07/08/19 13:59:24 ~/tools/FlameGraph-master/./stackcollapse-perf.pl ~/out.perf &gt;out.folded
   89  07/08/19 14:01:01 ~/tools/FlameGraph-master/flamegraph.pl out.folded &gt; kernel-perf.svg
   90  07/08/19 14:01:07 ls -lh
   91  07/08/19 14:03:33 history


$ sudo perf record -F 99 -a -g -- sleep 60 //-F 99 指采样每秒钟做 99 次
</code></pre>
<p>　　执行这个命令将生成一个 perf.data 文件：</p>
<p>执行sudo perf report -n可以生成报告的预览。
执行sudo perf report -n &ndash;stdio可以生成一个详细的报告。
执行sudo perf script可以 dump 出 perf.data 的内容。</p>
<pre><code># 折叠调用栈
$ FlameGraph/stackcollapse-perf.pl out.perf &gt; out.folded
# 生成火焰图
$ FlameGraph/flamegraph.pl out.folded &gt; out.svg
</code></pre>
<h2 id="ecs和perf" class="headerLink">
    <a href="#ecs%e5%92%8cperf" class="header-mark"></a>ECS和perf</h2><p>在ECS会采集不到 cycles等，cpu-clock、page-faults都是内核中的软事件，cycles/instructions得采集cpu的PMU数据，ECS采集不到这些PMU数据。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/a120388ff72d712a4fd176e7cea005cf.png   alt="image.png"  ></p>
<h2 id="perf-和-false-share-cache_line" class="headerLink">
    <a href="#perf-%e5%92%8c-false-share-cache_line" class="header-mark"></a>Perf 和 false share cache_line</h2><p><a href="https://joemario.github.io/blog/2016/09/01/c2c-blog/" target="_blank" rel="noopener noreferrer">从4.2kernel开始，perf支持perf c2c (cache 2 cahce) 来监控cache_line的伪共享</a></p>
<h2 id="系列文章-1" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0-1" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87%28FT2500%29%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<h2 id="参考资料" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-mark"></a>参考资料</h2><p><a href="https://zhengheng.me/2015/11/12/perf-stat/" target="_blank" rel="noopener noreferrer">perf详解</a></p>
<p><a href="https://www.atatech.org/articles/109158" target="_blank" rel="noopener noreferrer">CPU体系结构</a></p>
<p><a href="https://mp.weixin.qq.com/s/KaDJ1EF5Y-ndjRv2iUO3cA" target="_blank" rel="noopener noreferrer">震惊，用了这么多年的 CPU 利用率，其实是错的</a>cpu占用不代表在做事情，可能是stalled，也就是流水线卡顿，但是cpu占用了，实际没事情做。</p>
<p><a href="http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html" target="_blank" rel="noopener noreferrer">CPU Utilization is Wrong</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzUxNjE3MTcwMg==&amp;mid=2247483755&amp;idx=1&amp;sn=5324f7e46c91739b566dfc1d0847fc4a&amp;chksm=f9aa33b2ceddbaa478729383cac89967cc515bafa472001adc4ad42fb37e3ce473eddc3b591a&amp;mpshare=1&amp;scene=1&amp;srcid=0127mp3WJ6Kd1UOQISFg3SIC#rd" target="_blank" rel="noopener noreferrer">震惊，用了这么多年的 CPU 利用率，其实是错的</a></p>
<p><a href="https://kernel.taobao.org/2019/03/Top-down-Microarchitecture-Analysis-Method/" target="_blank" rel="noopener noreferrer">https://kernel.taobao.org/2019/03/Top-down-Microarchitecture-Analysis-Method/</a></p>
<p><a href="http://www.akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener noreferrer">What Every Programmer Should Know About Main Memory</a> by Ulrich Drepper</p>
<p><a href="https://mazzo.li/posts/fast-pipes.html" target="_blank" rel="noopener noreferrer">How fast are Linux pipes anyway?</a> 优化 pipes 的读写带宽，perf、hugepage、splice使用</p>
]]></description>
</item><item>
    <title>Perf IPC以及CPU性能</title>
    <link>http://localhost:1313/posts/perf_ipc%E4%BB%A5%E5%8F%8Acpu%E5%88%A9%E7%94%A8%E7%8E%87/</link>
    <pubDate>Sun, 16 May 2021 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/perf_ipc%E4%BB%A5%E5%8F%8Acpu%E5%88%A9%E7%94%A8%E7%8E%87/</guid>
    <description><![CDATA[<h1 id="perf-ipc以及cpu性能" class="headerLink">
    <a href="#perf-ipc%e4%bb%a5%e5%8f%8acpu%e6%80%a7%e8%83%bd" class="header-mark"></a>Perf IPC以及CPU性能</h1><p>为了让程序能快点，特意了解了CPU的各种原理，比如多核、超线程、NUMA、睿频、功耗、GPU、大小核再到分支预测、cache_line失效、加锁代价、IPC等各种指标（都有对应的代码和测试数据）都会在这系列文章中得到答案。当然一定会有程序员最关心的分支预测案例、Disruptor无锁案例、cache_line伪共享案例等等。</p>
<p>这次让我们从最底层的沙子开始用8篇文章来回答各种疑问以及大量的实验对比案例和测试数据。</p>
<p>大的方面主要是从这几个疑问来写这些文章：</p>
<ul>
<li>同样程序为什么CPU跑到800%还不如CPU跑到200%快？</li>
<li>IPC背后的原理和和程序效率的关系？</li>
<li>为什么数据库领域都爱把NUMA关了，这对吗？</li>
<li>几个国产芯片的性能到底怎么样？</li>
</ul>
<h2 id="系列文章" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="https://plantegg.github.io/2021/07/19/CPU%e6%80%a7%e8%83%bd%e5%92%8cCACHE/" target="_blank" rel="noopener noreferrer">CPU性能和CACHE</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87-FT2500%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210802161455950.png   alt="image-20210802161455950"  ></p>
<h2 id="程序性能" class="headerLink">
    <a href="#%e7%a8%8b%e5%ba%8f%e6%80%a7%e8%83%bd" class="header-mark"></a>程序性能</h2><blockquote>
  <p>程序的 CPU 执行时间 = 指令数/(主频*IPC)</p>

</blockquote><p>IPC: insns per cycle  insn/cycles</p>
<h2 id="cpu-流水线工作原理" class="headerLink">
    <a href="#cpu-%e6%b5%81%e6%b0%b4%e7%ba%bf%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86" class="header-mark"></a>CPU 流水线工作原理</h2><p>cycles：CPU时钟周期。CPU从它的指令集(instruction set)中选择指令执行。</p>
<p>一个指令包含以下的步骤，每个步骤由CPU的一个叫做功能单元(functional unit)的组件来进行处理，每个步骤的执行都至少需要花费一个时钟周期。</p>
<ul>
<li>指令读取(instruction fetch， IF)</li>
<li>指令解码(instruction decode， ID)</li>
<li>执行(execute， EXE)</li>
<li>内存访问(memory access，MEM)</li>
<li>寄存器回写(register write-back， WB)</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/950px-skylake_server_block_diagram.svg.png   alt="skylake server block diagram.svg"  ></p>
<p>以上结构简化成流水线就是：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210511154816751.png   alt="image-20210511154816751"  ></p>
<p>IF/ID 就是我们常说的前端，他负责不停地取指和译指，然后为后端提供译指之后的指令，最核心的优化就是要做好<strong>分支预测</strong>，终归取指是要比执行慢，只有提前做好预测才能尽量匹配上后端。后端核心优化是要做好执行单元的并发量，以及乱序执行能力，最终要将乱序执行结果正确组合并输出。</p>
<p>在流水线指令之前是单周期处理器：也就是一个周期完成一条指令。每个时钟周期必须完成取指、译码、读寄存器、 执行、访存等很多组合逻辑工作，为了保证在下一个时钟上升沿到来之前准备好寄存器堆的写数 据，需要将每个时钟周期的间隔拉长，导致处理器的主频无法提高。</p>
<p>使用流水线技术可以提高处 理器的主频。五个步骤只能串行，<strong>但是可以做成pipeline提升效率</strong>，也就是第一个指令做第二步的时候，指令读取单元可以去读取下一个指令了，如果有一个指令慢就会造成stall，也就是pipeline有地方卡壳了。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">$sudo perf stat -a -- sleep 10
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Performance counter stats for &#39;system wide&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> 239866.330098      task-clock (msec)         #   23.985 CPUs utilized    /10*1000        (100.00%)
</span></span><span class="line"><span class="cl">        45,709      context-switches          #    0.191 K/sec                    (100.00%)
</span></span><span class="line"><span class="cl">         1,715      cpu-migrations            #    0.007 K/sec                    (100.00%)
</span></span><span class="line"><span class="cl">        79,586      page-faults               #    0.332 K/sec
</span></span><span class="line"><span class="cl"> 3,488,525,170      cycles                    #    0.015 GHz                      (83.34%)
</span></span><span class="line"><span class="cl"> 9,708,140,897      stalled-cycles-frontend   #  278.29% /cycles frontend cycles idle     (83.34%)
</span></span><span class="line"><span class="cl"> 9,314,891,615      stalled-cycles-backend    #  267.02% /cycles backend  cycles idle     (66.68%)
</span></span><span class="line"><span class="cl"> 2,292,955,367      instructions              #    0.66  insns per cycle  insn/cycles
</span></span><span class="line"><span class="cl">                                              #    4.23  stalled cycles per insn stalled-cycles-frontend/insn (83.34%)
</span></span><span class="line"><span class="cl">   447,584,805      branches                  #    1.866 M/sec                    (83.33%)
</span></span><span class="line"><span class="cl">     8,470,791      branch-misses             #    1.89% of all branches          (83.33%)</span></span></code></pre>
</div>
<p>stalled-cycles，则是指令管道未能按理想状态发挥并行作用，发生停滞的时钟周期。stalled-cycles-frontend指指令读取或解码的指令步骤，而stalled-cycles-backend则是指令执行步骤。第二列中的cycles idle其实意思跟stalled是一样的，由于指令执行停滞了，所以指令管道也就空闲了，千万不要误解为CPU的空闲率。这个数值是由stalled-cycles-frontend或stalled-cycles-backend除以上面的cycles得出的。</p>
<p>另外cpu可以同时有多条pipeline，这就是理论上最大的IPC.</p>
<h3 id="pipeline效率和ipchttpswwwhikunpengcomdocumentdetailzhkunpenggrfprogtunegkunpengprogramming_05_0009html" class="headerLink">
    <a href="#pipeline%e6%95%88%e7%8e%87%e5%92%8cipchttpswwwhikunpengcomdocumentdetailzhkunpenggrfprogtunegkunpengprogramming_05_0009html" class="header-mark"></a><a href="https://www.hikunpeng.com/document/detail/zh/kunpenggrf/progtuneg/kunpengprogramming_05_0009.html" target="_blank" rel="noopener noreferrer">pipeline效率和IPC</a></h3><p>虽然一个指令需要5个步骤，也就是完全执行完需要5个cycles，这样一个时钟周期最多能执行0.2条指令，IPC就是0.2，显然太低了。</p>
<ul>
<li>非流水线：</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210511154859711.png   alt="image-20210511154859711"  ></p>
<p>如果把多个指令的五个步骤用pipeline流水线跑起来，在理想情况下一个时钟周期就能跑完一条指令了，这样IPC就能达到1了。</p>
<p>这种非流水线的方式将一个指令分解成多个步骤后，能提升主频，但是一个指令执行需要的时间基本没变</p>
<ul>
<li>标量流水线, 标量（Scalar）流水计算机是<strong>只有一条指令流水线</strong>的计算机:</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210511155530477.png   alt="image-20210511155530477"  ></p>
<p>进一步优化，如果我们加大流水线的条数，让多个指令并行执行，就能得到更高的IPC了，但是这种并行必然会有指令之间的依赖，比如第二个指令依赖第一个的结果，所以多个指令并行更容易出现互相等待(stall).</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/58c7dc9084fa648f204a6468209ca788.png   alt="img"  ></p>
<p>在每个时钟周期的开始，指令的部分数据和控制信息都保存在流水线锁存器中，并且该信息形成了下一个流水线的逻辑电路输入。在时钟周期内，信号通过组合逻辑传播，从而在时钟周期结束时及时产生输出，以供下一个pipeline锁存器捕获。</p>
<p>早期的RISC处理器，例如IBM的801原型，MIPS R2000（基于斯坦福MIPS机器）和原始的SPARC（来自Berkeley RISC项目），都实现了一个简单的5阶段流水线，与上面所示的流水线不同（ 额外的阶段是内存访问，在执行后存放结果）。在那个时代，主流的CISC架构80386、68030和VAX处理器使用微码顺序工作（通过RISC进行流水作业比较容易，因为指令都是简单的寄存器到寄存器操作，与x86、68k或VAX不同）。导致的结果，以20 MHz运行的SPARC比以33 MHz运行的386快得多。从那以后，每个处理器都至少在某种程度上进行了流水线处理。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/e6d5e70e0cbdc4ba662d79f2306758b6.png   alt="img"  ></p>
<ul>
<li>超标量流水线：所谓超标量（Superscalar）流 水计算机，是指它<strong>具有两条以上的指令流水线</strong>, 超标流水线数量也就是ALU执行单元的并行度</li>
</ul>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210511155708234.png   alt="image-20210511155708234"  ></p>
<p>一般而言流水线的超标量不能超过单条流水线的深度</p>
<p>每个功能单元都有独立的管道，甚至可以具有不同的长度。 这使更简单的指令可以更快地完成，从而减少了等待时间。 在各个管道内部之间也有许多旁路，但是为简单起见，这些旁路已被省略。</p>
<p>下图中，处理器可能每个周期执行3条不同的指令，例如，一个整数，一个浮点和一个存储器操作。 甚至可以添加更多的功能单元，以便处理器能够在每个周期执行两个整数指令，或两个浮点指令，或使用任何其他方式。</p>
<p>鲲鹏的流水线结构：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/zh-cn_image_0000001237942853.png   alt="zh-cn_image_0000001237942853.png"  ></p>
<p>三级流水线的执行容易被打断，导致指令执行效率低，后面发展起来的五级指令流水线技术被认为是经典的处理器设置方式，已经在多种RISC处理器中广泛使用，它在三级流水线（取指、译码、执行）的基础上，增加了两级处理，将“执行”动作进一步分解为执行、访存、回写，解决了三级流水线中存储器访问指令在指令执行阶段的延迟问题，但是容易出现寄存器互锁等问题导致流水线中断。鲲鹏920处理器采用八级流水线结构，首先是提取指令，然后通过解码、寄存器重命名和调度阶段。一旦完成调度，指令将无序发射到八个执行管道中的一个，每个执行管道每个周期都可以接受并完成一条指令，最后就是访存和回写操作。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/b0f6c495a6794d0a1e9a8ea93d87795b.png   alt="img"  ></p>
<p>流水线的设计可以实现不间断取指、解码、执行、写回，也可以同时做几条流水线一起取指、解码、执行、写回，也就引出了超标量设计。</p>
<p>超标量处理器可以在一个时钟周期内执行多个指令。需要注意的是，每个执行单元不是单独的处理器，而是单个CPU内(也可以理解成单core)的执行资源，在上面图中也由体现。</p>
<p>三路超标量四工位流水线的指令/周期，将CPI从1变成0.33，即每周期执行3.33条指令，这样的改进幅度实在是令人着迷的，因此在初期的时候超标量甚至被人们赞美为标量程序的向量式处理。</p>
<p>理想是丰满的，现实却是骨感的，现实中的CPI是不可能都这样的，因为现在的处理器执行不同指令时候的“执行”段的工位并不完全一样，例如整数可能短一些，浮点或者向量和 Load/Store 指令需要长一些(这也是为什么AVX512指令下，CPU会降频的原因，因为一个工位太费时间了，不得不降速,频率快了也没啥用)，加上一些别的因素，实际大部分程序的实际 CPI 都是 1.x 甚至更高。</p>
<p>多发射分发逻辑的复杂性随着发射数量呈现平方和指数的变化。也就是说，5发射处理器的调度逻辑几乎是4发射设计的两倍，其中6发射是4倍，而7发射是8倍，依此类推。</p>
<h3 id="流水线案例" class="headerLink">
    <a href="#%e6%b5%81%e6%b0%b4%e7%ba%bf%e6%a1%88%e4%be%8b" class="header-mark"></a>流水线案例</h3><p>在Linux Kernel中有大量的 likely/unlikely</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">c</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">//ip 层收到消息后，如果是tcp就调用tcp_v4_rcv作为tcp协议的入口
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_v4_rcv</span><span class="p">(</span><span class="k">struct</span> <span class="n">sk_buff</span> <span class="o">*</span><span class="n">skb</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="p">...</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">tcphdr</span><span class="p">)</span> <span class="o">/</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">bad_packet</span><span class="p">;</span> <span class="c1">//概率很小
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nf">pskb_may_pull</span><span class="p">(</span><span class="n">skb</span><span class="p">,</span> <span class="n">th</span><span class="o">-&gt;</span><span class="n">doff</span> <span class="o">*</span> <span class="mi">4</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="n">discard_it</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1">//file: net/ipv4/tcp_input.c
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kt">int</span> <span class="nf">tcp_rcv_established</span><span class="p">(</span><span class="k">struct</span> <span class="n">sock</span> <span class="o">*</span><span class="n">sk</span><span class="p">,</span> <span class="p">...)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl"> <span class="k">if</span> <span class="p">(</span><span class="nf">unlikely</span><span class="p">(</span><span class="n">sk</span><span class="o">-&gt;</span><span class="n">sk_rx_dst</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">  <span class="p">......</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//file: include/linux/compiler.h
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#define likely(x)   __builtin_expect(!!(x),1)
</span></span></span><span class="line"><span class="cl"><span class="cp">#define unlikely(x) __builtin_expect(!!(x),0)</span></span></span></code></pre>
</div>
<p>__builtin_expect 这个指令是 gcc 引入的。该函数作用是允许程序员将最有可能执行的分支告诉编译器，来辅助系统进行分支预测。(参见 <a href="https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html" target="_blank" rel="noopener noreferrer">https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html</a>)</p>
<p>它的用法为：__builtin_expect(EXP, N)。意思是：EXP == N的概率很大。那么上面 likely 和 unlikely 这两句的具体含义就是：</p>
<ul>
<li>__builtin_expect(!!(x),1) x 为真的可能性更大  //0两次取反还是0，非0两次取反都是1，这样可以适配__builtin_expect(EXP, N)的N，要不N的参数没法传</li>
<li>__builtin_expect(!!(x),0) x 为假的可能性更大</li>
</ul>
<p>当正确地使用了__builtin_expect后，编译器在编译过程中会根据程序员的指令，将可能性更大的代码紧跟着前面的代码，从而减少指令跳转带来的性能上的下降。让L1i中加载的代码尽量有效紧凑</p>
<p>这样可以让 CPU流水线分支预测的时候默认走可能性更大的分支。如果分支预测错误所有流水线都要取消重新计算。</p>
<h3 id="流水线的实际效果" class="headerLink">
    <a href="#%e6%b5%81%e6%b0%b4%e7%ba%bf%e7%9a%84%e5%ae%9e%e9%99%85%e6%95%88%e6%9e%9c" class="header-mark"></a>流水线的实际效果</h3><p>假如一个15级的流水线，如果处理器要将做无用功的时间限制在 10%，那么它必须在正确预测每个分支的准确率达到 99.3%（因为错误一次，15级流水线都要重置，所以错误会放大15倍，0.7*15=10） 。很少有通用程序能够如此准确地预测分支。</p>
<p>下图是不同场景在英特尔酷睿 i7 基准测试，可以看到有19% 的指令都被浪费了，但能耗的浪费情况更加严重，因为处理器必须利用额外的能量才能在推测失误时恢复原来的状态。这样的度量导致许多人得出结论，架构师需要一种不同的方法来实现性能改进。于是多级流水线不能疯狂增加，这样只能往多核发展。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/f4.jpg   alt="f4.jpg"  ></p>
<h3 id="deeper-pipelines深度流水线" class="headerLink">
    <a href="#deeper-pipelines%e6%b7%b1%e5%ba%a6%e6%b5%81%e6%b0%b4%e7%ba%bf" class="header-mark"></a>Deeper Pipelines深度流水线</h3><p>由于时钟速度受流水线中最长阶段的长度的限制，因此每个级的逻辑门可以再细分，尤其是较长的逻辑门，从而将流水线转换为更深的深度流水线,各阶段的数量长度变小而阶段总数量变多，如下图。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/ffdf76ae7c34c3445594657466b1a8fe.png   alt="img"  ></p>
<p>​    这样整个处理器可以更高的时钟速度运行。当然，每个指令将需要更多的周期来完成（等待时间），但是处理器仍将在每个周期中完成1条指令，这样每秒将有更多的周期，处理器每秒将完成更多的指令。</p>
<p>​    Alpha架构师尤其喜欢这个深度流水线，这也是为什么早期的Alpha拥有非常深的流水线，并且在那个时代以很高的时钟速度运行。 当然还有Intel的NetBurst架构，唯主频论。</p>
<p>​    如今，现代处理器努力将每个流水线阶段的门延迟数量降低到很少（大约12-25个）。</p>
<p>​    在PowerPC G4e中为7-12，在ARM11和Cortex-A9中为8+，在Athlon中为10-15，在Pentium-Pro/II/III/M中为12+，在Athlon64/Phenom/Fusion-A中为12-17，在Cortex-A8中为13+，在UltraSPARC-III/IV中为14，在Core 2中为14+，在Core i*2中为14-18+，在Core i中为16+，在PowerPC G5中为16-25，在Pentium-4中为20+， 在奔腾4E中为31+。 与RISC相比，x86处理器通常具有更深的流水线，因为它们需要做更多的工作来解码复杂的x86指令。UltraSPARC-T1/T2/T3是深度流水线趋势的例外（UltraSPARC-T1仅6个，T2/T3是8-12，因为其倾向让单核简化的方式来堆叠核数量）。</p>
<p>​	不同架构的CPU流水线的级数（长度）存在很大差异，从几级到几十级不等，流水线级数越多，CPU结构就越复杂，功能也就越强大，同时功耗也会越大。相反地，流水线级数少，CPU结构简单，功耗就会降低很多。下表是一些典型的ARM流水线级别。</p>
<p>例如 Cortex-A15、Sandy Bridge 都分别具备 15 级、14 级流水线，而 Intel NetBurst（Pentium 4）、AMD Bulldozer 都是 20 级流水线，它们的工位数都远超出基本的四（或者五）工位流水线设计。更长的流水线虽然能提高频率，但是代价是耗电更高而且可能会有各种性能惩罚。</p>
<p>ARM指令集以及对应的流水线</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: ">型号</th>
            <th style="text-align: ">指令集</th>
            <th style="text-align: ">流水线</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">ARM7</td>
            <td style="text-align: ">ARMv4</td>
            <td style="text-align: ">3级</td>
        </tr>
        <tr>
            <td style="text-align: ">ARM9</td>
            <td style="text-align: ">ARMv5</td>
            <td style="text-align: ">5级</td>
        </tr>
        <tr>
            <td style="text-align: ">ARM11</td>
            <td style="text-align: ">ARMv6</td>
            <td style="text-align: ">8级</td>
        </tr>
        <tr>
            <td style="text-align: ">Cortex-A8</td>
            <td style="text-align: ">ARMv7-A</td>
            <td style="text-align: ">13级</td>
        </tr>
        <tr>
            <td style="text-align: ">鲲鹏920/Cortex-A55</td>
            <td style="text-align: ">ARMv8</td>
            <td style="text-align: ">8级</td>
        </tr>
    </tbody>
  </table>
</div>
<p>流水线越长带来的问题：</p>
<ul>
<li>每一级流水线之间需要流水线寄存器暂存数据，存取需要额外的负担</li>
<li>功耗高</li>
<li>对分支预测不友好</li>
</ul>
<h3 id="指令延时" class="headerLink">
    <a href="#%e6%8c%87%e4%bb%a4%e5%bb%b6%e6%97%b6" class="header-mark"></a>指令延时</h3><p>​    考虑一个非流水线机器，具有6个执行阶段，长度分别为50 ns，50 ns，60 ns，60 ns，50 ns和50 ns。</p>
<p>​    -这台机器上的指令等待时间是多少？</p>
<p>​    -执行100条指令需要多少时间？</p>
<p>​    指令等待时间 = 50+50+60+60+50+50= 320 ns
​    执行100条指令需 = 100*320 = 32000 ns</p>
<h3 id="对比流水线延时" class="headerLink">
    <a href="#%e5%af%b9%e6%af%94%e6%b5%81%e6%b0%b4%e7%ba%bf%e5%bb%b6%e6%97%b6" class="header-mark"></a>对比流水线延时</h3><p>​    假设在上面这台机器上引入了流水线技术，但引入流水线技术时，时钟偏移会给每个执行阶段增加5ns的开销。</p>
<p>​    -流水线机器上的指令等待时间是多少？</p>
<p>​    -执行100条指令需要多少时间？</p>
<p>​    这里需要注意的是，在流水线实现中，流水线级的长度必须全部相同，即最慢级的速度加上开销，开销为5ns。</p>
<p>​    流水线级的长度= MAX（非流水线级的长度）+开销= 60 + 5 = 65 ns</p>
<p>​    指令等待时间= 65 ns</p>
<p>​    执行100条指令的时间= 65 * 6 * 1 + 65 * 1 * 99 = 390 + 6435 = 6825 ns</p>
<h3 id="保留站和乱序执行" class="headerLink">
    <a href="#%e4%bf%9d%e7%95%99%e7%ab%99%e5%92%8c%e4%b9%b1%e5%ba%8f%e6%89%a7%e8%a1%8c" class="header-mark"></a>保留站和乱序执行</h3><p>指令在做完取码、译码后一般先交由一个指令保留站，统一交给后面的多个执行单元（多发射），执行完后再次将结果排序就行，有依赖关系的需要等待。</p>
<p>保留站后面就是乱序执行技术，就好像在指令的执行阶段提供一个“线程池”。指令不再是顺序执行的，而是根据池里所拥有的资源，以及各个任务是否可以进行执行，进行动态调度。在执行完成之后，又重新把结果在一个队列里面，按照指令的分发顺序重新排序。即使内部是“乱序”的，但是在外部看起来，仍然是井井有条地顺序执行。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221102161222519.png   alt="image-20221102161222519"  ></p>
<h3 id="从流水线获得加速" class="headerLink">
    <a href="#%e4%bb%8e%e6%b5%81%e6%b0%b4%e7%ba%bf%e8%8e%b7%e5%be%97%e5%8a%a0%e9%80%9f" class="header-mark"></a>从流水线获得加速</h3><p>加速是没有流水线的平均指令时间与有流水线的平均指令时间之比。（这里不考虑由不同类型的危害引起的任何失速）</p>
<p>假设：</p>
<p>​    未流水线的平均指令时间= 320 ns</p>
<p>​    流水线的平均指令时间= 65 ns</p>
<p>​    那么，100条指令的加速= 32000/6825 = 4.69，这种理想情况下效率提升了4.69倍。</p>
<p>每一个功能单元的流水线的长度是不同的。事实上，不同的功能单元的流水线长度本来就不一样。我们平时所说的 14 级流水线，指的通常是进行整数计算指令的流水线长度。如果是浮点数运算，实际的流水线长度则会更长一些。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/85f15ec667d09fd2d368822904029b32.jpeg   alt="img"  ></p>
<h3 id="指令缓存instruction-cache和数据缓存data-cache" class="headerLink">
    <a href="#%e6%8c%87%e4%bb%a4%e7%bc%93%e5%ad%98instruction-cache%e5%92%8c%e6%95%b0%e6%8d%ae%e7%bc%93%e5%ad%98data-cache" class="header-mark"></a>指令缓存（Instruction Cache）和数据缓存（Data Cache）</h3><p>在第 1 条指令执行到访存（MEM）阶段的时候，流水线里的第 4 条指令，在执行取指令（Fetch）的操作。访存和取指令，都要进行内存数据的读取。我们的内存，只有一个地址译码器的作为地址输入，那就只能在一个时钟周期里面读取一条数据，没办法同时执行第 1 条指令的读取内存数据和第 4 条指令的读取指令代码。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/c2a4c0340cb835350ea954cdc520704e.jpeg   alt="img"  ></p>
<p>把内存拆成两部分的解决方案，在计算机体系结构里叫作哈佛架构（Harvard Architecture），来自哈佛大学设计Mark I 型计算机时候的设计。我们今天使用的 CPU，仍然是冯·诺依曼体系结构的，并没有把内存拆成程序内存和数据内存这两部分。因为如果那样拆的话，对程序指令和数据需要的内存空间，我们就没有办法根据实际的应用去动态分配了。虽然解决了资源冲突的问题，但是也失去了灵活性。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/e7508cb409d398380753b292b6df8391.jpeg   alt="img"  ></p>
<p>在流水线产生依赖的时候必须pipeline stall，也就是让依赖的指令执行NOP。</p>
<h3 id="intel-x86每个指令需要的cycle" class="headerLink">
    <a href="#intel-x86%e6%af%8f%e4%b8%aa%e6%8c%87%e4%bb%a4%e9%9c%80%e8%a6%81%e7%9a%84cycle" class="header-mark"></a>Intel X86每个指令需要的cycle</h3><p>Intel xeon</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/v2-73a5cce599828b6c28f6f29bb310687a_1440w.jpg   alt="img"  ></p>
<p>不同架构带来IPC变化：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/intel-ice-lake-ipc-over-time.jpg   alt="img"  ></p>
<p>Intel 最新的CPU Ice Lake和其上一代的性能对比数据：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/intel-ice-lake-sunny-cove-core-table.jpg   alt="img"  ></p>
<p>上图最终结果导致了IPC提升了20%，以及整体效率的提升：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/Intel-Ice-Lake-improved-perf-per-core-April-2021.png   alt="img"  ></p>
<h2 id="perf-使用" class="headerLink">
    <a href="#perf-%e4%bd%bf%e7%94%a8" class="header-mark"></a>perf 使用</h2><p>主要是通过采集 PMU（Performance Monitoring Unit &ndash; CPU内部提供）数据来做性能监控</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/5edebc74-f8ac-483c-8bcd-24e09abfd06b.png   alt="img"  ></p>
<p>Perf 是一个包含 22 种子工具的工具集，每个工具分别作为一个子命令。</p>
<p>annotate 命令读取 perf.data 并显示注释过的代码;diff 命令读取两个 perf.data 文件并显示两份剖析信息之间的差异;</p>
<p>evlist 命令列出一个 perf.data 文件的事件名称;</p>
<p>inject 命令过滤以加强事件流，在其中加入额外的信 息;</p>
<p>kmem 命令为跟踪和测量内核中 slab 子系统属性的工具;</p>
<p>kvm 命令为跟踪和测量 kvm 客户机操 作系统的工具;</p>
<p>list 命令列出所有符号事件类型;</p>
<p>lock 命令分析锁事件;</p>
<p>probe 命令定义新的动态跟 踪点;</p>
<p>record 命令运行一个程序，并把剖析信息记录在 perf.data 中;</p>
<p>report 命令读取 perf.data 并显 示剖析信息;</p>
<p>sched 命令为跟踪和测量内核调度器属性的工具;</p>
<p>script 命令读取 perf.data 并显示跟踪 输出;</p>
<p>stat 命令运行一个程序并收集性能计数器统计信息;</p>
<p>timechart 命令为可视化某个负载在某时 间段的系统总体性能的工具;</p>
<p>top 命令为系统剖析工具。</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">asm</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-3" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">record</span> <span class="p">-</span><span class="no">g</span> <span class="p">-</span><span class="no">a</span> <span class="p">-</span><span class="no">e</span> <span class="no">skb</span><span class="p">:</span><span class="no">kfree_skb</span> <span class="c1">//perf 记录丢包调用栈 然后sudo perf script 查看 （网络报文被丢弃时会调用该函数kfree_skb）
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">perf</span> <span class="no">record</span> <span class="p">-</span><span class="no">e</span> <span class="err">&#39;</span><span class="no">skb</span><span class="p">:</span><span class="no">consume_skb</span><span class="err">&#39;</span> <span class="p">-</span><span class="no">ag</span>  <span class="c1">//记录网络消耗
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">perf</span> <span class="no">probe</span> <span class="p">--</span><span class="no">add</span> <span class="no">tcp_sendmsg</span> <span class="c1">//增加监听probe  perf record -e probe:tcp_sendmsg -aR sleep 1
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">sched</span> <span class="no">record</span> <span class="p">--</span> <span class="no">sleep</span> <span class="mi">1</span> <span class="c1">//记录cpu调度的延时
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">sudo</span> <span class="no">perf</span> <span class="no">sched</span> <span class="no">latency</span> <span class="c1">//查看
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">sched</span> <span class="no">latency</span> <span class="p">--</span><span class="no">sort</span> <span class="no">max</span> <span class="c1">//查看上一步记录的结果，以调度延迟排序。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">record</span> <span class="p">--</span><span class="no">call-graph</span> <span class="no">dwarf</span>
</span></span><span class="line"><span class="cl"><span class="nf">perf</span> <span class="no">report</span> 
</span></span><span class="line"><span class="cl"><span class="no">perf</span> <span class="no">report</span> <span class="p">--</span><span class="no">call-graph</span> <span class="p">-</span><span class="no">G</span> <span class="c1">//反转调用关系
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">展开汇编结果</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="err">占比</span>   <span class="err">行号</span>  <span class="err">指令</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%r13</span><span class="p">,</span><span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%r8</span><span class="p">,</span><span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.56</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%r9</span><span class="p">,</span><span class="nv">%rcx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.19</span> <span class="err">│</span>      <span class="no">lock</span>   <span class="no">cmpxchg16b</span> <span class="mi">0x10</span><span class="p">(</span><span class="nv">%rsi</span><span class="p">)</span> <span class="c1">//加锁占89.53，下一行
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="err">89</span><span class="nf">.53</span> <span class="err">│</span>      <span class="no">sete</span>   <span class="nv">%al</span>
</span></span><span class="line"><span class="cl">  <span class="err">1</span><span class="nf">.50</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%al</span><span class="p">,</span><span class="nv">%r13b</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.19</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="no">$0x1</span><span class="p">,</span><span class="nv">%al</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">test</span>   <span class="nv">%r13b</span><span class="p">,</span><span class="nv">%r13b</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">je</span>     <span class="no">eb</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jmpq</span>   <span class="no">ef</span>
</span></span><span class="line"><span class="cl">       <span class="err">│47:</span>   <span class="nf">mov</span>    <span class="nv">%r9</span><span class="p">,(</span><span class="nv">%rsp</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//如下代码的汇编
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nf">void</span> <span class="no">main</span><span class="p">()</span> <span class="err">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="err">{</span>
</span></span><span class="line"><span class="cl">		 <span class="nf">__asm__</span> <span class="p">(</span><span class="err">&#34;</span><span class="no">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">\</span><span class="no">n</span><span class="err">\</span><span class="no">t</span><span class="err">&#34;</span>
</span></span><span class="line"><span class="cl">				 <span class="err">&#34;</span><span class="nf">pause</span><span class="err">&#34;</span><span class="p">)</span><span class="c1">;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">}</span>       
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//每行pause占20%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">Disassembly</span> <span class="no">of</span> <span class="no">section</span> <span class="no">.text</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">00000000004004</span><span class="nf">ed</span> <span class="err">&lt;</span><span class="no">main</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">main</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">push</span>   <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="nv">%rsp</span><span class="p">,</span><span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.71</span> <span class="err">│</span> <span class="mi">4</span><span class="p">:</span>   <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.35</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">20</span><span class="nf">.20</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.81</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">19</span><span class="nf">.88</span> <span class="err">│</span>      <span class="no">pause</span>
</span></span><span class="line"><span class="cl"> <span class="err">20</span><span class="nf">.04</span> <span class="err">│</span>    <span class="err">↑</span> <span class="no">jmp</span>    <span class="mi">4</span>
</span></span><span class="line"><span class="cl"> </span></span></code></pre>
</div>
<p>网络收包软中断</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">asm</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-4" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="nf">_raw_spin_lock_irqsave</span>  <span class="err">/</span><span class="no">proc</span><span class="err">/</span><span class="no">kcore</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">Disassembly</span> <span class="no">of</span> <span class="no">section</span> <span class="no">load2</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="nf">ffffffff81662b00</span> <span class="err">&lt;</span><span class="no">load2</span><span class="err">+</span><span class="mi">0x662b00</span><span class="err">&gt;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.30</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">push</span>   <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.21</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%rsp</span><span class="p">,</span><span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.15</span> <span class="err">│</span>      <span class="no">push</span>   <span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span>      <span class="no">pushfq</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.57</span> <span class="err">│</span>      <span class="no">pop</span>    <span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.45</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.15</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%rax</span><span class="p">,</span><span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.21</span> <span class="err">│</span>      <span class="no">cli</span>
</span></span><span class="line"><span class="cl">  <span class="err">1</span><span class="nf">.20</span> <span class="err">│</span>      <span class="no">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">mov</span>    <span class="no">$0x20000</span><span class="p">,</span><span class="nv">%edx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="na">lock</span>   <span class="nf">xadd</span>   <span class="nv">%edx</span><span class="p">,(</span><span class="nv">%rdi</span><span class="p">)</span> <span class="c1">//加锁耗时83%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> <span class="err">83</span><span class="nf">.42</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%edx</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">shr</span>    <span class="no">$0x10</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.66</span> <span class="err">│</span>      <span class="no">cmp</span>    <span class="nv">%dx</span><span class="p">,</span><span class="nv">%cx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jne</span>    <span class="mi">34</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.06</span> <span class="err">│</span><span class="mi">2</span><span class="no">e</span><span class="p">:</span>   <span class="no">mov</span>    <span class="nv">%rbx</span><span class="p">,</span><span class="nv">%rax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">pop</span>    <span class="nv">%rbx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">pop</span>    <span class="nv">%rbp</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.57</span> <span class="err">│</span>    <span class="err">←</span> <span class="no">retq</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span><span class="mi">34</span><span class="p">:</span>   <span class="no">mov</span>    <span class="nv">%ecx</span><span class="p">,</span><span class="nv">%r8d</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.03</span> <span class="err">│</span>      <span class="no">movzwl</span> <span class="nv">%cx</span><span class="p">,</span><span class="nv">%esi</span>
</span></span><span class="line"><span class="cl">       <span class="err">│3</span><span class="nl">a:</span>   <span class="nf">mov</span>    <span class="no">$0x8000</span><span class="p">,</span><span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">jmp</span>    <span class="mi">4</span><span class="no">f</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.06</span> <span class="err">│</span><span class="mi">48</span><span class="p">:</span>   <span class="no">pause</span>
</span></span><span class="line"><span class="cl">  <span class="err">4</span><span class="nf">.67</span> <span class="err">│</span>      <span class="no">sub</span>    <span class="no">$0x1</span><span class="p">,</span><span class="nv">%eax</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↓</span> <span class="nf">je</span>     <span class="mi">69</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span><span class="mi">4</span><span class="no">f</span><span class="p">:</span>   <span class="no">movzwl</span> <span class="p">(</span><span class="nv">%rdi</span><span class="p">),</span><span class="nv">%edx</span>  <span class="c1">//慢操作
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="err">6</span><span class="nf">.73</span> <span class="err">│</span>      <span class="no">mov</span>    <span class="nv">%edx</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">xor</span>    <span class="nv">%r8d</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>      <span class="nf">and</span>    <span class="no">$0xfffe</span><span class="p">,</span><span class="nv">%ecx</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jne</span>    <span class="mi">48</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.12</span> <span class="err">│</span>      <span class="no">movzwl</span> <span class="nv">%dx</span><span class="p">,</span><span class="nv">%esi</span>
</span></span><span class="line"><span class="cl">  <span class="err">0</span><span class="nf">.09</span> <span class="err">│</span>      <span class="no">callq</span>  <span class="mi">0xffffffff8165501c</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jmp</span>    <span class="mi">2</span><span class="no">e</span>
</span></span><span class="line"><span class="cl">       <span class="err">│69:</span>   <span class="nf">nop</span>
</span></span><span class="line"><span class="cl">       <span class="err">│</span>    <span class="err">↑</span> <span class="nf">jmp</span>    <span class="mi">3</span><span class="no">a</span></span></span></code></pre>
</div>
<p>可以通过perf看到cpu的使用情况：</p>
<pre><code>$sudo perf stat -a -- sleep 10

Performance counter stats for 'system wide':

 239866.330098      task-clock (msec)         #   23.985 CPUs utilized    /10*1000        (100.00%)
        45,709      context-switches          #    0.191 K/sec                    (100.00%)
         1,715      cpu-migrations            #    0.007 K/sec                    (100.00%)
        79,586      page-faults               #    0.332 K/sec
 3,488,525,170      cycles                    #    0.015 GHz                      (83.34%)
 9,708,140,897      stalled-cycles-frontend   #  278.29% /cycles frontend cycles idle     (83.34%)
 9,314,891,615      stalled-cycles-backend    #  267.02% /cycles backend  cycles idle     (66.68%)
 2,292,955,367      instructions              #    0.66  insns per cycle  insn/cycles
                                             #    4.23  stalled cycles per insn stalled-cycles-frontend/insn (83.34%)
   447,584,805      branches                  #    1.866 M/sec                    (83.33%)
     8,470,791      branch-misses             #    1.89% of all branches          (83.33%)
</code></pre>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/f96e50b5f3d0825b68be5b654624f839.png   alt="image.png"  ></p>
<h2 id="ipc测试" class="headerLink">
    <a href="#ipc%e6%b5%8b%e8%af%95" class="header-mark"></a>IPC测试</h2><p>实际运行的时候增加如下nop到100个以上</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-5" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">void main() {
</span></span><span class="line"><span class="cl">    while(1) {
</span></span><span class="line"><span class="cl">         __asm__ (&#34;nop\n\t&#34;
</span></span><span class="line"><span class="cl">                 &#34;nop\n\t&#34;
</span></span><span class="line"><span class="cl">                 &#34;nop&#34;);
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}</span></span></code></pre>
</div>
<p>如果同时运行两个如上测试程序，鲲鹏920运行，每个程序的IPC都是3.99</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-6" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#perf stat -- ./nop.out
</span></span><span class="line"><span class="cl">failed to read counter branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;./nop.out&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       8826.948260      task-clock (msec)         #    1.000 CPUs utilized
</span></span><span class="line"><span class="cl">                 8      context-switches          #    0.001 K/sec
</span></span><span class="line"><span class="cl">                 0      cpu-migrations            #    0.000 K/sec
</span></span><span class="line"><span class="cl">                37      page-faults               #    0.004 K/sec
</span></span><span class="line"><span class="cl">    22,949,862,030      cycles                    #    2.600 GHz
</span></span><span class="line"><span class="cl">         2,099,719      stalled-cycles-frontend   #    0.01% frontend cycles idle
</span></span><span class="line"><span class="cl">        18,859,839      stalled-cycles-backend    #    0.08% backend  cycles idle
</span></span><span class="line"><span class="cl">    91,465,043,922      instructions              #    3.99  insns per cycle
</span></span><span class="line"><span class="cl">                                                  #    0.00  stalled cycles per insn
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      branches
</span></span><span class="line"><span class="cl">            33,262      branch-misses             #    0.00% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       8.827886000 seconds time elapsed</span></span></code></pre>
</div>
<p>intel X86 8260</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-7" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#perf stat -- ./nop.out
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;./nop.out&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      65061.160345      task-clock (msec)         #    1.001 CPUs utilized
</span></span><span class="line"><span class="cl">                46      context-switches          #    0.001 K/sec
</span></span><span class="line"><span class="cl">                92      cpu-migrations            #    0.001 K/sec
</span></span><span class="line"><span class="cl">               108      page-faults               #    0.002 K/sec
</span></span><span class="line"><span class="cl">   155,659,827,263      cycles                    #    2.393 GHz
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      stalled-cycles-frontend
</span></span><span class="line"><span class="cl">   &lt;not supported&gt;      stalled-cycles-backend
</span></span><span class="line"><span class="cl">   603,247,401,995      instructions              #    3.88  insns per cycle
</span></span><span class="line"><span class="cl">     4,742,051,659      branches                  #   72.886 M/sec
</span></span><span class="line"><span class="cl">         1,799,428      branch-misses             #    0.04% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      65.012821629 seconds time elapsed</span></span></code></pre>
</div>
<p>这两块CPU理论IPC最大值都是4，实际x86离理论值更远一些. 增加while循环中的nop数量（从132增加到432个）IPC能提升到3.92</p>
<h2 id="ipc和超线程" class="headerLink">
    <a href="#ipc%e5%92%8c%e8%b6%85%e7%ba%bf%e7%a8%8b" class="header-mark"></a>IPC和超线程</h2><p>ipc是指每个core的IPC</p>
<h3 id="超线程hyper-threading原理httpswwwintelcomcontentwwwusengamingresourceshyper-threadinghtml" class="headerLink">
    <a href="#%e8%b6%85%e7%ba%bf%e7%a8%8bhyper-threading%e5%8e%9f%e7%90%86httpswwwintelcomcontentwwwusengamingresourceshyper-threadinghtml" class="header-mark"></a><a href="https://www.intel.com/content/www/us/en/gaming/resources/hyper-threading.html" target="_blank" rel="noopener noreferrer">超线程(Hyper-Threading)原理</a></h3><p><strong>概念</strong>：一个核还可以进一步分成几个逻辑核，来执行多个控制流程，这样可以进一步提高并行程度，这一技术就叫超线程，intel体系下也叫做 simultaneous multi-threading（<a href="https://en.wikipedia.org/wiki/Simultaneous_multithreading" target="_blank" rel="noopener noreferrer">SMT&ndash;wiki用的是simultaneous</a>，<a href="https://akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener noreferrer">也有人用 symmetric</a>（29页），我觉得symmetric也比较能表达超线程的意思）。</p>
<blockquote>
  <p>Two logical cores can work through tasks more efficiently than a traditional single-threaded core. By taking advantage of idle time when the core would formerly be waiting for other tasks to complete, Intel® Hyper-Threading Technology improves CPU throughput (by up to 30% in server applications).</p>

</blockquote><p>超线程技术主要的出发点是，当处理器在运行一个线程，执行指令代码时，很多时候处理器并不会使用到全部的计算能力，部分计算能力就会处于空闲状态。而超线程技术就是通过多线程来进一步“压榨”处理器。<strong>pipeline进入stalled状态就可以切到其它超线程上</strong></p>
<p>举个例子，如果一个线程运行过程中，必须要等到一些数据加载到缓存中以后才能继续执行，此时 CPU 就可以切换到另一个线程，去执行其他指令，而不用去处于空闲状态，等待当前线程的数据加载完毕。<strong>通常，一个传统的处理器在线程之间切换，可能需要几万个时钟周期。而一个具有 HT 超线程技术的处理器只需要 1 个时钟周期。因此就大大减小了线程之间切换的成本，从而最大限度地让处理器满负荷运转。</strong></p>
<blockquote>
  <p>ARM芯片基本不做超线程，另外请思考为什么有了应用层的多线程切换还需要CPU层面的超线程？</p>

</blockquote><p><strong>超线程(Hyper-Threading)物理实现</strong>: 在CPU内部增加寄存器等硬件设施，但是ALU、译码器等关键单元还是共享。在一个物理 CPU 核心内部，会有双份的 PC 寄存器、指令寄存器乃至条件码寄存器。超线程的目的，是在一个线程 A 的指令，在流水线里停顿的时候，让另外一个线程去执行指令。因为这个时候，CPU 的译码器和 ALU 就空出来了，那么另外一个线程 B，就可以拿来干自己需要的事情。这个线程 B 可没有对于线程 A 里面指令的关联和依赖。</p>
<p>CPU超线程设计过程中会引入5%的硬件，但是有30%的提升（经验值，场景不一样效果不一样，阿里的OB/MySQL/ODPS业务经验是提升35%），这是引入超线程的理论基础。如果是一个core 4个HT的话提升会是 50%</p>
<h3 id="超线程如何查看" class="headerLink">
    <a href="#%e8%b6%85%e7%ba%bf%e7%a8%8b%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b" class="header-mark"></a>超线程如何查看</h3><p>如果physical id和core id都一样的话，说明这两个core实际是一个物理core，其中一个是HT。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/191276e2a1a1731969da748f1690bc9b.png   alt="image.png"  ></p>
<p>physical id对应socket，也就是物理上购买到的一块CPU； core id对应着每个物理CPU里面的一个物理core，同一个phyiscal id下core id一样说明开了HT</p>
<h3 id="ipc和超线程的关系" class="headerLink">
    <a href="#ipc%e5%92%8c%e8%b6%85%e7%ba%bf%e7%a8%8b%e7%9a%84%e5%85%b3%e7%b3%bb" class="header-mark"></a>IPC和超线程的关系</h3><p>IPC 和一个core上运行多少个进程没有关系。实际测试将两个运行nop指令的进程绑定到一个core上，IPC不变, 因为IPC就是该进程分到的circle里执行了多少个指令，只和进程业务逻辑相关。但是如果是这两个进程绑定到一个物理core以及对应的超线程core上那么IPC就会减半。如果程序是IO bound（比如需要频繁读写内存）首先IPC远远低于理论值4的，这个时候超线程同时工作的话IPC基本能翻倍</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210513123233344.png   alt="image-20210513123233344"  ></p>
<p>对应的CPU使用率, 两个进程的CPU使用率是200%，实际产出IPC是2.1+1.64=3.75，比单个进程的IPC为3.92小多了。而单个进程CPU使用率才100%</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20210513130252565.png   alt="image-20210513130252565"  ></p>
<p>以上测试CPU为Intel(R) Xeon(R) Platinum 8260 CPU @ 2.40GHz (Thread(s) per core:    2)</p>
<p>再来看如下CPU上，0和64核是一对HT，单独跑nop、Pause指令的IPC分别是5/0.17(nop是一条完全不会卡顿的指令)，可以得到这款CPU的最高IPC是5，一条 Pause 指令需要28-30个时钟周期。</p>
<p>如果在0/64上同时跑两个nop指令，虽然是两个超线程得到的IPC只有5的一半，也就是超线程在这种完全不卡顿的 nop 指令上完全没用；另外对比在0/64上同时跑两个Pause 指令，IPC 都还是0.17，也就是 Pause 指令完全可以将一个物理核发挥出两倍的运算能力</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221108095422200.png   alt="image-20221108095422200"  ></p>
<p>Pause指令和nop指令同时跑在一对HT上，nop基本不受影响，Pause降得非常低</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221108094802841.png   alt="image-20221108094802841"  ></p>
<p>Pause指令和nop指令同时跑在一个核上，IPC 倒是各自保持不变，但是抢到的 CPU 配额相当于各自 50%(在自己的50%范围内独占，IPC也不受影响)</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221108095753861.png   alt="image-20221108095753861"  ></p>
<p>关掉如上CPU的超线程，从测试结果看海光如果开了超线程 Pause 是28个时钟周期，关掉超线程 Pause 是14个时钟周期</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-8" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">//关掉超线程后 Pause 的IPC 从0.17提升到了0.34
</span></span><span class="line"><span class="cl">#perf stat taskset -c 0 ./pause
</span></span><span class="line"><span class="cl">^Ctaskset: Interrupt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"> Performance counter stats for &#39;taskset -c 0 ./pause&#39;:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">          3,190.28 msec task-clock                #    0.999 CPUs utilized
</span></span><span class="line"><span class="cl">               302      context-switches          #    0.095 K/sec
</span></span><span class="line"><span class="cl">                 1      cpu-migrations            #    0.000 K/sec
</span></span><span class="line"><span class="cl">                99      page-faults               #    0.031 K/sec
</span></span><span class="line"><span class="cl">     7,951,451,789      cycles                    #    2.492 GHz
</span></span><span class="line"><span class="cl">         1,337,801      stalled-cycles-frontend   #    0.02% frontend cycles idle
</span></span><span class="line"><span class="cl">     7,842,812,091      stalled-cycles-backend    #   98.63% backend cycles idle
</span></span><span class="line"><span class="cl">     2,671,280,445      instructions              #    0.34  insn per cycle
</span></span><span class="line"><span class="cl">                                                  #    2.94  stalled cycles per insn
</span></span><span class="line"><span class="cl">        21,917,856      branches                  #    6.870 M/sec
</span></span><span class="line"><span class="cl">            29,607      branch-misses             #    0.14% of all branches
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       3.192937987 seconds time elapsed
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       3.190322000 seconds user
</span></span><span class="line"><span class="cl">       0.000000000 seconds sys
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:        x86_64
</span></span><span class="line"><span class="cl">CPU op-mode(s):      32-bit, 64-bit
</span></span><span class="line"><span class="cl">Byte Order:          Little Endian
</span></span><span class="line"><span class="cl">Address sizes:       43 bits physical, 48 bits virtual
</span></span><span class="line"><span class="cl">CPU(s):              48
</span></span><span class="line"><span class="cl">On-line CPU(s) list: 0-47
</span></span><span class="line"><span class="cl">Thread(s) per core:  1
</span></span><span class="line"><span class="cl">Core(s) per socket:  24
</span></span><span class="line"><span class="cl">Socket(s):           2
</span></span><span class="line"><span class="cl">NUMA node(s):        8
</span></span><span class="line"><span class="cl">Vendor ID:           HygonGenuine
</span></span><span class="line"><span class="cl">CPU family:          24
</span></span><span class="line"><span class="cl">Model:               1
</span></span><span class="line"><span class="cl">Model name:          Hygon C86 7260 24-core Processor
</span></span><span class="line"><span class="cl">Stepping:            1
</span></span><span class="line"><span class="cl">Frequency boost:     enabled
</span></span><span class="line"><span class="cl">CPU MHz:             1070.009
</span></span><span class="line"><span class="cl">CPU max MHz:         2200.0000
</span></span><span class="line"><span class="cl">CPU min MHz:         1200.0000
</span></span><span class="line"><span class="cl">BogoMIPS:            4399.40
</span></span><span class="line"><span class="cl">Virtualization:      AMD-V
</span></span><span class="line"><span class="cl">L1d cache:           1.5 MiB
</span></span><span class="line"><span class="cl">L1i cache:           3 MiB
</span></span><span class="line"><span class="cl">L2 cache:            24 MiB
</span></span><span class="line"><span class="cl">L3 cache:            128 MiB
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):   0-5
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):   6-11
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):   12-17
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):   18-23
</span></span><span class="line"><span class="cl">NUMA node4 CPU(s):   24-29
</span></span><span class="line"><span class="cl">NUMA node5 CPU(s):   30-35
</span></span><span class="line"><span class="cl">NUMA node6 CPU(s):   36-41
</span></span><span class="line"><span class="cl">NUMA node7 CPU(s):   42-47</span></span></code></pre>
</div>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221108175100638.png   alt="image-20221108175100638"  ></p>
<h3 id="intel和amd单核以及ht性能比较" class="headerLink">
    <a href="#intel%e5%92%8camd%e5%8d%95%e6%a0%b8%e4%bb%a5%e5%8f%8aht%e6%80%a7%e8%83%bd%e6%af%94%e8%be%83" class="header-mark"></a>Intel和AMD单核以及HT性能比较</h3><p>测试命令，这个测试命令无论在哪个CPU下，用2个物理核用时都是一个物理核的一半，所以这个计算是可以完全并行的</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-9" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">taskset -c 1,53 /usr/bin/sysbench --num-threads=2 --test=cpu --cpu-max-prime=50000 run //单核用一个threads，绑核， HT用2个threads，绑一对HT</span></span></code></pre>
</div>
<p>测试结果为耗时，单位秒，Hygon 7280 就是Zen2架构</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: left">Family Name</th>
            <th style="text-align: left">Intel 8269CY CPU @ 2.50GHz</th>
            <th style="text-align: left">Intel E5-2682 v4 @ 2.50GHz</th>
            <th style="text-align: left">Hygon 7280 2.1G</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left">单核  prime 50000</td>
            <td style="text-align: left">83</td>
            <td style="text-align: left">109</td>
            <td style="text-align: left">89</td>
        </tr>
        <tr>
            <td style="text-align: left">HT  prime 50000</td>
            <td style="text-align: left">48</td>
            <td style="text-align: left">74</td>
            <td style="text-align: left">87</td>
        </tr>
    </tbody>
  </table>
</div>
<h2 id="主频和性价比" class="headerLink">
    <a href="#%e4%b8%bb%e9%a2%91%e5%92%8c%e6%80%a7%e4%bb%b7%e6%af%94" class="header-mark"></a>主频和性价比</h2><p>拿Intel 在数据中心计算的大核CPU IvyBridge与当时用于 存储系列的小核CPU Avoton（ATOM）, 分别测试阿里巴巴(Oceanbase ，MySQL, ODPS)的workload，得到性能吞吐如下：</p>
<p>Intel 大小CPU 核心                   阿里 Workload Output(QPS)</p>
<p>Avoton(8 cores) 2.4GHZ                 10K on single core</p>
<p>Ivy Bridge(2650 v2 disable HT) 2.6GHZ      20K on single core</p>
<p>Ivy Bridge(2650 v2 enable HT) 2.4GHZ       25K on single core</p>
<p>Ivy Bridge(2650 v2 enable HT) 2.6GHZ       27K on single core</p>
<ol>
<li>超线程等于将一个大核CPU 分拆成两个小核，Ivy Bridge的数据显示超线程给 Ivy Bridge <strong>1.35倍</strong>(27K/20K) 的提升</li>
<li>现在我们分别评判 两种CPU对应的性能密度 (performance/core die size) ，该数据越大越好，根据我们的计算和测量发现：Avoton(包含L1D, L1I, and L2 per core)大约是 3<del>4平方毫米，Ivy Bridge (包含L1D, L1I, L2 )大约是12</del>13平方毫米, L3/core是 6~7平方毫米, 所以 Ivy Bridge 单核心的芯片面积需要18 ~ 20平方毫米。基于上面的数据我们得到的 Avoton core的性能密度为 2.5 (10K/4sqmm)，而Ivy Bridge的性能密度是1.35 (27K/20sqmm)，因此相同的芯片面积下 Avoton 的性能是 Ivy Bridge的 <strong>1.85倍</strong>(2.5/1.35).</li>
<li>从功耗的角度看性能的提升的对比数据，E5-2650v2(Ivy Bridge) 8core TDP 90w， Avoton 8 core TDP 20瓦， 性能/功耗 Avoton 是 10K QPS/20瓦， Ivy Bridge是 27KQPS/90瓦， 因此 相同的功耗下 Avoton是 Ivy Bridge的 <strong>1.75倍</strong>（10K QPS/20）/ （27KQPS/95）</li>
<li>从价格方面再进行比较，E5-2650v2(Ivy Bridge) 8core 官方价格是1107美元， Avoton 8 core官方价格是171美元。性能/价格 Avoton是 10KQPS/171美元，Ivy Bridge 是 27KQPS/1107美元， 因此相同的美元 Avoton的性能是 Ivy Bridge 的**2.3倍（**1 10KQPS/171美元）/ （27KQPS/1107美元）</li>
</ol>
<p>从以上结论可以看到在数据中心的场景下，由于指令数据相关性较高，同时由于内存访问的延迟更多，因此复杂的CPU体系结构并不能获得相应性能提升，该原因导致我们需要的是更多的小核CPU，以此达到高吞吐量的能力，因此2014年我们向Intel提出需要将物理CPU的超线程由 2个升级到4个/8个， 或者直接将用更多的小核CPU增加服务器的吞吐能力，最新数据表明Intel 会在大核CPU中引入4个超线程，和在相同的芯片面积下引入更多的小核CPU。</p>
<p>预测：为了减少数据中心的功耗，我们需要提升单位面积下的计算密度，因此将来会引入Rack Computing的计算模式，每台服务器将会有4～5百个CPU core，如果使用4个CPU socket，每台机器将会达到～1000个CPU core，结合Compute Express Link (CXL), 一个机架内允许16台服务器情况下，可以引入共享内存，那么一个进程可以运行在上万个CPU core中，这样复杂环境下，我们需要对于这样的软件环境做出更多的布局和优化。</p>
<h2 id="perf-top-和-pause-的案例httpstopicatatechorgarticles85549" class="headerLink">
    <a href="#perf-top-%e5%92%8c-pause-%e7%9a%84%e6%a1%88%e4%be%8bhttpstopicatatechorgarticles85549" class="header-mark"></a><a href="https://topic.atatech.org/articles/85549" target="_blank" rel="noopener noreferrer">perf top 和 pause 的案例</a></h2><p>在Skylake的架构中，将pause由10个时钟周期增加到了140个时钟周期。主要用在spin lock当中因为spin loop 多线程竞争差生的内存乱序而引起的性能下降。pause的时钟周期高过了绝大多数的指令cpu cycles，那么当我们利用perf top统计cpu 性能的时候，pause会有什么影响呢？我们可以利用一段小程序来测试一下.</p>
<p>测试机器：
CPU: Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz * 2, 共96个超线程</p>
<p>案例：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/864427c491497acb02d37c02cb35eeb2.png   alt="image.png"  ></p>
<p>对如上两个pause指令以及一个 count++（addq），进行perf top：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/40945b005eb9f716e429fd30be55b6d1.png   alt="image.png"  ></p>
<p>可以看到第一个pasue在perf top中cycles为0，第二个为46.85%，另外一个addq也有48.83%，基本可以猜测perf top在这里数据都往后挪了一个。</p>
<p><strong>问题总结：</strong>
我们知道perf top是通过读取PMU的PC寄存器来获取当前执行的指令进而根据汇编的symbol信息获得是执行的哪条指令。所以看起来CPU在执行pause指令的时候，从PMU中看到的PC值指向到了下一条指令，进而导致我们看到的这个现象。通过查阅《Intel® 64 and IA-32 Architectures Optimization Reference Manual》目前还无法得知这是CPU的一个设计缺陷还是PMU的一个bug(需要对pause指令做特殊处理)。<strong>不管怎样，这个实验证明了我们统计spin lock的CPU占比还是准确的，不会因为pause指令导致PMU采样出错导致统计信息的整体失真。只是对于指令级的CPU统计，我们能确定的就是它把pause的执行cycles 数统计到了下一条指令。</strong></p>
<p><strong>补充说明：</strong> <strong>经过测试，非skylake CPU也同样存在perf top会把pause(执行数cycles是10)的执行cycles数统计到下一条指令的问题，看来这是X86架构都存在的问题。</strong></p>
<h2 id="perf-和火焰图" class="headerLink">
    <a href="#perf-%e5%92%8c%e7%81%ab%e7%84%b0%e5%9b%be" class="header-mark"></a>perf 和火焰图</h2><p>调用 perf record 采样几秒钟，一般需要加 -g 参数，也就是 call-graph，还需要抓取函数的调用关系。在多核的机器上，还要记得加上 -a 参数，保证获取所有 CPU Core 上的函数运行情况。至于采样数据的多少，在讲解 perf 概念的时候说过，我们可以用 -c 或者 -F 参数来控制。</p>
<pre><code>   83  07/08/19 13:56:26 sudo perf record -ag -p 4759
   84  07/08/19 13:56:50 ls /tmp/
   85  07/08/19 13:57:06 history |tail -16
   86  07/08/19 13:57:20 sudo chmod 777 perf.data
   87  07/08/19 13:57:33 perf script &gt;out.perf
   88  07/08/19 13:59:24 ~/tools/FlameGraph-master/./stackcollapse-perf.pl ~/out.perf &gt;out.folded
   89  07/08/19 14:01:01 ~/tools/FlameGraph-master/flamegraph.pl out.folded &gt; kernel-perf.svg
   90  07/08/19 14:01:07 ls -lh
   91  07/08/19 14:03:33 history


$ sudo perf record -F 99 -a -g -- sleep 60 //-F 99 指采样每秒钟做 99 次
</code></pre>
<p>　　执行这个命令将生成一个 perf.data 文件：</p>
<p>执行sudo perf report -n可以生成报告的预览。
执行sudo perf report -n &ndash;stdio可以生成一个详细的报告。
执行sudo perf script可以 dump 出 perf.data 的内容。</p>
<pre><code># 折叠调用栈
$ FlameGraph/stackcollapse-perf.pl out.perf &gt; out.folded
# 生成火焰图
$ FlameGraph/flamegraph.pl out.folded &gt; out.svg
</code></pre>
<h2 id="ecs和perf" class="headerLink">
    <a href="#ecs%e5%92%8cperf" class="header-mark"></a>ECS和perf</h2><p>在ECS会采集不到 cycles等，cpu-clock、page-faults都是内核中的软事件，cycles/instructions得采集cpu的PMU数据，ECS采集不到这些PMU数据。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/a120388ff72d712a4fd176e7cea005cf.png   alt="image.png"  ></p>
<h2 id="perf-和-false-share-cache_line" class="headerLink">
    <a href="#perf-%e5%92%8c-false-share-cache_line" class="header-mark"></a>Perf 和 false share cache_line</h2><p><a href="https://joemario.github.io/blog/2016/09/01/c2c-blog/" target="_blank" rel="noopener noreferrer">从4.2kernel开始，perf支持perf c2c (cache 2 cahce) 来监控cache_line的伪共享</a></p>
<h2 id="系列文章-1" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0-1" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87%28FT2500%29%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<h2 id="参考资料" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-mark"></a>参考资料</h2><p><a href="https://zhengheng.me/2015/11/12/perf-stat/" target="_blank" rel="noopener noreferrer">perf详解</a></p>
<p><a href="https://www.atatech.org/articles/109158" target="_blank" rel="noopener noreferrer">CPU体系结构</a></p>
<p><a href="https://mp.weixin.qq.com/s/KaDJ1EF5Y-ndjRv2iUO3cA" target="_blank" rel="noopener noreferrer">震惊，用了这么多年的 CPU 利用率，其实是错的</a>cpu占用不代表在做事情，可能是stalled，也就是流水线卡顿，但是cpu占用了，实际没事情做。</p>
<p><a href="http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html" target="_blank" rel="noopener noreferrer">CPU Utilization is Wrong</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzUxNjE3MTcwMg==&amp;mid=2247483755&amp;idx=1&amp;sn=5324f7e46c91739b566dfc1d0847fc4a&amp;chksm=f9aa33b2ceddbaa478729383cac89967cc515bafa472001adc4ad42fb37e3ce473eddc3b591a&amp;mpshare=1&amp;scene=1&amp;srcid=0127mp3WJ6Kd1UOQISFg3SIC#rd" target="_blank" rel="noopener noreferrer">震惊，用了这么多年的 CPU 利用率，其实是错的</a></p>
<p><a href="https://kernel.taobao.org/2019/03/Top-down-Microarchitecture-Analysis-Method/" target="_blank" rel="noopener noreferrer">https://kernel.taobao.org/2019/03/Top-down-Microarchitecture-Analysis-Method/</a></p>
<p><a href="http://www.akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener noreferrer">What Every Programmer Should Know About Main Memory</a> by Ulrich Drepper</p>
<p><a href="https://mazzo.li/posts/fast-pipes.html" target="_blank" rel="noopener noreferrer">How fast are Linux pipes anyway?</a> 优化 pipes 的读写带宽，perf、hugepage、splice使用</p>
]]></description>
</item><item>
    <title>飞腾ARM芯片-FT2500的性能测试</title>
    <link>http://localhost:1313/posts/%E9%A3%9E%E8%85%BEarm%E8%8A%AF%E7%89%87ft2500%E7%9A%84%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Sat, 15 May 2021 17:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E9%A3%9E%E8%85%BEarm%E8%8A%AF%E7%89%87ft2500%E7%9A%84%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</guid>
    <description><![CDATA[<h1 id="飞腾arm芯片-ft2500的性能测试" class="headerLink">
    <a href="#%e9%a3%9e%e8%85%bearm%e8%8a%af%e7%89%87-ft2500%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95" class="header-mark"></a>飞腾ARM芯片-FT2500的性能测试</h1><h2 id="arm" class="headerLink">
    <a href="#arm" class="header-mark"></a>ARM</h2><p>ARM公司最早是由赫尔曼·豪泽（Hermann Hauser）和工程师Chris Curry在1978年创立（早期全称是 Acorn RISC Machine），后来改名为现在的ARM公司（Advanced RISC Machine）</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/ac0bac75ae745316e0c011ffdc5a78a5.png   alt="img"  ></p>
<h3 id="arm-芯片厂家" class="headerLink">
    <a href="#arm-%e8%8a%af%e7%89%87%e5%8e%82%e5%ae%b6" class="header-mark"></a>ARM 芯片厂家</h3><p>查看厂家</p>
<blockquote>
  <p>#cat /proc/cpuinfo |grep implementer</p>
<p>CPU implementer    : 0x70</p>
<p>#cat /sys/devices/system/cpu/cpu0/regs/identification/midr_el1
0x00000000701f6633  // 70 表示厂家</p>

</blockquote><p>vendor id对应厂家</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: left">Vendor Name</th>
            <th style="text-align: left">Vendor ID</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: left">ARM</td>
            <td style="text-align: left">0x41</td>
        </tr>
        <tr>
            <td style="text-align: left">Broadcom</td>
            <td style="text-align: left">0x42</td>
        </tr>
        <tr>
            <td style="text-align: left">Cavium</td>
            <td style="text-align: left">0x43</td>
        </tr>
        <tr>
            <td style="text-align: left">DigitalEquipment</td>
            <td style="text-align: left">0x44</td>
        </tr>
        <tr>
            <td style="text-align: left">HiSilicon</td>
            <td style="text-align: left">0x48</td>
        </tr>
        <tr>
            <td style="text-align: left">Infineon</td>
            <td style="text-align: left">0x49</td>
        </tr>
        <tr>
            <td style="text-align: left">Freescale</td>
            <td style="text-align: left">0x4D</td>
        </tr>
        <tr>
            <td style="text-align: left">NVIDIA</td>
            <td style="text-align: left">0x4E</td>
        </tr>
        <tr>
            <td style="text-align: left">APM</td>
            <td style="text-align: left">0x50</td>
        </tr>
        <tr>
            <td style="text-align: left">Qualcomm</td>
            <td style="text-align: left">0x51</td>
        </tr>
        <tr>
            <td style="text-align: left">Marvell</td>
            <td style="text-align: left">0x56</td>
        </tr>
        <tr>
            <td style="text-align: left">Intel</td>
            <td style="text-align: left">0x69</td>
        </tr>
        <tr>
            <td style="text-align: left">飞腾</td>
            <td style="text-align: left">0x70</td>
        </tr>
    </tbody>
  </table>
</div>
<h2 id="飞腾arm芯片介绍" class="headerLink">
    <a href="#%e9%a3%9e%e8%85%bearm%e8%8a%af%e7%89%87%e4%bb%8b%e7%bb%8d" class="header-mark"></a>飞腾ARM芯片介绍</h2><p><strong>飞腾处理器</strong>，又称<strong>银河飞腾处理器</strong>，是由<a href="https://zh.wikipedia.org/wiki/%e4%b8%ad%e5%9c%8b%e4%ba%ba%e6%b0%91%e8%a7%a3%e6%94%be%e8%bb%8d%e5%9c%8b%e9%98%b2%e7%a7%91%e5%ad%b8%e6%8a%80%e8%a1%93%e5%a4%a7%e5%ad%b8" target="_blank" rel="noopener noreferrer">中国人民解放军国防科学技术大学</a>研制的一系列嵌入式<a href="https://zh.wikipedia.org/wiki/%e6%95%b0%e5%ad%97%e4%bf%a1%e5%8f%b7%e5%a4%84%e7%90%86%e5%99%a8" target="_blank" rel="noopener noreferrer">数字信号处理器</a>（DSP）和<a href="https://zh.wikipedia.org/wiki/%e4%b8%ad%e5%a4%ae%e5%a4%84%e7%90%86%e5%99%a8" target="_blank" rel="noopener noreferrer">中央处理器</a>（CPU）芯片。[<a href="https://zh.wikipedia.org/wiki/%e9%a3%9e%e8%85%be%e5%a4%84%e7%90%86%e5%99%a8#cite_note-cw-1" target="_blank" rel="noopener noreferrer">1]</a>这个处理器系列的研发，是由国防科技大的<a href="https://zh.wikipedia.org/w/index.php?title=%e9%82%a2%e5%ba%a7%e7%a8%8b&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener noreferrer">邢座程</a>教授[<a href="https://zh.wikipedia.org/wiki/%e9%a3%9e%e8%85%be%e5%a4%84%e7%90%86%e5%99%a8#cite_note-2" target="_blank" rel="noopener noreferrer">2]</a>带领的团队负责研发。[<a href="https://zh.wikipedia.org/wiki/%e9%a3%9e%e8%85%be%e5%a4%84%e7%90%86%e5%99%a8#cite_note-Xing_671-3" target="_blank" rel="noopener noreferrer">3]</a>其<a href="https://zh.wikipedia.org/w/index.php?title=%e5%95%86%e6%a5%ad%e5%8c%96&amp;action=edit&amp;redlink=1" target="_blank" rel="noopener noreferrer">商业化</a><a href="https://zh.wikipedia.org/wiki/%e6%8e%a8%e5%bb%a3" target="_blank" rel="noopener noreferrer">推广</a>则是由<a href="https://zh.wikipedia.org/wiki/%e4%b8%ad%e5%9b%bd%e7%94%b5%e5%ad%90%e4%bf%a1%e6%81%af%e4%ba%a7%e4%b8%9a%e9%9b%86%e5%9b%a2%e6%9c%89%e9%99%90%e5%85%ac%e5%8f%b8" target="_blank" rel="noopener noreferrer">中国电子信息产业集团有限公司</a>旗下的天津飞腾信息技术有限公司负责。</p>
<p>飞腾公司在早期，考察了SPARC、MIPS、ALPHA架构，这三种指令集架构都可以以极其低廉的价格（据说SPARC的授权价只有99美元，ALPHA不要钱）获得授权，飞腾选择了SPARC架构进行了CPU的研发。</p>
<p>2012年ARM正式推出了自己的第一个64位指令集处理器架构ARMv8，进入服务器等新的领域。此后飞腾放弃了SPARC，拿了ARMv8指令集架构的授权，全面转向了ARM阵营，芯片roadmap如下：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/3407604faa7ca9a87fa26610606081ab.png   alt="img"  ></p>
<h3 id="测试芯片详细信息httpspdfdfcfwcompdfh3_ap202010201422468889_1pdf1603181661000pdf" class="headerLink">
    <a href="#%e6%b5%8b%e8%af%95%e8%8a%af%e7%89%87%e8%af%a6%e7%bb%86%e4%bf%a1%e6%81%afhttpspdfdfcfwcompdfh3_ap202010201422468889_1pdf1603181661000pdf" class="header-mark"></a><a href="https://pdf.dfcfw.com/pdf/H3_AP202010201422468889_1.pdf?1603181661000.pdf" target="_blank" rel="noopener noreferrer">测试芯片详细信息</a></h3><p>2020 年 7 月 23 日，飞腾发布新一代高可扩展多路服务器芯片腾云 S2500，采用 16nm 工艺， 主频 2.0~2.2Ghz，拥有 64 个 FTC663 内核，片内集成 64MB 三级 Cache，支持 8 个 DDR4-3200 存 储通道，功耗 150W。</p>
<p>基于 ARM 架构，兼具高可拓展性和低功耗，扩展支持 2 路到 8 路直连。与主流架构 X86 相比， ARM 架构具备低功耗、低发热和低成本的优势，ARM 单核的面积仅为 X86 核的 1/7，同样芯片尺寸下可以继承更多核心数，可以通过增加核心数提高性能，在性能快速提升下，也能保持较低的功耗，符合云计算场景下并行计算上高并发和高效率的要求，也能有效控制服务器的能耗和成本支出。腾云 S2500 增加了 4 个直连接口，总带宽 800Gbps，支持 2 路、4 路和 8 路直连，具备高可 拓展性，可以形成 128 核到 512 核的计算机系统，带动算力提升。</p>
<p>飞腾(FT2500), ARMv8架构，主频2.1G，服务器两路，每路64个物理core，没有超线程，总共16个numa，每个numa 8个core</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#dmidecode -t processor
</span></span><span class="line"><span class="cl"># dmidecode 3.0
</span></span><span class="line"><span class="cl">Getting SMBIOS data from sysfs.
</span></span><span class="line"><span class="cl">SMBIOS 3.2.0 present.
</span></span><span class="line"><span class="cl"># SMBIOS implementations newer than version 3.0 are not
</span></span><span class="line"><span class="cl"># fully supported by this version of dmidecode.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Handle 0x0004, DMI type 4, 48 bytes
</span></span><span class="line"><span class="cl">Processor Information
</span></span><span class="line"><span class="cl">    Socket Designation: BGA3576
</span></span><span class="line"><span class="cl">    Type: Central Processor
</span></span><span class="line"><span class="cl">    Family: &lt;OUT OF SPEC&gt;
</span></span><span class="line"><span class="cl">    Manufacturer: PHYTIUM
</span></span><span class="line"><span class="cl">    ID: 00 00 00 00 70 1F 66 22
</span></span><span class="line"><span class="cl">    Version: FT2500
</span></span><span class="line"><span class="cl">    Voltage: 0.8 V
</span></span><span class="line"><span class="cl">    External Clock: 50 MHz
</span></span><span class="line"><span class="cl">    Max Speed: 2100 MHz
</span></span><span class="line"><span class="cl">    Current Speed: 2100 MHz
</span></span><span class="line"><span class="cl">    Status: Populated, Enabled
</span></span><span class="line"><span class="cl">    Upgrade: Other
</span></span><span class="line"><span class="cl">    L1 Cache Handle: 0x0005
</span></span><span class="line"><span class="cl">    L2 Cache Handle: 0x0007
</span></span><span class="line"><span class="cl">    L3 Cache Handle: 0x0008
</span></span><span class="line"><span class="cl">    Serial Number: 1234567
</span></span><span class="line"><span class="cl">    Asset Tag: No Asset Tag
</span></span><span class="line"><span class="cl">    Part Number: NULL
</span></span><span class="line"><span class="cl">    Core Count: 64
</span></span><span class="line"><span class="cl">    Core Enabled: 64
</span></span><span class="line"><span class="cl">    Thread Count: 64
</span></span><span class="line"><span class="cl">    Characteristics:
</span></span><span class="line"><span class="cl">        64-bit capable
</span></span><span class="line"><span class="cl">        Multi-Core
</span></span><span class="line"><span class="cl">        Hardware Thread
</span></span><span class="line"><span class="cl">        Execute Protection
</span></span><span class="line"><span class="cl">        Enhanced Virtualization
</span></span><span class="line"><span class="cl">        Power/Performance Control
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">#lscpu
</span></span><span class="line"><span class="cl">Architecture:          aarch64
</span></span><span class="line"><span class="cl">Byte Order:            Little Endian
</span></span><span class="line"><span class="cl">CPU(s):                128
</span></span><span class="line"><span class="cl">On-line CPU(s) list:   0-127
</span></span><span class="line"><span class="cl">Thread(s) per core:    1
</span></span><span class="line"><span class="cl">Core(s) per socket:    64
</span></span><span class="line"><span class="cl">Socket(s):             2
</span></span><span class="line"><span class="cl">NUMA node(s):          16
</span></span><span class="line"><span class="cl">Model:                 3
</span></span><span class="line"><span class="cl">BogoMIPS:              100.00
</span></span><span class="line"><span class="cl">L1d cache:             32K
</span></span><span class="line"><span class="cl">L1i cache:             32K
</span></span><span class="line"><span class="cl">L2 cache:              2048K
</span></span><span class="line"><span class="cl">L3 cache:              65536K
</span></span><span class="line"><span class="cl">NUMA node0 CPU(s):     0-7
</span></span><span class="line"><span class="cl">NUMA node1 CPU(s):     8-15
</span></span><span class="line"><span class="cl">NUMA node2 CPU(s):     16-23
</span></span><span class="line"><span class="cl">NUMA node3 CPU(s):     24-31
</span></span><span class="line"><span class="cl">NUMA node4 CPU(s):     32-39
</span></span><span class="line"><span class="cl">NUMA node5 CPU(s):     40-47
</span></span><span class="line"><span class="cl">NUMA node6 CPU(s):     48-55
</span></span><span class="line"><span class="cl">NUMA node7 CPU(s):     56-63
</span></span><span class="line"><span class="cl">NUMA node8 CPU(s):     64-71
</span></span><span class="line"><span class="cl">NUMA node9 CPU(s):     72-79
</span></span><span class="line"><span class="cl">NUMA node10 CPU(s):    80-87
</span></span><span class="line"><span class="cl">NUMA node11 CPU(s):    88-95
</span></span><span class="line"><span class="cl">NUMA node12 CPU(s):    96-103
</span></span><span class="line"><span class="cl">NUMA node13 CPU(s):    104-111
</span></span><span class="line"><span class="cl">NUMA node14 CPU(s):    112-119
</span></span><span class="line"><span class="cl">NUMA node15 CPU(s):    120-127
</span></span><span class="line"><span class="cl">Flags:                 fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">node distances:
</span></span><span class="line"><span class="cl">node   0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15
</span></span><span class="line"><span class="cl">  0:  10  20  40  30  20  30  50  40  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  1:  20  10  30  40  50  20  40  50  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  2:  40  30  10  20  40  50  20  30  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  3:  30  40  20  10  30  20  40  50  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  4:  20  50  40  30  10  50  30  20  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  5:  30  20  50  20  50  10  50  40  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  6:  50  40  20  40  30  50  10  30  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  7:  40  50  30  50  20  40  30  10  100  100  100  100  100  100  100  100
</span></span><span class="line"><span class="cl">  8:  100  100  100  100  100  100  100  100  10  20  40  30  20  30  50  40
</span></span><span class="line"><span class="cl">  9:  100  100  100  100  100  100  100  100  20  10  30  40  50  20  40  50
</span></span><span class="line"><span class="cl"> 10:  100  100  100  100  100  100  100  100  40  30  10  20  40  50  20  30
</span></span><span class="line"><span class="cl"> 11:  100  100  100  100  100  100  100  100  30  40  20  10  30  20  40  50
</span></span><span class="line"><span class="cl"> 12:  100  100  100  100  100  100  100  100  20  50  40  30  10  50  30  20
</span></span><span class="line"><span class="cl"> 13:  100  100  100  100  100  100  100  100  30  20  50  20  50  10  50  40
</span></span><span class="line"><span class="cl"> 14:  100  100  100  100  100  100  100  100  50  40  20  40  30  50  10  30
</span></span><span class="line"><span class="cl"> 15:  100  100  100  100  100  100  100  100  40  50  30  50  20  40  30  10</span></span></code></pre>
</div>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210422121346490.png   alt="image-20210422121346490"  ></p>
<p>cpu详细信息：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/e177902c-73b2-4535-9c1f-2726451820db.png   alt="img"  ></p>
<p>飞腾芯片，按如下distance绑核基本没区别！展示出来的distance是假的一样</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/5a19ff61-68db-4c65-be4c-6b6c155a8a29.png   alt="img"  ></p>
<p>FT2500芯片集成的 64 个处理器核心，划分为 8 个 Panel，每个 Panel 中有两个 Cluster (每个 Cluster 包含 4 个处理器核心及共享的 2M 二级 cache)、两个本地目录控 制部件(DCU)、一个片上网络路由器节点(Cell)和一个紧密耦合的访存控制 器(MCU)。Panel 之间通过片上网络接口连接，一致性维护报文、数据报文、 调测试报文、中断报文等统一从同一套网络接口进行路由和通信</p>
<p>一个Panel的实现是FTC663版本，采用四发射乱序超标量流水线结构，兼容 ARMv8 指令集，支持 EL0~EL3 多个特权级。流水线分为取指、译码、分派、执 行和写回五个阶段，采用顺序取指、乱序执行、顺序提交的多发射执行机制，取 值宽度、译码宽度、分派宽度均是 4 条指令，共有 9 个执行部件(或者称为 9 条功能流水线)，分别是 4 个整数部件、2 个浮点部件、1 个 load 部件、1 个 load/store 部件和 1 个系统管理指令执行部件。浮点流水线能够合并执行双路浮点 SIMD 指 令，实现每拍可以执行 4 条双精度浮点操作的峰值性能。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210910120438276.png   alt="image-20210910120438276"  ></p>
<p>猜测FT2500 64core用的是一个Die, 但是core之间的连接是Ring Bus，而Ring Bus下core太多后延迟会快速增加，所以一个Die 内部做了8个小的Ring Bus，每个Ring Bus下8个core。</p>
<h3 id="飞腾官方提供的测试结果" class="headerLink">
    <a href="#%e9%a3%9e%e8%85%be%e5%ae%98%e6%96%b9%e6%8f%90%e4%be%9b%e7%9a%84%e6%b5%8b%e8%af%95%e7%bb%93%e6%9e%9c" class="header-mark"></a>飞腾官方提供的测试结果</h3><p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210909175954574.png   alt="image-20210909175954574"  ></p>
<h3 id="飞腾2500-和-鲲鹏9200-参数对比" class="headerLink">
    <a href="#%e9%a3%9e%e8%85%be2500-%e5%92%8c-%e9%b2%b2%e9%b9%8f9200-%e5%8f%82%e6%95%b0%e5%af%b9%e6%af%94" class="header-mark"></a>飞腾2500 和 鲲鹏9200 参数对比</h3><p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210422095217195.png   alt="image-20210422095217195"  ></p>
<h3 id="ft2000与ft2500差异" class="headerLink">
    <a href="#ft2000%e4%b8%8eft2500%e5%b7%ae%e5%bc%82" class="header-mark"></a>FT2000与FT2500差异</h3><p>下表是FT2000和FT2500产品规格对比表，和芯片的单核内部结构变化较少，多了L3，主频提高了，其他基本没有变化。</p>

<div class="table-wrapper">
  <table>
    <thead>
        <tr>
            <th style="text-align: "><strong>特征</strong></th>
            <th style="text-align: "><strong>FT-2000+/64</strong></th>
            <th style="text-align: "><strong>FT-2500</strong></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td style="text-align: ">指令</td>
            <td style="text-align: ">兼容 ARM V8 指令集 FTC662 内核</td>
            <td style="text-align: ">兼容 ARM V8 指令集FTC663 内核</td>
        </tr>
        <tr>
            <td style="text-align: ">Core数</td>
            <td style="text-align: ">64个</td>
            <td style="text-align: ">64个</td>
        </tr>
        <tr>
            <td style="text-align: ">频率</td>
            <td style="text-align: ">2.2GHZ/2.0GHZ/1.8GHZ</td>
            <td style="text-align: "><strong>2.0~2.3GHz</strong></td>
        </tr>
        <tr>
            <td style="text-align: ">体系架构</td>
            <td style="text-align: ">NUMA</td>
            <td style="text-align: ">NUMA</td>
        </tr>
        <tr>
            <td style="text-align: ">RAS</td>
            <td style="text-align: ">无</td>
            <td style="text-align: ">支持</td>
        </tr>
        <tr>
            <td style="text-align: ">加解密</td>
            <td style="text-align: ">无</td>
            <td style="text-align: "><strong>ASE128、SHA1、SHA2-256、PMULL</strong></td>
        </tr>
        <tr>
            <td style="text-align: ">L1 Cache</td>
            <td style="text-align: ">每个核独占32KB指令Cache与32KB数据Cache</td>
            <td style="text-align: ">每个核独占32K指令Cache与32K数据Cache</td>
        </tr>
        <tr>
            <td style="text-align: ">L2 Cache</td>
            <td style="text-align: ">共32MB，每4个核共享2MB</td>
            <td style="text-align: ">共32MB，每4个核共享2MB</td>
        </tr>
        <tr>
            <td style="text-align: ">L3 Cache</td>
            <td style="text-align: ">无</td>
            <td style="text-align: "><strong>64MB</strong></td>
        </tr>
        <tr>
            <td style="text-align: ">LMU数量</td>
            <td style="text-align: ">8个</td>
            <td style="text-align: ">8个</td>
        </tr>
        <tr>
            <td style="text-align: ">支持最大容量</td>
            <td style="text-align: ">1TB</td>
            <td style="text-align: ">1TB*socket数量</td>
        </tr>
        <tr>
            <td style="text-align: ">支持最大频率</td>
            <td style="text-align: ">3200MHZ</td>
            <td style="text-align: ">支持3200MHZ</td>
        </tr>
        <tr>
            <td style="text-align: ">外接设备</td>
            <td style="text-align: ">支持带 ECC 的 DDR4 DIMM，支持 RDIMM、UDIMM、SODIMM、 LR-DIMM，电压 1.2V</td>
            <td style="text-align: ">支持带 ECC 的 DDR4 DIMM，支持 RDIMM、UDIMM、SODIMM、LR-DIMM，电压 1.2V</td>
        </tr>
        <tr>
            <td style="text-align: ">镜像存储</td>
            <td style="text-align: ">无</td>
            <td style="text-align: ">每两个MCU互为备份</td>
        </tr>
        <tr>
            <td style="text-align: ">PCIe</td>
            <td style="text-align: ">PCIE3.02 个 x16 和 1 个 x1每个 x16 可拆分成 2 个 x8，支持翻转</td>
            <td style="text-align: ">PCIE3.01 个 x16 和 1 个 x1x16 可拆分成 2 个 x8，支持翻转</td>
        </tr>
        <tr>
            <td style="text-align: ">SPI</td>
            <td style="text-align: ">支持 4 个片选，单片最大支持容量为 512MB，电压 1.8V</td>
            <td style="text-align: ">支持 4 个片选，单片最大支持容量为 512MB，电压 1.8V</td>
        </tr>
        <tr>
            <td style="text-align: ">UART</td>
            <td style="text-align: ">4个 UART，其中 1 个为 9 线全功能串口，3 个为 3 线调试串口</td>
            <td style="text-align: ">4个 UART，其中 1 个为 9 线全功能串口，3 个为 3 线调试串口</td>
        </tr>
        <tr>
            <td style="text-align: ">GPIO</td>
            <td style="text-align: ">4 个 8 位 GPIO 接口，GPIOA[0:7]，GPIOB[0:7]，GPIOC[0:7]， GPIOD[0:7]</td>
            <td style="text-align: ">4 个 8 位 GPIO 接口，GPIOA[0:7]，GPIOB[0:7]，GPIOC[0:7]， GPIOD[0:7]</td>
        </tr>
        <tr>
            <td style="text-align: ">LPC</td>
            <td style="text-align: ">1 个 LPC 接口，兼容 Intel Low Pin Count 协议, 电压 1.8V</td>
            <td style="text-align: ">1 个 LPC 接口，兼容 Intel Low Pin Count 协议, 电压 1.8V</td>
        </tr>
        <tr>
            <td style="text-align: ">I2C</td>
            <td style="text-align: ">2 个 I2C master 控制器</td>
            <td style="text-align: ">2 个 I2C master /Slave控制器,2个slave控制器</td>
        </tr>
        <tr>
            <td style="text-align: ">直连</td>
            <td style="text-align: ">无</td>
            <td style="text-align: ">四个直连通路，每路X4个lane，每条lane速率为25Gbps，支持2路、4路、8路</td>
        </tr>
    </tbody>
  </table>
</div>
<h2 id="飞腾arm芯片性能测试数据" class="headerLink">
    <a href="#%e9%a3%9e%e8%85%bearm%e8%8a%af%e7%89%87%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e6%95%b0%e6%8d%ae" class="header-mark"></a>飞腾ARM芯片性能测试数据</h2><p>以下测试场景基本都是运行CPU和网络瓶颈的业务逻辑，绑核前IPC只有0.08</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/16b271c8-5132-4273-a26a-4b35e8f92882.png   alt="img"  ></p>
<p>绑核后对性能提升非常明显：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/4d4fdebb-6146-407e-881d-19170fbfd82b.png   alt="img"  ></p>
<p>点查场景：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425092158127.png   alt="image-20210425092158127"  ></p>
<p>如上是绑48-63号核</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425091727122.png   alt="image-20210425091727122"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425091557750.png   alt="image-20210425091557750"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425093630438.png   alt="image-20210425093630438"  ></p>
<p>绑不同的核性能差异比较大，比如同样绑第一个socket最后16core和绑第二个socket最后16core，第二个socket的最后16core性能要好25-30%&mdash;<strong>这是因为网卡软中断，如果将软中断绑定到0-4号cpu后差异基本消失</strong>,因为网卡队列设置的是60，基本跑在前60core上，也就是第一个socket上。</p>
<p>点查场景绑核和不绑核性能能差1倍, 将table分表后，物理rt稳定了(<strong>截图中物理rt下降是因为压力小了</strong>&ndash;待证)</p>
<h3 id="点查场景压测16个core的节点" class="headerLink">
    <a href="#%e7%82%b9%e6%9f%a5%e5%9c%ba%e6%99%af%e5%8e%8b%e6%b5%8b16%e4%b8%aacore%e7%9a%84%e8%8a%82%e7%82%b9" class="header-mark"></a>点查场景压测16个core的节点</h3><p>一个节点16core，16个core绑定到14、15号NUMA上，然后压测</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perl numa-maps-summary.pl &lt;/proc/79694/numa_maps //16core</span>
</span></span><span class="line"><span class="cl"><span class="n">N0</span>        <span class="p">:</span>         <span class="mi">1103</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N1</span>        <span class="p">:</span>       <span class="mi">107368</span> <span class="p">(</span>  <span class="mf">0.41</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N10</span>       <span class="p">:</span>       <span class="mi">144736</span> <span class="p">(</span>  <span class="mf">0.55</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N11</span>       <span class="p">:</span>        <span class="mi">16919</span> <span class="p">(</span>  <span class="mf">0.06</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N12</span>       <span class="p">:</span>       <span class="mi">551987</span> <span class="p">(</span>  <span class="mf">2.11</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N13</span>       <span class="p">:</span>        <span class="mi">59499</span> <span class="p">(</span>  <span class="mf">0.23</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N14</span>       <span class="p">:</span>      <span class="mi">5621573</span> <span class="p">(</span> <span class="mf">21.44</span> <span class="n">GB</span><span class="p">)</span>  <span class="o">//</span><span class="err">内存就近分配</span>
</span></span><span class="line"><span class="cl"><span class="n">N15</span>       <span class="p">:</span>      <span class="mi">6200398</span> <span class="p">(</span> <span class="mf">23.65</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N2</span>        <span class="p">:</span>          <span class="mi">700</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N3</span>        <span class="p">:</span>           <span class="mi">89</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N4</span>        <span class="p">:</span>         <span class="mi">5784</span> <span class="p">(</span>  <span class="mf">0.02</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N5</span>        <span class="p">:</span>           <span class="mi">77</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N6</span>        <span class="p">:</span>          <span class="mi">426</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N7</span>        <span class="p">:</span>          <span class="mi">472</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N8</span>        <span class="p">:</span>          <span class="mi">107</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">N9</span>        <span class="p">:</span>         <span class="mi">6137</span> <span class="p">(</span>  <span class="mf">0.02</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">active</span>    <span class="p">:</span>           <span class="mi">85</span> <span class="p">(</span>  <span class="mf">0.00</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">anon</span>      <span class="p">:</span>     <span class="mi">12712675</span> <span class="p">(</span> <span class="mf">48.50</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">dirty</span>     <span class="p">:</span>     <span class="mi">12712679</span> <span class="p">(</span> <span class="mf">48.50</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">kernelpagesize_kB</span><span class="p">:</span>        <span class="mi">17444</span> <span class="p">(</span>  <span class="mf">0.07</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">mapmax</span>    <span class="p">:</span>         <span class="mi">1598</span> <span class="p">(</span>  <span class="mf">0.01</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">mapped</span>    <span class="p">:</span>         <span class="mi">4742</span> <span class="p">(</span>  <span class="mf">0.02</span> <span class="n">GB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,iTLB-load-misses -a -p 79694</span>
</span></span><span class="line"><span class="cl"><span class="o">^</span><span class="n">C</span>
</span></span><span class="line"><span class="cl"> <span class="ne">Performance</span> <span class="n">counter</span> <span class="n">stats</span> <span class="k">for</span> <span class="n">process</span> <span class="n">id</span> <span class="s1">&#39;79694&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="mi">1719788217</span>      <span class="n">branch</span><span class="o">-</span><span class="n">misses</span>                                                 <span class="p">(</span><span class="mf">39.70</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="mi">311069393237</span>      <span class="n">bus</span><span class="o">-</span><span class="n">cycles</span>                                                    <span class="p">(</span><span class="mf">38.07</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">2021349865</span>      <span class="n">cache</span><span class="o">-</span><span class="n">misses</span>              <span class="c1">#    6.669 % of all cache refs      (38.32%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">30308501243</span>      <span class="n">cache</span><span class="o">-</span><span class="n">references</span>                                              <span class="p">(</span><span class="mf">39.67</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      <span class="mi">310980728138</span>      <span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span>                                                    <span class="p">(</span><span class="mf">46.46</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">67298903097</span>      <span class="n">instructions</span>              <span class="c1">#    0.22  insns per cycle          (47.63%)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">1983728595</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>     <span class="c1">#    6.62% of all L1-dcache hits    (48.76%)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">29943167305</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span>                                               <span class="p">(</span><span class="mf">47.89</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">1957152091</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">store</span><span class="o">-</span><span class="n">misses</span>                                        <span class="p">(</span><span class="mf">46.14</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">29572767575</span>      <span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">stores</span>                                              <span class="p">(</span><span class="mf">44.91</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">4223808613</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>                                         <span class="p">(</span><span class="mf">43.08</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">49122358099</span>      <span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span>                                               <span class="p">(</span><span class="mf">38.15</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="mi">1724605628</span>      <span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>                                            <span class="p">(</span><span class="mf">37.63</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">       <span class="mi">15225535577</span>      <span class="n">branch</span><span class="o">-</span><span class="n">loads</span>                                                  <span class="p">(</span><span class="mf">36.61</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">997458038</span>      <span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>                                              <span class="p">(</span><span class="mf">35.81</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">         <span class="mi">542426693</span>      <span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span>                                              <span class="p">(</span><span class="mf">34.98</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="mf">10.489297296</span> <span class="n">seconds</span> <span class="n">time</span> <span class="n">elapsed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">29</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">15292.01</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">25.82</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">30</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">16399.99</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">23.58</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">31</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17025.00</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.73</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">32</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">16991.01</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">22.83</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">33</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18400.94</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">21.29</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">34</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17760.05</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.69</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">35</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17935.00</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.23</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">36</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18296.98</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.10</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">37</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18111.02</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.56</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">38</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17782.99</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.54</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">38</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">21412.13</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">11.96</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">40</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18027.85</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.18</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">41</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17907.04</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.02</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">42</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">13860.96</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">23.58</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">43</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18491.02</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.18</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">44</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">17673.02</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">20.85</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">45</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18048.96</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">21.47</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span>  <span class="mi">46</span><span class="n">s</span><span class="p">]</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">160</span><span class="p">,</span> <span class="n">tps</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">reads</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">18130.03</span><span class="p">,</span> <span class="n">writes</span><span class="o">/</span><span class="n">s</span><span class="p">:</span> <span class="mf">0.00</span><span class="p">,</span> <span class="n">response</span> <span class="n">time</span><span class="p">:</span> <span class="mf">22.13</span><span class="n">ms</span> <span class="p">(</span><span class="mi">95</span><span class="o">%</span><span class="p">)</span>      </span></span></code></pre>
</div>
<h3 id="点查场景压测8个core的节点" class="headerLink">
    <a href="#%e7%82%b9%e6%9f%a5%e5%9c%ba%e6%99%af%e5%8e%8b%e6%b5%8b8%e4%b8%aacore%e7%9a%84%e8%8a%82%e7%82%b9" class="header-mark"></a>点查场景压测8个core的节点</h3><p>因为每个NUMA才8个core，所以测试一下8core的节点绑核前后性能对比。实际结果看起来和16core节点绑核性能提升差不多。</p>
<p>绑核前后对比：绑核后QPS翻倍，绑核后的服务rt从7.5降低到了2.2，rt下降非常明显，可以看出主要是绑核前跨numa访问慢。<strong>实际这个测试是先跑的不绑核，内存分布在所有NUMA上，没有重启再绑核就直接测试了，所以性能提升不明显，因为内存已经跨NUMA分配完毕了</strong>。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427093424116.png   alt="image-20210427093424116"  ></p>
<div class="code-block highlight is-closed show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-3" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#perl numa-maps-summary.pl &lt;/proc/33727/numa_maps //绑定8core后，在如下内存分配下QPS能到11000，但是抖动略大，应该是一个numa内存不够了</span>
</span></span><span class="line"><span class="cl">N0        :          <span class="m">551</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N1        :      <span class="m">1023418</span> <span class="o">(</span>  3.90 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N10       :        <span class="m">52065</span> <span class="o">(</span>  0.20 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N11       :       <span class="m">190737</span> <span class="o">(</span>  0.73 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N12       :       <span class="m">516115</span> <span class="o">(</span>  1.97 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N13       :       <span class="m">186556</span> <span class="o">(</span>  0.71 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N14       :      <span class="m">1677489</span> <span class="o">(</span>  6.40 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N15       :       <span class="m">324531</span> <span class="o">(</span>  1.24 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N2        :          <span class="m">397</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N3        :            <span class="m">8</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N4        :          <span class="m">398</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N6        :          <span class="m">349</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N7        :          <span class="m">437</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N8        :       <span class="m">108508</span> <span class="o">(</span>  0.41 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N9        :        <span class="m">69162</span> <span class="o">(</span>  0.26 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">active    :         <span class="m">2296</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">anon      :      <span class="m">4144997</span> <span class="o">(</span> 15.81 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">dirty     :      <span class="m">4145002</span> <span class="o">(</span> 15.81 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">kernelpagesize_kB:         <span class="m">7508</span> <span class="o">(</span>  0.03 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapmax    :         <span class="m">1548</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapped    :         <span class="m">5724</span> <span class="o">(</span>  0.02 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span> 349s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11088.99, writes/s: 0.00, response time: 20.18ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 350s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 8778.98, writes/s: 0.00, response time: 26.20ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 351s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 7995.01, writes/s: 0.00, response time: 31.79ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 352s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 9549.01, writes/s: 0.00, response time: 23.90ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 353s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 8757.99, writes/s: 0.00, response time: 24.60ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 354s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 10288.02, writes/s: 0.00, response time: 21.85ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 355s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11003.97, writes/s: 0.00, response time: 18.90ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 356s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11111.01, writes/s: 0.00, response time: 20.51ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 357s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11426.00, writes/s: 0.00, response time: 17.98ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 358s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11007.01, writes/s: 0.00, response time: 19.35ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 359s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 10425.00, writes/s: 0.00, response time: 20.92ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 360s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 10024.00, writes/s: 0.00, response time: 23.17ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 361s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 10100.98, writes/s: 0.00, response time: 22.94ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 362s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 8164.01, writes/s: 0.00, response time: 27.48ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 363s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 6593.00, writes/s: 0.00, response time: 37.10ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 364s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 7008.00, writes/s: 0.00, response time: 32.32ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#调整这个实例到内存充足的NUMA7上 QPS峰值能到14000，稳定在11000-13000之间，RT明显更稳定了</span>
</span></span><span class="line"><span class="cl"><span class="c1">#perl numa-maps-summary.pl &lt;/proc/78245/numa_maps</span>
</span></span><span class="line"><span class="cl">N0        :          <span class="m">551</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N1        :          <span class="m">115</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N11       :          <span class="m">695</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N12       :          <span class="m">878</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N13       :         <span class="m">2019</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N14       :           <span class="m">25</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N15       :           <span class="m">60</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N2        :          <span class="m">394</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N3        :            <span class="m">8</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N4        :       <span class="m">197713</span> <span class="o">(</span>  0.75 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N6        :          <span class="m">349</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N7        :      <span class="m">3957844</span> <span class="o">(</span> 15.10 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N8        :            <span class="m">1</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">active    :           <span class="m">10</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">anon      :      <span class="m">4154693</span> <span class="o">(</span> 15.85 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">dirty     :      <span class="m">4154698</span> <span class="o">(</span> 15.85 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">kernelpagesize_kB:         <span class="m">7452</span> <span class="o">(</span>  0.03 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapmax    :         <span class="m">1567</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapped    :         <span class="m">5959</span> <span class="o">(</span>  0.02 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span> 278s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 13410.99, writes/s: 0.00, response time: 15.36ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 279s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 14049.99, writes/s: 0.00, response time: 15.54ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 280s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 13107.02, writes/s: 0.00, response time: 16.72ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 281s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 12431.99, writes/s: 0.00, response time: 17.79ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 282s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 13164.01, writes/s: 0.00, response time: 16.33ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 283s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 13455.01, writes/s: 0.00, response time: 16.19ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 284s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 12932.01, writes/s: 0.00, response time: 16.22ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 285s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 12790.99, writes/s: 0.00, response time: 17.00ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 286s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 12706.00, writes/s: 0.00, response time: 17.88ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 287s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 11886.00, writes/s: 0.00, response time: 19.43ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span> 288s<span class="o">]</span> threads: 100, tps: 0.00, reads/s: 12700.00, writes/s: 0.00, response time: 16.97ms <span class="o">(</span>95%<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#perl numa-maps-summary.pl &lt;/proc/54723/numa_maps  //54723绑定在NUMA6上</span>
</span></span><span class="line"><span class="cl">N0        :          <span class="m">551</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N1        :          <span class="m">115</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N11       :          <span class="m">682</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N12       :          <span class="m">856</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N13       :         <span class="m">2018</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N14       :           <span class="m">25</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N15       :           <span class="m">60</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N2        :      <span class="m">1270166</span> <span class="o">(</span>  4.85 GB<span class="o">)</span> //不应该分配这里的内存，实际是因为N6内存被PageCache使用掉了
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">N3        :            <span class="m">8</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N4        :          <span class="m">398</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N6        :      <span class="m">3662400</span> <span class="o">(</span> 13.97 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N7        :          <span class="m">460</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N8        :            <span class="m">1</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">active    :            <span class="m">9</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">anon      :      <span class="m">4931796</span> <span class="o">(</span> 18.81 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">dirty     :      <span class="m">4931801</span> <span class="o">(</span> 18.81 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">kernelpagesize_kB:         <span class="m">7920</span> <span class="o">(</span>  0.03 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapmax    :         <span class="m">1580</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapped    :         <span class="m">5944</span> <span class="o">(</span>  0.02 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#cat /proc/meminfo | grep -i active</span>
</span></span><span class="line"><span class="cl">Active:         <span class="m">22352360</span> kB
</span></span><span class="line"><span class="cl">Inactive:       <span class="m">275173756</span> kB
</span></span><span class="line"><span class="cl">Active<span class="o">(</span>anon<span class="o">)</span>:      <span class="m">16984</span> kB
</span></span><span class="line"><span class="cl">Inactive<span class="o">(</span>anon<span class="o">)</span>: <span class="m">240344208</span> kB
</span></span><span class="line"><span class="cl">Active<span class="o">(</span>file<span class="o">)</span>:   <span class="m">22335376</span> kB
</span></span><span class="line"><span class="cl">Inactive<span class="o">(</span>file<span class="o">)</span>: <span class="m">34829548</span> kB
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#echo 3 &gt; /proc/sys/vm/drop_caches</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#cat /proc/meminfo | grep -i active</span>
</span></span><span class="line"><span class="cl">Active:          <span class="m">1865724</span> kB
</span></span><span class="line"><span class="cl">Inactive:       <span class="m">242335632</span> kB
</span></span><span class="line"><span class="cl">Active<span class="o">(</span>anon<span class="o">)</span>:       <span class="m">7108</span> kB
</span></span><span class="line"><span class="cl">Inactive<span class="o">(</span>anon<span class="o">)</span>: <span class="m">240199020</span> kB
</span></span><span class="line"><span class="cl">Active<span class="o">(</span>file<span class="o">)</span>:    <span class="m">1858616</span> kB  //回收了大量PageCache内存
</span></span><span class="line"><span class="cl">Inactive<span class="o">(</span>file<span class="o">)</span>:  <span class="m">2136612</span> kB
</span></span><span class="line"><span class="cl"><span class="c1">#perl numa-maps-summary.pl &lt;/proc/54723/numa_maps</span>
</span></span><span class="line"><span class="cl">N0        :          <span class="m">552</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N1        :          <span class="m">115</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N11       :          <span class="m">682</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N12       :          <span class="m">856</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N13       :         <span class="m">2018</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N14       :           <span class="m">25</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N15       :           <span class="m">60</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N2        :         <span class="m">1740</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N3        :            <span class="m">8</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N4        :          <span class="m">398</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N6        :      <span class="m">4972492</span> <span class="o">(</span> 18.97 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N7        :          <span class="m">459</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">N8        :            <span class="m">1</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">active    :           <span class="m">16</span> <span class="o">(</span>  0.00 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">anon      :      <span class="m">4973486</span> <span class="o">(</span> 18.97 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">dirty     :      <span class="m">4973491</span> <span class="o">(</span> 18.97 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">kernelpagesize_kB:         <span class="m">8456</span> <span class="o">(</span>  0.03 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapmax    :         <span class="m">1564</span> <span class="o">(</span>  0.01 GB<span class="o">)</span>
</span></span><span class="line"><span class="cl">mapped    :         <span class="m">5920</span> <span class="o">(</span>  0.02 GB<span class="o">)</span></span></span></code></pre>
</div>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427164953340.png   alt="image-20210427164953340"  ></p>
<p>绑核前的IPC：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427093625575.png   alt="image-20210427093625575"  ></p>
<p>绑核后的IPC：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427095130343.png   alt="image-20210427095130343"  ></p>
<p><strong>如果是两个8core对一个16core在都最优绑核场景下从上面的数据来看能有40-50%的性能提升，并且RT抖动更小</strong>，这两个8core绑定在同一个Socket下，验证是否争抢，同时可以看到<strong>绑核后性能可以随着加节点线性增加</strong></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427172612685.png   alt="image-20210427172612685"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427173047815.png   alt="image-20210427173047815"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210427173417673.png   alt="image-20210427173417673"  ></p>
<p>结论：不绑核一个FT2500的core点查只有500 QPS，绑核后能到1500QPS, 在Intel 8263下一个core能到6000以上(开日志、没开协程)</p>
<h3 id="mysql-数据库场景绑核" class="headerLink">
    <a href="#mysql-%e6%95%b0%e6%8d%ae%e5%ba%93%e5%9c%ba%e6%99%af%e7%bb%91%e6%a0%b8" class="header-mark"></a>MySQL 数据库场景绑核</h3><p>通过同一台物理上6个Tomcat节点，总共96个core，压6台MySQL，MySQL基本快打挂了。sysbench 点查，32个分表，增加Tomcat节点进来物理rt就增加，从最初的的1.2ms加到6个Tomcat节点后变成8ms。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425180535225.png   alt="image-20210425180535225"  ></p>
<p>MySQL没绑好核，BIOS默认关闭了NUMA，外加12个MySQL分布在物理机上不均匀，3个节点3个MySQL，剩下的物理机上只有一个MySQL实例。</p>
<p>MySQL每个实例32core，管控默认已经做了绑核，但是如果两个MySQL绑在了一个socket上竞争会很激烈，ipc比单独的降一半。</p>
<p>比如这三个MySQL，qps基本均匀，上面两个cpu高，但是没效率，每个MySQL绑了32core，上面两个绑在一个socket上，下面的MySQL绑在另一个socket上，第一个socket还有网络软中断在争抢cpu，飞腾环境下性能真要冲高还有很大空间。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210425180518926.png   alt="image-20210425180518926"  ></p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">shell</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-4" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#第二个MySQL IPC只有第三个的30%多点，这就是为什么CPU高这么多，但是QPS差不多</span>
</span></span><span class="line"><span class="cl">perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,iTLB-load-misses  -a -p <span class="m">61238</span>
</span></span><span class="line"><span class="cl">^C
</span></span><span class="line"><span class="cl"> Performance counter stats <span class="k">for</span> process id <span class="s1">&#39;61238&#39;</span>:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        86,491,052      branch-misses                                                 <span class="o">(</span>58.55%<span class="o">)</span>
</span></span><span class="line"><span class="cl">    98,481,418,793      bus-cycles                                                    <span class="o">(</span>55.64%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       113,095,618      cache-misses              <span class="c1">#    6.169 % of all cache refs      (53.20%)</span>
</span></span><span class="line"><span class="cl">     1,833,344,484      cache-references                                              <span class="o">(</span>52.00%<span class="o">)</span>
</span></span><span class="line"><span class="cl">   101,516,165,898      cpu-cycles                                                    <span class="o">(</span>57.09%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     4,229,190,014      instructions              <span class="c1">#    0.04  insns per cycle          (55.91%)</span>
</span></span><span class="line"><span class="cl">       111,780,025      L1-dcache-load-misses     <span class="c1">#    6.34% of all L1-dcache hits    (55.40%)</span>
</span></span><span class="line"><span class="cl">     1,764,421,570      L1-dcache-loads                                               <span class="o">(</span>52.62%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       112,261,128      L1-dcache-store-misses                                        <span class="o">(</span>49.34%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     1,814,998,338      L1-dcache-stores                                              <span class="o">(</span>48.51%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       219,372,119      L1-icache-load-misses                                         <span class="o">(</span>49.56%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     2,816,279,627      L1-icache-loads                                               <span class="o">(</span>49.15%<span class="o">)</span>
</span></span><span class="line"><span class="cl">        85,321,093      branch-load-misses                                            <span class="o">(</span>50.38%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     1,038,572,653      branch-loads                                                  <span class="o">(</span>50.65%<span class="o">)</span>
</span></span><span class="line"><span class="cl">        45,166,831      dTLB-load-misses                                              <span class="o">(</span>51.98%<span class="o">)</span>
</span></span><span class="line"><span class="cl">        29,892,473      iTLB-load-misses                                              <span class="o">(</span>52.56%<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       1.163750756 seconds <span class="nb">time</span> elapsed
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#第三个MySQL</span>
</span></span><span class="line"><span class="cl">perf stat -e branch-misses,bus-cycles,cache-misses,cache-references,cpu-cycles,instructions,L1-dcache-load-misses,L1-dcache-loads,L1-dcache-store-misses,L1-dcache-stores,L1-icache-load-misses,L1-icache-loads,branch-load-misses,branch-loads,dTLB-load-misses,iTLB-load-misses  -a -p <span class="m">53400</span>
</span></span><span class="line"><span class="cl">^C
</span></span><span class="line"><span class="cl"> Performance counter stats <span class="k">for</span> process id <span class="s1">&#39;53400&#39;</span>:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       295,575,513      branch-misses                                                 <span class="o">(</span>40.51%<span class="o">)</span>
</span></span><span class="line"><span class="cl">   110,934,600,206      bus-cycles                                                    <span class="o">(</span>39.30%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       537,938,496      cache-misses              <span class="c1">#    8.310 % of all cache refs      (38.99%)</span>
</span></span><span class="line"><span class="cl">     6,473,688,885      cache-references                                              <span class="o">(</span>39.80%<span class="o">)</span>
</span></span><span class="line"><span class="cl">   110,540,950,757      cpu-cycles                                                    <span class="o">(</span>46.10%<span class="o">)</span>
</span></span><span class="line"><span class="cl">    14,766,013,708      instructions              <span class="c1">#    0.14  insns per cycle          (46.85%)</span>
</span></span><span class="line"><span class="cl">       538,521,226      L1-dcache-load-misses     <span class="c1">#    8.36% of all L1-dcache hits    (48.00%)</span>
</span></span><span class="line"><span class="cl">     6,440,728,959      L1-dcache-loads                                               <span class="o">(</span>46.69%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       533,693,357      L1-dcache-store-misses                                        <span class="o">(</span>45.91%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     6,413,111,024      L1-dcache-stores                                              <span class="o">(</span>44.92%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       673,725,952      L1-icache-load-misses                                         <span class="o">(</span>42.76%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     9,216,663,639      L1-icache-loads                                               <span class="o">(</span>38.27%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       299,202,001      branch-load-misses                                            <span class="o">(</span>37.62%<span class="o">)</span>
</span></span><span class="line"><span class="cl">     3,285,957,082      branch-loads                                                  <span class="o">(</span>36.10%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       149,348,740      dTLB-load-misses                                              <span class="o">(</span>35.20%<span class="o">)</span>
</span></span><span class="line"><span class="cl">       102,444,469      iTLB-load-misses                                              <span class="o">(</span>34.78%<span class="o">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">       8.080841166 seconds <span class="nb">time</span> elapsed</span></span></code></pre>
</div>
<p>12个MySQL流量基本均匀：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210426083033989.png   alt="image-20210426083033989"  ></p>
<h3 id="numa太多每个numa下core比较少" class="headerLink">
    <a href="#numa%e5%a4%aa%e5%a4%9a%e6%af%8f%e4%b8%aanuma%e4%b8%8bcore%e6%af%94%e8%be%83%e5%b0%91" class="header-mark"></a>numa太多，每个numa下core比较少</h3><p>导致跨numa高概率发生，如下是在正常部署下的测试perf 数据，可以看到IPC极低，才0.08，同样的场景在其他家芯片都能打到0.6</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/16b271c8-5132-4273-a26a-4b35e8f92882.png   alt="img"  ></p>
<p>执行绑核，将一个进程限制在2个numa内，因为进程需要16core，理论上用8core的进程性能会更好</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/4d4fdebb-6146-407e-881d-19170fbfd82b.png   alt="img"  ></p>
<p>可以看到IPC从0.08提升到了0.22，实际能到0.27，对应的业务测试QPS也是原来的4倍。</p>
<p>用numactl 在启动的时候绑定cpu在 node0、1上，优先使用node0、1的内存，不够再用其它node的内存</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-5" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">numactl --cpunodebind 0,1 --preferred 0,1 /u01/xcluster80/bin/mysqld_safe  --defaults-file=/polarx/xcluster3308/my.cnf  --basedir=/u01/xcluster80_current  --datadir=/polarx/xcluster3308/data  --plugin-dir=/u01/xcluster80/lib/plugin  --user=mysql  --log-error=/polarx/xcluster3308/log/alert.log  --open-files-limit=615350  --pid-file=/polarx/xcluster3308/run/mysql.pid  --socket=/polarx/xcluster3308/run/mysql.sock  --cluster-info=11.158.239.200:11308@1  --mysqlx-port=13308  --port=3308</span></span></code></pre>
</div>
<h3 id="网卡队列调整" class="headerLink">
    <a href="#%e7%bd%91%e5%8d%a1%e9%98%9f%e5%88%97%e8%b0%83%e6%95%b4" class="header-mark"></a>网卡队列调整</h3><p>这批机器默认都是双网卡做bond，但是两块网卡是HA，默认网卡队列是60，基本都跑在前面60个core上</p>
<p>将MySQL网卡队列从60个改成6个后MySQL性能提升大概10%</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210426085534983.png   alt="image-20210426085534983"  ></p>
<p>默认第一个MySQL都绑在0-31号核上,其实改少队列加大了0-5号core的压力，但是实际数据表现要好。</p>
<h2 id="比较其它" class="headerLink">
    <a href="#%e6%af%94%e8%be%83%e5%85%b6%e5%ae%83" class="header-mark"></a>比较其它</h2><p>绑核的时候还要考虑磁盘、网卡在哪个socket上，相对来说node和磁盘、网卡在同一个socket下性能要好一些。</p>
<p>左边的mysqld绑定在socket1的64core上，磁盘、网卡都在socket1上；右边的mysqld绑定在0-31core上，网卡在socket0上，但是磁盘在socket1上</p>
<p>右边这个刚好是跨socket访问磁盘，不知道是不是巧合log_flush排位比较高</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210910180305752.png   alt="image-20210910180305752"  ></p>
<p>此时对应的IPC：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210910181820803.png   alt="image-20210910181820803"  ></p>
<p>如果上面两个进程在没有刷日志的场景下时候对应的IPC两者基本一样：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210910181909962.png   alt="image-20210910181909962"  ></p>
<h2 id="结论" class="headerLink">
    <a href="#%e7%bb%93%e8%ae%ba" class="header-mark"></a>结论</h2><p>FT2500比同主频Intel x86芯片差了快一个数量级的性能，在对FT2500上的业务按node绑核后性能提升了几倍，但是离Intel x86还有很大的距离</p>
<p>用循环跑多个nop指令在飞腾2500下IPC只能跑到1，据说这是因为nop指令被扔掉了，所以一直在跑跳转循环判断；</p>
<p>对寄存器变量进行++运算，IPC是0.5；</p>
<p>用如下代码能将IPC跑到2.49，也是我能跑出来的最高IPC了，去掉nop那行，IPC是1.99</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-6" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">                register unsigned i=0;
</span></span><span class="line"><span class="cl">        for (i=0;i&lt;(1u&lt;&lt;31);i++) {
</span></span><span class="line"><span class="cl">                __asm__ (&#34;nop&#34;); 
</span></span><span class="line"><span class="cl">        }</span></span></code></pre>
</div>
<h2 id="系列文章" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87%28FT2500%29%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<h2 id="参考资料" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-mark"></a>参考资料</h2><p><a href="http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html" target="_blank" rel="noopener noreferrer">CPU Utilization is Wrong</a></p>
]]></description>
</item><item>
    <title>一次海光物理机资源竞争压测的记录</title>
    <link>http://localhost:1313/posts/%E4%B8%80%E6%AC%A1%E6%B5%B7%E5%85%89%E7%89%A9%E7%90%86%E6%9C%BA%E8%B5%84%E6%BA%90%E7%AB%9E%E4%BA%89%E5%8E%8B%E6%B5%8B%E7%9A%84%E8%AE%B0%E5%BD%95/</link>
    <pubDate>Sun, 07 Mar 2021 17:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E4%B8%80%E6%AC%A1%E6%B5%B7%E5%85%89%E7%89%A9%E7%90%86%E6%9C%BA%E8%B5%84%E6%BA%90%E7%AB%9E%E4%BA%89%E5%8E%8B%E6%B5%8B%E7%9A%84%E8%AE%B0%E5%BD%95/</guid>
    <description><![CDATA[<h1 id="一次海光物理机资源竞争压测的记录" class="headerLink">
    <a href="#%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95" class="header-mark"></a>一次海光物理机资源竞争压测的记录</h1><h2 id="问题描述" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0" class="header-mark"></a>问题描述</h2><p>问题描述如下</p>
<blockquote>
  <p>sysbench 压200个服务节点(每个4c16G，总共800core), 发现qps不能线性增加（200节点比100节点好1.2倍而已)。</p>
<p>如果压单个服务节点节点QPS 2.4万，CPU跑到390%（每个服务节点独占4个核），如果压200个服务节点（分布在16台64核的海光物理机上）平均每个服务节点节点QPS才1.2万。但是每个服务节点的CPU也跑到了390%左右。 现在的疑问就是为什么CPU跑上去了QPS打了个5折。</p>
<p>机器集群为16*64core 为1024core，也就是每个服务节点独占4core还有冗余</p>

</blockquote><p>因为服务节点还需要通过LVS调用后端的多个MySQL集群，所以需要排除LVS、网络等链路瓶颈，然后找到根因是什么。</p>
<h3 id="海光物理机cpu相关信息" class="headerLink">
    <a href="#%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%bacpu%e7%9b%b8%e5%85%b3%e4%bf%a1%e6%81%af" class="header-mark"></a>海光物理机CPU相关信息</h3><p>总共有16台如下的海光服务器</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#lscpu</span>
</span></span><span class="line"><span class="cl"><span class="n">Architecture</span><span class="p">:</span>          <span class="n">x86_64</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">op</span><span class="o">-</span><span class="n">mode</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>        <span class="mi">32</span><span class="o">-</span><span class="n">bit</span><span class="p">,</span> <span class="mi">64</span><span class="o">-</span><span class="n">bit</span>
</span></span><span class="line"><span class="cl"><span class="n">Byte</span> <span class="n">Order</span><span class="p">:</span>            <span class="n">Little</span> <span class="n">Endian</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>                <span class="mi">64</span>
</span></span><span class="line"><span class="cl"><span class="n">On</span><span class="o">-</span><span class="n">line</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">list</span><span class="p">:</span>   <span class="mi">0</span><span class="o">-</span><span class="mi">63</span>
</span></span><span class="line"><span class="cl"><span class="ne">Thread</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">core</span><span class="p">:</span>    <span class="mi">2</span>      <span class="o">//</span><span class="err">每个物理</span><span class="n">core有两个超线程</span>
</span></span><span class="line"><span class="cl"><span class="n">Core</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">socket</span><span class="p">:</span>    <span class="mi">16</span>     <span class="o">//</span><span class="err">每路</span><span class="mi">16</span><span class="err">个物理</span><span class="n">core</span>
</span></span><span class="line"><span class="cl"><span class="n">Socket</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>             <span class="mi">2</span>      <span class="o">//</span><span class="mi">2</span><span class="err">路</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>          <span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="n">Vendor</span> <span class="n">ID</span><span class="p">:</span>             <span class="n">HygonGenuine</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">family</span><span class="p">:</span>            <span class="mi">24</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span><span class="p">:</span>                 <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span> <span class="n">name</span><span class="p">:</span>            <span class="n">Hygon</span> <span class="n">C86</span> <span class="mi">5280</span> <span class="mi">16</span><span class="o">-</span><span class="n">core</span> <span class="n">Processor</span>
</span></span><span class="line"><span class="cl"><span class="n">Stepping</span><span class="p">:</span>              <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">MHz</span><span class="p">:</span>               <span class="mf">2455.552</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">max</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">2500.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">min</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">1600.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">BogoMIPS</span><span class="p">:</span>              <span class="mf">4999.26</span>
</span></span><span class="line"><span class="cl"><span class="n">Virtualization</span><span class="p">:</span>        <span class="n">AMD</span><span class="o">-</span><span class="n">V</span>
</span></span><span class="line"><span class="cl"><span class="n">L1d</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">32</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L1i</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">64</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L2</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">512</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L3</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">8192</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node0</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">0</span><span class="o">-</span><span class="mi">7</span><span class="p">,</span><span class="mi">32</span><span class="o">-</span><span class="mi">39</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node1</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">8</span><span class="o">-</span><span class="mi">15</span><span class="p">,</span><span class="mi">40</span><span class="o">-</span><span class="mi">47</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node2</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">16</span><span class="o">-</span><span class="mi">23</span><span class="p">,</span><span class="mi">48</span><span class="o">-</span><span class="mi">55</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node3</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">24</span><span class="o">-</span><span class="mi">31</span><span class="p">,</span><span class="mi">56</span><span class="o">-</span><span class="mi">63</span>
</span></span><span class="line"><span class="cl"><span class="n">Flags</span><span class="p">:</span>                 <span class="n">fpu</span> <span class="n">vme</span> <span class="n">de</span> <span class="n">pse</span> <span class="n">tsc</span> <span class="n">msr</span> <span class="n">pae</span> <span class="n">mce</span> <span class="n">cx8</span> <span class="n">apic</span> <span class="n">sep</span> <span class="n">mtrr</span> <span class="n">pge</span> <span class="n">mca</span> <span class="n">cmov</span> <span class="n">pat</span> <span class="n">pse36</span> <span class="n">clflush</span> <span class="n">mmx</span> <span class="n">fxsr</span> <span class="n">sse</span> <span class="n">sse2</span> <span class="n">ht</span> <span class="n">syscall</span> <span class="n">nx</span> <span class="n">mmxext</span> <span class="n">fxsr_opt</span> <span class="n">pdpe1gb</span> <span class="n">rdtscp</span> <span class="n">lm</span> <span class="n">constant_tsc</span> <span class="n">rep_good</span> <span class="n">nopl</span> <span class="n">nonstop_tsc</span> <span class="n">cpuid</span> <span class="n">extd_apicid</span> <span class="n">amd_dcm</span> <span class="n">aperfmperf</span> <span class="n">pni</span> <span class="n">pclmulqdq</span> <span class="n">monitor</span> <span class="n">ssse3</span> <span class="n">fma</span> <span class="n">cx16</span> <span class="n">sse4_1</span> <span class="n">sse4_2</span> <span class="n">movbe</span> <span class="n">popcnt</span> <span class="n">xsave</span> <span class="n">avx</span> <span class="n">f16c</span> <span class="n">rdrand</span> <span class="n">lahf_lm</span> <span class="n">cmp_legacy</span> <span class="n">svm</span> <span class="n">extapic</span> <span class="n">cr8_legacy</span> <span class="n">abm</span> <span class="n">sse4a</span> <span class="n">misalignsse</span> <span class="mi">3</span><span class="n">dnowprefetch</span> <span class="n">osvw</span> <span class="n">skinit</span> <span class="n">wdt</span> <span class="n">tce</span> <span class="n">topoext</span> <span class="n">perfctr_core</span> <span class="n">perfctr_nb</span> <span class="n">bpext</span> <span class="n">perfctr_llc</span> <span class="n">mwaitx</span> <span class="n">cpb</span> <span class="n">hw_pstate</span> <span class="n">sme</span> <span class="n">ssbd</span> <span class="n">sev</span> <span class="n">ibpb</span> <span class="n">vmmcall</span> <span class="n">fsgsbase</span> <span class="n">bmi1</span> <span class="n">avx2</span> <span class="n">smep</span> <span class="n">bmi2</span> <span class="n">MySQLeed</span> <span class="n">adx</span> <span class="n">smap</span> <span class="n">clflushopt</span> <span class="n">sha_ni</span> <span class="n">xsaveopt</span> <span class="n">xsavec</span> <span class="n">xgetbv1</span> <span class="n">xsaves</span> <span class="n">clzero</span> <span class="n">irperf</span> <span class="n">xsaveerptr</span> <span class="n">arat</span> <span class="n">npt</span> <span class="n">lbrv</span> <span class="n">svm_lock</span> <span class="n">nrip_save</span> <span class="n">tsc_scale</span> <span class="n">vmcb_clean</span> <span class="n">flushbyasid</span> <span class="n">decodeassists</span> <span class="n">pausefilter</span> <span class="n">pfthreshold</span> <span class="n">avic</span> <span class="n">v_vmsave_vmload</span> <span class="n">vgif</span> <span class="n">overflow_recov</span> <span class="n">succor</span> <span class="n">smca</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#numactl -H</span>
</span></span><span class="line"><span class="cl"><span class="n">available</span><span class="p">:</span> <span class="mi">4</span> <span class="n">nodes</span> <span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">0</span> <span class="n">cpus</span><span class="p">:</span> <span class="mi">0</span> <span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span> <span class="mi">4</span> <span class="mi">5</span> <span class="mi">6</span> <span class="mi">7</span> <span class="mi">32</span> <span class="mi">33</span> <span class="mi">34</span> <span class="mi">35</span> <span class="mi">36</span> <span class="mi">37</span> <span class="mi">38</span> <span class="mi">39</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">0</span> <span class="n">size</span><span class="p">:</span> <span class="mi">128854</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">0</span> <span class="n">free</span><span class="p">:</span> <span class="mi">89350</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">1</span> <span class="n">cpus</span><span class="p">:</span> <span class="mi">8</span> <span class="mi">9</span> <span class="mi">10</span> <span class="mi">11</span> <span class="mi">12</span> <span class="mi">13</span> <span class="mi">14</span> <span class="mi">15</span> <span class="mi">40</span> <span class="mi">41</span> <span class="mi">42</span> <span class="mi">43</span> <span class="mi">44</span> <span class="mi">45</span> <span class="mi">46</span> <span class="mi">47</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">1</span> <span class="n">size</span><span class="p">:</span> <span class="mi">129019</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">1</span> <span class="n">free</span><span class="p">:</span> <span class="mi">89326</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">2</span> <span class="n">cpus</span><span class="p">:</span> <span class="mi">16</span> <span class="mi">17</span> <span class="mi">18</span> <span class="mi">19</span> <span class="mi">20</span> <span class="mi">21</span> <span class="mi">22</span> <span class="mi">23</span> <span class="mi">48</span> <span class="mi">49</span> <span class="mi">50</span> <span class="mi">51</span> <span class="mi">52</span> <span class="mi">53</span> <span class="mi">54</span> <span class="mi">55</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">2</span> <span class="n">size</span><span class="p">:</span> <span class="mi">128965</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">2</span> <span class="n">free</span><span class="p">:</span> <span class="mi">86542</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">3</span> <span class="n">cpus</span><span class="p">:</span> <span class="mi">24</span> <span class="mi">25</span> <span class="mi">26</span> <span class="mi">27</span> <span class="mi">28</span> <span class="mi">29</span> <span class="mi">30</span> <span class="mi">31</span> <span class="mi">56</span> <span class="mi">57</span> <span class="mi">58</span> <span class="mi">59</span> <span class="mi">60</span> <span class="mi">61</span> <span class="mi">62</span> <span class="mi">63</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">3</span> <span class="n">size</span><span class="p">:</span> <span class="mi">129020</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="mi">3</span> <span class="n">free</span><span class="p">:</span> <span class="mi">98227</span> <span class="n">MB</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span> <span class="n">distances</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">node</span>   <span class="mi">0</span>   <span class="mi">1</span>   <span class="mi">2</span>   <span class="mi">3</span>
</span></span><span class="line"><span class="cl">  <span class="mi">0</span><span class="p">:</span>  <span class="mi">10</span>  <span class="mi">16</span>  <span class="mi">28</span>  <span class="mi">22</span>
</span></span><span class="line"><span class="cl">  <span class="mi">1</span><span class="p">:</span>  <span class="mi">16</span>  <span class="mi">10</span>  <span class="mi">22</span>  <span class="mi">28</span>
</span></span><span class="line"><span class="cl">  <span class="mi">2</span><span class="p">:</span>  <span class="mi">28</span>  <span class="mi">22</span>  <span class="mi">10</span>  <span class="mi">16</span>
</span></span><span class="line"><span class="cl">  <span class="mi">3</span><span class="p">:</span>  <span class="mi">22</span>  <span class="mi">28</span>  <span class="mi">16</span>  <span class="mi">10</span></span></span></code></pre>
</div>
<p>AMD Zen 架构的CPU是胶水核，也就是把两个die拼一块封装成一块CPU，所以一块CPU内跨die之间延迟还是很高的。</p>
<h2 id="验证是否是上下游的瓶颈" class="headerLink">
    <a href="#%e9%aa%8c%e8%af%81%e6%98%af%e5%90%a6%e6%98%af%e4%b8%8a%e4%b8%8b%e6%b8%b8%e7%9a%84%e7%93%b6%e9%a2%88" class="header-mark"></a>验证是否是上下游的瓶颈</h2><p>需要先分析问题是否在LVS调用后端的多个MySQL集群上。</p>
<p>先写一个简单的测试程序：</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#cat Test.java
</span></span><span class="line"><span class="cl">import java.sql.Connection;
</span></span><span class="line"><span class="cl">import java.sql.DriverManager;
</span></span><span class="line"><span class="cl">import java.sql.ResultSet;
</span></span><span class="line"><span class="cl">import java.sql.SQLException;
</span></span><span class="line"><span class="cl">import java.sql.Statement;
</span></span><span class="line"><span class="cl">/*
</span></span><span class="line"><span class="cl"> * 目录：/home/admin/jdbc
</span></span><span class="line"><span class="cl"> *
</span></span><span class="line"><span class="cl"> * 编译：
</span></span><span class="line"><span class="cl"> *  javac -cp /home/admin/lib/*:. Test.java
</span></span><span class="line"><span class="cl"> *
</span></span><span class="line"><span class="cl"> *  运行：
</span></span><span class="line"><span class="cl"> *   java -cp /home/admin/MySQL-server/lib/*:. Test &#34;jdbc:mysql://172.16.160.1:4261/qc_pay_0xwd_0002&#34; &#34;myhhzi0d&#34; &#34;jOXaC1Lbif-k&#34; &#34;select count(*) from pay_order where user_id=1169257092557639682 and order_no=&#39;201909292111250000102&#39;&#34; &#34;100&#34;
</span></span><span class="line"><span class="cl"> *   */
</span></span><span class="line"><span class="cl">public class Test {
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    public static void main(String args[]) throws NumberFormatException, InterruptedException, ClassNotFoundException {
</span></span><span class="line"><span class="cl">        Class.forName(&#34;com.mysql.jdbc.Driver&#34;);
</span></span><span class="line"><span class="cl">        String url = args[0];
</span></span><span class="line"><span class="cl">        String user = args[1];
</span></span><span class="line"><span class="cl">        String pass = args[2];
</span></span><span class="line"><span class="cl">        String sql = args[3];
</span></span><span class="line"><span class="cl">        String interval = args[4];
</span></span><span class="line"><span class="cl">        try {
</span></span><span class="line"><span class="cl">            Connection conn = DriverManager.getConnection(url, user, pass);
</span></span><span class="line"><span class="cl">            while (true) {
</span></span><span class="line"><span class="cl">                long start = System.currentTimeMillis();
</span></span><span class="line"><span class="cl">                for(int i=0; i&lt;1000; ++i){
</span></span><span class="line"><span class="cl">                    Statement stmt = conn.createStatement();
</span></span><span class="line"><span class="cl">                    ResultSet rs = stmt.executeQuery(sql);
</span></span><span class="line"><span class="cl">                    while (rs.next()) {
</span></span><span class="line"><span class="cl">                    }
</span></span><span class="line"><span class="cl">                    rs.close();
</span></span><span class="line"><span class="cl">                    stmt.close();
</span></span><span class="line"><span class="cl">                    Thread.sleep(Long.valueOf(interval));
</span></span><span class="line"><span class="cl">                }
</span></span><span class="line"><span class="cl">                long end = System.currentTimeMillis();
</span></span><span class="line"><span class="cl">                System.out.println(&#34;rt : &#34; + (end - start));
</span></span><span class="line"><span class="cl">            }
</span></span><span class="line"><span class="cl">        } catch (SQLException e) {
</span></span><span class="line"><span class="cl">            e.printStackTrace();
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}</span></span></code></pre>
</div>
<p>然后通过传入不同的jdbc参数跑2组测试:</p>
<ol>
<li>走服务节点执行指定id的点查；</li>
<li>直接从服务节点节点连MySQL指定id点查</li>
</ol>
<p>上述2组测试同时跑在三组场景下：</p>
<ul>
<li>A) 服务节点和MySQL都没有压力；</li>
<li>B) 跑1、2测试的服务节点没有压力，但是sysbench 在压别的服务节点，这样后端的MySQL是有sysbench压侧压力，LVS也有流量压力的；</li>
<li>C) sysbench压所有服务节点, 包含运行 1、2测试程序节点）</li>
</ul>
<p>这样2组测试3个场景组合可以得到6组响应时间的测试数据</p>
<p>从最终得到6组数据来看可以排除链路以及MySQL的问题，瓶颈似乎还是在服务节点上</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/595bc15fdd72860f2d1875c86384a14b.png   alt="image.png"  ></p>
<p>单独压一个服务节点节点并在上面跑测试，服务节点 CPU被压到 390%(每个服务节点 节点固定绑到4核), 这个时候整个宿主机压力不大，但是这四个核比较紧张了</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-3" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#cat rt.log  | awk &#39;{ print $3 }&#39;  | awk &#39;{if(min==&#34;&#34;){min=max=$1}; if($1&gt;max) {max=$1}; if($1&lt;min) {min=$1}; total+=$1; count+=1} END {print &#34;avg &#34; total/count,&#34; | max &#34;max,&#34; | min &#34; min, &#34;| count &#34;, count}&#39; ; cat MySQL.log  | awk &#39;{ print $3 }&#39;  | awk &#39;{if(min==&#34;&#34;){min=max=$1}; if($1&gt;max) {max=$1}; if($1&lt;min) {min=$1}; total+=$1; count+=1} END {print &#34;avg &#34; total/count,&#34; | max &#34;max,&#34; | min &#34; min, &#34;| count &#34;, count }&#39;;
</span></span><span class="line"><span class="cl">avg 2589.13  | max 3385  | min 2502 | count  69
</span></span><span class="line"><span class="cl">avg 1271.07  | max 1405  | min 1254 | count  141
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[root@d42a01107.cloud.a02.am78 /root]
</span></span><span class="line"><span class="cl">#taskset -pc 48759
</span></span><span class="line"><span class="cl">pid 48759&#39;s current affinity list: 19,52-54</span></span></code></pre>
</div>
<p>通过这6组测试数据可以看到，只有在整个系统都有压力（服务节点所在物理机、LVS、MySQL）的时候rt飙升最明显（C组数据），如果只是LVS、MySQL有压力，服务节点没有压力的时候可以看到数据还是很好的（B组数据）</p>
<h2 id="分析宿主机资源竞争" class="headerLink">
    <a href="#%e5%88%86%e6%9e%90%e5%ae%bf%e4%b8%bb%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89" class="header-mark"></a>分析宿主机资源竞争</h2><h3 id="perf分析" class="headerLink">
    <a href="#perf%e5%88%86%e6%9e%90" class="header-mark"></a>perf分析</h3><p>只压单个服务节点</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/7aea9045e50794fadc0439ee806f2496.png   alt="image.png"  ></p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/86c3f14887345a1d5f08cae985816564.png   alt="image.png"  ></p>
<p><strong>从以上截图，可以看到关键的 insn per cycle 能到0.51和0.66（这个数值越大性能越好）</strong></p>
<p>如果同时压物理机上的所有服务节点</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/02f47474c612c2bf6e612efea3ab5de3.png   alt="image.png"  ></p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/c3d90e077d00a7a3db54770d9eea2dbb.png   alt="image.png"  ></p>
<p><strong>从以上截图，可以看到关键的 insn per cycle 能降到了0.27和0.31（这个数值越大性能越好），基本相当于单压的5折</strong></p>
<p>通过 perf list 找出所有Hardware event，然后对他们进行perf:</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-4" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="n">sudo</span> <span class="n">perf</span> <span class="n">stat</span> <span class="o">-</span><span class="n">e</span> <span class="n">branch</span><span class="o">-</span><span class="n">instructions</span><span class="p">,</span><span class="n">branch</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">cache</span><span class="o">-</span><span class="n">references</span><span class="p">,</span><span class="n">cpu</span><span class="o">-</span><span class="n">cycles</span><span class="p">,</span><span class="n">instructions</span><span class="p">,</span><span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">backend</span><span class="p">,</span><span class="n">stalled</span><span class="o">-</span><span class="n">cycles</span><span class="o">-</span><span class="n">frontend</span><span class="p">,</span><span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">loads</span><span class="p">,</span><span class="n">L1</span><span class="o">-</span><span class="n">dcache</span><span class="o">-</span><span class="n">prefetches</span><span class="p">,</span><span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">L1</span><span class="o">-</span><span class="n">icache</span><span class="o">-</span><span class="n">loads</span><span class="p">,</span><span class="n">branch</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">branch</span><span class="o">-</span><span class="n">loads</span><span class="p">,</span><span class="n">dTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">dTLB</span><span class="o">-</span><span class="n">loads</span><span class="p">,</span><span class="n">iTLB</span><span class="o">-</span><span class="nb">load</span><span class="o">-</span><span class="n">misses</span><span class="p">,</span><span class="n">iTLB</span><span class="o">-</span><span class="n">loads</span> <span class="o">-</span><span class="n">a</span> <span class="o">--</span> <span class="err">`</span><span class="n">pidof</span> <span class="n">java</span><span class="err">`</span></span></span></code></pre>
</div>
<h3 id="尝试不同的绑核后的一些数据" class="headerLink">
    <a href="#%e5%b0%9d%e8%af%95%e4%b8%8d%e5%90%8c%e7%9a%84%e7%bb%91%e6%a0%b8%e5%90%8e%e7%9a%84%e4%b8%80%e4%ba%9b%e6%95%b0%e6%8d%ae" class="header-mark"></a>尝试不同的绑核后的一些数据</h3><p>通过以上perf数据以及numa结构，尝试将不同服务进程绑定到指定的4个核上</p>
<p>试了以下三种绑核的办法：</p>
<p>1）docker swarm随机绑（<strong>以上测试都是用的这种默认方案</strong>）；</p>
<p>2）一个服务节点绑连续4个core,这4个core都在同一个node；</p>
<p>3）一个服务节点绑4个core，这个4个core都在在同一个node，同时尽量HT在一起，也就是0，1，32，33 ； 2，3，34，35 这种绑法</p>
<p><strong>结果是绑法2性能略好</strong>.</p>
<p>如果是绑法2，压单个服务节点 QPS能到2.3万；绑法1和3，压单个服务节点性能差别不明显，都是2万左右。</p>
<h2 id="尝试将java进程开启hugepage" class="headerLink">
    <a href="#%e5%b0%9d%e8%af%95%e5%b0%86java%e8%bf%9b%e7%a8%8b%e5%bc%80%e5%90%afhugepage" class="header-mark"></a>尝试将Java进程开启HugePage</h2><p>从perf数据来看压满后tlab miss比较高，得想办法降低这个值</p>
<h3 id="修改jvm启动参数" class="headerLink">
    <a href="#%e4%bf%ae%e6%94%b9jvm%e5%90%af%e5%8a%a8%e5%8f%82%e6%95%b0" class="header-mark"></a>修改JVM启动参数</h3><p>JVM启动参数增加如下三个(-XX:LargePageSizeInBytes=2m, 这个一定要，有些资料没提这个，在我的JDK8.0环境必须要)：</p>
<blockquote>
  <p>-XX:+UseLargePages -XX:LargePageSizeInBytes=2m -XX:+UseHugeTLBFS</p>

</blockquote><h3 id="修改机器系统配置" class="headerLink">
    <a href="#%e4%bf%ae%e6%94%b9%e6%9c%ba%e5%99%a8%e7%b3%bb%e7%bb%9f%e9%85%8d%e7%bd%ae" class="header-mark"></a>修改机器系统配置</h3><p>设置HugePage的大小</p>
<blockquote>
  <p>cat /proc/sys/vm/nr_hugepages</p>

</blockquote><p>nr_hugepages设置多大参考如下计算方法：</p>
<blockquote>
  <p>If you are using the option <code>-XX:+UseSHM</code> or <code>-XX:+UseHugeTLBFS</code>, then specify the number of large pages. In the following example, 3 GB of a 4 GB system are reserved for large pages (assuming a large page size of 2048kB, then 3 GB = 3 * 1024 MB = 3072 MB = 3072 * 1024 kB = 3145728 kB and 3145728 kB / 2048 kB = 1536):</p>
<p>echo 1536 &gt; /proc/sys/vm/nr_hugepages</p>

</blockquote><p>透明大页是没有办法减少系统tlab，tlab是对应于进程的，系统分给进程的透明大页还是由物理上的4K page组成。</p>
<p>Java进程用上HugePages后iTLB-load-misses从80%下降到了14%左右, dTLB也从30%下降到了20%，但是ipc变化不明显，QPS有不到10%的增加(不能确定是不是抖动所致)</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/f6882f4c671b4c4b46feb01aa5e272fd.png   alt="image.png"  ></p>
<p>在公有云ecs虚拟机上测试对性能没啥帮助，实际看到用掉的HuagPage不多，如果/proc/sys/vm/nr_hugepages 设置比较大的话JVM会因为内存不足起不来，两者内存似乎是互斥的</p>
<h2 id="用sysbench验证一下海光服务器的多core能力" class="headerLink">
    <a href="#%e7%94%a8sysbench%e9%aa%8c%e8%af%81%e4%b8%80%e4%b8%8b%e6%b5%b7%e5%85%89%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%9a%84%e5%a4%9acore%e8%83%bd%e5%8a%9b" class="header-mark"></a>用sysbench验证一下海光服务器的多core能力</h2><p>Intel E5 2682 2.5G VS hygon 7280 2.0G（Zen1）</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210813095409553.png   alt="image-20210813095409553"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20210813095757299.png   alt="image-20210813095757299"  ></p>
<p>由以上两个测试结果可以看出单核能力hygon 7280 强于 Intel 2682，但是hygon超线程能力还是没有任何提升。Intel用超线程计算能将耗时从109秒降到74秒。但是hygon(Zen1) 只是从89秒降到了87秒，基本没有变化。</p>
<p>再补充一个Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHz 对比数据</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-5" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl"><span class="c1">#taskset -c 1,53 /usr/bin/sysbench --num-threads=2 --test=cpu --cpu-max-prime=50000 run</span>
</span></span><span class="line"><span class="cl"><span class="n">sysbench</span> <span class="mf">0.5</span><span class="p">:</span>  <span class="n">multi</span><span class="o">-</span><span class="n">threaded</span> <span class="n">system</span> <span class="n">evaluation</span> <span class="n">benchmark</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Running</span> <span class="n">the</span> <span class="n">test</span> <span class="n">with</span> <span class="n">following</span> <span class="n">options</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">Number</span> <span class="n">of</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">Random</span> <span class="n">number</span> <span class="n">generator</span> <span class="nb">seed</span> <span class="n">is</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">will</span> <span class="n">be</span> <span class="n">ignored</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Primer</span> <span class="n">numbers</span> <span class="n">limit</span><span class="p">:</span> <span class="mi">50000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Threads</span> <span class="n">started</span><span class="o">!</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">General</span> <span class="n">statistics</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">time</span><span class="p">:</span>                          <span class="mf">48.5571</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">number</span> <span class="n">of</span> <span class="n">events</span><span class="p">:</span>              <span class="mi">10000</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">time</span> <span class="n">taken</span> <span class="n">by</span> <span class="n">event</span> <span class="n">execution</span><span class="p">:</span> <span class="mf">97.0944</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="n">time</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="nb">min</span><span class="p">:</span>                                  <span class="mf">8.29</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="n">avg</span><span class="p">:</span>                                  <span class="mf">9.71</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="nb">max</span><span class="p">:</span>                                 <span class="mf">20.88</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="n">approx</span><span class="o">.</span>  <span class="mi">95</span> <span class="n">percentile</span><span class="p">:</span>               <span class="mf">9.71</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Threads</span> <span class="n">fairness</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">events</span> <span class="p">(</span><span class="n">avg</span><span class="o">/</span><span class="n">stddev</span><span class="p">):</span>           <span class="mf">5000.0000</span><span class="o">/</span><span class="mf">2.00</span>
</span></span><span class="line"><span class="cl">    <span class="n">execution</span> <span class="n">time</span> <span class="p">(</span><span class="n">avg</span><span class="o">/</span><span class="n">stddev</span><span class="p">):</span>   <span class="mf">48.5472</span><span class="o">/</span><span class="mf">0.01</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#taskset -c 1 /usr/bin/sysbench --num-threads=1 --test=cpu --cpu-max-prime=50000 run</span>
</span></span><span class="line"><span class="cl"><span class="n">sysbench</span> <span class="mf">0.5</span><span class="p">:</span>  <span class="n">multi</span><span class="o">-</span><span class="n">threaded</span> <span class="n">system</span> <span class="n">evaluation</span> <span class="n">benchmark</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Running</span> <span class="n">the</span> <span class="n">test</span> <span class="n">with</span> <span class="n">following</span> <span class="n">options</span><span class="p">:</span>
</span></span><span class="line"><span class="cl"><span class="n">Number</span> <span class="n">of</span> <span class="n">threads</span><span class="p">:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">Random</span> <span class="n">number</span> <span class="n">generator</span> <span class="nb">seed</span> <span class="n">is</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">will</span> <span class="n">be</span> <span class="n">ignored</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Primer</span> <span class="n">numbers</span> <span class="n">limit</span><span class="p">:</span> <span class="mi">50000</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Threads</span> <span class="n">started</span><span class="o">!</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">General</span> <span class="n">statistics</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">time</span><span class="p">:</span>                          <span class="mf">83.2642</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">number</span> <span class="n">of</span> <span class="n">events</span><span class="p">:</span>              <span class="mi">10000</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="n">time</span> <span class="n">taken</span> <span class="n">by</span> <span class="n">event</span> <span class="n">execution</span><span class="p">:</span> <span class="mf">83.2625</span><span class="n">s</span>
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="n">time</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">         <span class="nb">min</span><span class="p">:</span>                                  <span class="mf">8.27</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="n">avg</span><span class="p">:</span>                                  <span class="mf">8.33</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="nb">max</span><span class="p">:</span>                                 <span class="mf">10.03</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">         <span class="n">approx</span><span class="o">.</span>  <span class="mi">95</span> <span class="n">percentile</span><span class="p">:</span>               <span class="mf">8.36</span><span class="n">ms</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Threads</span> <span class="n">fairness</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">events</span> <span class="p">(</span><span class="n">avg</span><span class="o">/</span><span class="n">stddev</span><span class="p">):</span>           <span class="mf">10000.0000</span><span class="o">/</span><span class="mf">0.00</span>
</span></span><span class="line"><span class="cl">    <span class="n">execution</span> <span class="n">time</span> <span class="p">(</span><span class="n">avg</span><span class="o">/</span><span class="n">stddev</span><span class="p">):</span>   <span class="mf">83.2625</span><span class="o">/</span><span class="mf">0.00</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#lscpu</span>
</span></span><span class="line"><span class="cl"><span class="n">Architecture</span><span class="p">:</span>          <span class="n">x86_64</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">op</span><span class="o">-</span><span class="n">mode</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>        <span class="mi">32</span><span class="o">-</span><span class="n">bit</span><span class="p">,</span> <span class="mi">64</span><span class="o">-</span><span class="n">bit</span>
</span></span><span class="line"><span class="cl"><span class="n">Byte</span> <span class="n">Order</span><span class="p">:</span>            <span class="n">Little</span> <span class="n">Endian</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>                <span class="mi">104</span>
</span></span><span class="line"><span class="cl"><span class="n">On</span><span class="o">-</span><span class="n">line</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">list</span><span class="p">:</span>   <span class="mi">0</span><span class="o">-</span><span class="mi">103</span>
</span></span><span class="line"><span class="cl"><span class="ne">Thread</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">core</span><span class="p">:</span>    <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">Core</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="n">per</span> <span class="n">socket</span><span class="p">:</span>    <span class="mi">26</span>
</span></span><span class="line"><span class="cl"><span class="n">Socket</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>             <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>          <span class="mi">2</span>
</span></span><span class="line"><span class="cl"><span class="n">Vendor</span> <span class="n">ID</span><span class="p">:</span>             <span class="n">GenuineIntel</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">family</span><span class="p">:</span>            <span class="mi">6</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span><span class="p">:</span>                 <span class="mi">85</span>
</span></span><span class="line"><span class="cl"><span class="n">Model</span> <span class="n">name</span><span class="p">:</span>            <span class="n">Intel</span><span class="p">(</span><span class="n">R</span><span class="p">)</span> <span class="n">Xeon</span><span class="p">(</span><span class="n">R</span><span class="p">)</span> <span class="n">Platinum</span> <span class="mi">8269</span><span class="n">CY</span> <span class="n">CPU</span> <span class="err">@</span> <span class="mf">2.50</span><span class="n">GHz</span>
</span></span><span class="line"><span class="cl"><span class="n">Stepping</span><span class="p">:</span>              <span class="mi">7</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="n">MHz</span><span class="p">:</span>               <span class="mf">3200.097</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">max</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">3800.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">CPU</span> <span class="nb">min</span> <span class="n">MHz</span><span class="p">:</span>           <span class="mf">1200.0000</span>
</span></span><span class="line"><span class="cl"><span class="n">BogoMIPS</span><span class="p">:</span>              <span class="mf">4998.89</span>
</span></span><span class="line"><span class="cl"><span class="n">Virtualization</span><span class="p">:</span>        <span class="n">VT</span><span class="o">-</span><span class="n">x</span>
</span></span><span class="line"><span class="cl"><span class="n">L1d</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">32</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L1i</span> <span class="n">cache</span><span class="p">:</span>             <span class="mi">32</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L2</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">1024</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">L3</span> <span class="n">cache</span><span class="p">:</span>              <span class="mi">36608</span><span class="n">K</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node0</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">0</span><span class="o">-</span><span class="mi">25</span><span class="p">,</span><span class="mi">52</span><span class="o">-</span><span class="mi">77</span>
</span></span><span class="line"><span class="cl"><span class="n">NUMA</span> <span class="n">node1</span> <span class="n">CPU</span><span class="p">(</span><span class="n">s</span><span class="p">):</span>     <span class="mi">26</span><span class="o">-</span><span class="mi">51</span><span class="p">,</span><span class="mi">78</span><span class="o">-</span><span class="mi">103</span>
</span></span><span class="line"><span class="cl"><span class="n">Flags</span><span class="p">:</span>                 <span class="n">fpu</span> <span class="n">vme</span> <span class="n">de</span> <span class="n">pse</span> <span class="n">tsc</span> <span class="n">msr</span> <span class="n">pae</span> <span class="n">mce</span> <span class="n">cx8</span> <span class="n">apic</span> <span class="n">sep</span> <span class="n">mtrr</span> <span class="n">pge</span> <span class="n">mca</span> <span class="n">cmov</span> <span class="n">pat</span> <span class="n">pse36</span> <span class="n">clflush</span> <span class="n">dts</span> <span class="n">acpi</span> <span class="n">mmx</span> <span class="n">fxsr</span> <span class="n">sse</span> <span class="n">sse2</span> <span class="n">ss</span> <span class="n">ht</span> <span class="n">tm</span> <span class="n">pbe</span> <span class="n">syscall</span> <span class="n">nx</span> <span class="n">pdpe1gb</span> <span class="n">rdtscp</span> <span class="n">lm</span> <span class="n">constant_tsc</span> <span class="n">arch_perfmon</span> <span class="n">pebs</span> <span class="n">bts</span> <span class="n">rep_good</span> <span class="n">nopl</span> <span class="n">xtopology</span> <span class="n">nonstop_tsc</span> <span class="n">aperfmperf</span> <span class="n">eagerfpu</span> <span class="n">pni</span> <span class="n">pclmulqdq</span> <span class="n">dtes64</span> <span class="n">monitor</span> <span class="n">ds_cpl</span> <span class="n">vmx</span> <span class="n">smx</span> <span class="n">est</span> <span class="n">tm2</span> <span class="n">ssse3</span> <span class="n">fma</span> <span class="n">cx16</span> <span class="n">xtpr</span> <span class="n">pdcm</span> <span class="n">pcid</span> <span class="n">dca</span> <span class="n">sse4_1</span> <span class="n">sse4_2</span> <span class="n">x2apic</span> <span class="n">movbe</span> <span class="n">popcnt</span> <span class="n">tsc_deadline_timer</span> <span class="n">aes</span> <span class="n">xsave</span> <span class="n">avx</span> <span class="n">f16c</span> <span class="n">rdrand</span> <span class="n">lahf_lm</span> <span class="n">abm</span> <span class="mi">3</span><span class="n">dnowprefetch</span> <span class="n">ida</span> <span class="n">arat</span> <span class="n">epb</span> <span class="n">invpcid_single</span> <span class="n">pln</span> <span class="n">pts</span> <span class="n">dtherm</span> <span class="n">spec_ctrl</span> <span class="n">ibpb_support</span> <span class="n">tpr_shadow</span> <span class="n">vnmi</span> <span class="n">flexpriority</span> <span class="n">ept</span> <span class="n">vpid</span> <span class="n">fsgsbase</span> <span class="n">tsc_adjust</span> <span class="n">bmi1</span> <span class="n">hle</span> <span class="n">avx2</span> <span class="n">smep</span> <span class="n">bmi2</span> <span class="n">erms</span> <span class="n">invpcid</span> <span class="n">rtm</span> <span class="n">cqm</span> <span class="n">mpx</span> <span class="n">rdt</span> <span class="n">avx512f</span> <span class="n">avx512dq</span> <span class="n">rdseed</span> <span class="n">adx</span> <span class="n">smap</span> <span class="n">clflushopt</span> <span class="n">avx512cdavx512bw</span> <span class="n">avx512vl</span> <span class="n">xsaveopt</span> <span class="n">xsavec</span> <span class="n">xgetbv1</span> <span class="n">cqm_llc</span> <span class="n">cqm_occup_llc</span> <span class="n">cqm_mbm_total</span> <span class="n">cqm_mbm_local</span> <span class="n">cat_l3</span> <span class="n">mba</span></span></span></code></pre>
</div>
<p>用sysbench 测试Hygon C86 5280 16-core Processor，分别1、8、16、24、32、40、48、56、64 个thread，32个thread前都是完美的线性增加，32core之后基本不增长了，这个应该能说明这个服务器就是32core的能力</p>
<blockquote>
  <p>sysbench &ndash;threads=1 &ndash;cpu-max-prime=50000 cpu run</p>

</blockquote><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/f86cd786f3a8297078579b547f78ec81.png   alt="image.png"  ></p>
<p>对比下intel的 Xeon 104core，也是物理52core，但是性能呈现完美线性</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/8086f47b955d8d951e4dd4c7fe5e135e.png   alt="image.png"  ></p>
<h3 id="openssl场景多核能力验证" class="headerLink">
    <a href="#openssl%e5%9c%ba%e6%99%af%e5%a4%9a%e6%a0%b8%e8%83%bd%e5%8a%9b%e9%aa%8c%e8%af%81" class="header-mark"></a>openssl场景多核能力验证</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-6" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">openssl speed aes-256-ige -multi N</span></span></code></pre>
</div>
<p>intel 52 VS 26，可以看到52个线程的性能大概是26个的1.8倍</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/4534d8e5901cc812aa54e610d1386445.png   alt="image.png"  ></p>
<p>intel 104 VS 52 线程，性能还能提升1.4倍</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/6583f52e03b9753969e52d6a8b211725.png   alt="image.png"  ></p>
<p>海光32 VS 16, 性能能提升大概1.8倍，跟intel一致</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/41e7f230ec27653c1b5ae5287971cd3a.png   alt="image.png"  ></p>
<p>海光64 VS 32, 性能能提升大概1.2倍</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/2ad45a252392a06fa64d7475848e5601.png   alt="image.png"  ></p>
<p>总结下就是，在物理core数以内的线程数intel和海光性能基本增加一致；但如果超过物理core数开始使用HT后海光明显相比Intel差了很多。</p>
<p>intel超线程在openssl场景下性能能提升40%，海光就只能提升20%了。</p>
<h3 id="对比一下鲲鹏920-arm架构的芯片" class="headerLink">
    <a href="#%e5%af%b9%e6%af%94%e4%b8%80%e4%b8%8b%e9%b2%b2%e9%b9%8f920-arm%e6%9e%b6%e6%9e%84%e7%9a%84%e8%8a%af%e7%89%87" class="header-mark"></a>对比一下鲲鹏920 ARM架构的芯片</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-7" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">#numactl -H
</span></span><span class="line"><span class="cl">available: 1 nodes (0)
</span></span><span class="line"><span class="cl">node 0 cpus: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
</span></span><span class="line"><span class="cl">node 0 size: 773421 MB
</span></span><span class="line"><span class="cl">node 0 free: 756092 MB
</span></span><span class="line"><span class="cl">node distances:
</span></span><span class="line"><span class="cl">node   0
</span></span><span class="line"><span class="cl">  0:  10</span></span></code></pre>
</div>
<p>96核一起跑openssl基本就是1核的96倍，完美线性，这是因为鲲鹏就没有超线程，都是物理核。如果并发增加到192个，性能和96个基本一样的。</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/be30ab94eddc37f1d90c53204a0ed215.png   alt="image.png"  ></p>
<h3 id="用sysbench直接压mysql-oltp_read_only的场景" class="headerLink">
    <a href="#%e7%94%a8sysbench%e7%9b%b4%e6%8e%a5%e5%8e%8bmysql-oltp_read_only%e7%9a%84%e5%9c%ba%e6%99%af" class="header-mark"></a>用Sysbench直接压MySQL oltp_read_only的场景</h3><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/89c7a0228c45f79b688710206ba9d414.png   alt="image.png"  ></p>
<p>从1到10个thread的时候完美呈现线性，到20个thread就只比10个thread增加50%了，30thread比20增加40%，过了32个thread后增加10个core性能加不到10%了。</p>
<p>在32thread前，随着并发的增加 IPC也有所减少，这也是导致thread翻倍性能不能翻倍的一个主要原因。</p>
<p>基本也和openssl 场景一致，海光的HT基本可以忽略，做的不是很好。超过32个thread后（物理core数）性能增加及其微弱</p>
<h2 id="结论" class="headerLink">
    <a href="#%e7%bb%93%e8%ae%ba" class="header-mark"></a>结论</h2><p>海光的一个core只有一个fpu，所以超线程算浮点完全没用.</p>
<blockquote>
  <p>FP处理所有矢量操作。简单的整数向量运算（例如shift，add）都可以在一个周期内完成，是AMD以前架构延迟的一半。<strong>基本浮点数学运算具有三个周期的延迟</strong>，其中包括乘法（用于双精度需要一个额外周期）。<strong>融合乘加是五个周期。</strong></p>
<p>FP具有用于128位加载操作的单个管道。实际上，整个FP端都针对128位操作进行了优化。 Zen支持所有最新指令，例如SSE和AVX1/2。 256位AVX的设计方式是可以将它们作为两个独立的128位操作来执行。 Zen通过将这些指令作为两个操作。也就是说，<strong>Zen将256位操作分为两个µOP</strong>。同样，存储也是在128位块上完成的，从而使256位加载的有效吞吐量为每两个周期一个存储。这些管道之间的平衡相当好，因此大多数操作将安排至少两个管道，以保持每个周期至少一个这样的指令的吞吐量。暗示着，**256位操作将占用两倍的资源来完成操作（即2x寄存器，调度程序和端口）。这是AMD采取的一种折衷方案，有助于节省芯片空间和功耗。**相比之下，英特尔的竞争产品Skylake确实具有专用的256位电路。还应注意的是，英特尔的现代服务器级型号进一步扩展了此功能，以纳入支持AVX-512的专用512位电路，而性能最高的型号则具有二个专用的AVX-512单元。</p>
<p>此外，Zen还支持SHA和AES（并实现了2个AES单元），以提高加密性能。这些单位可以在浮点调度程序的管道0和1上找到。</p>
<p>这个也是为什么浮点比Intel X86会弱的原因。</p>

</blockquote><h3 id="一些其他对比结论" class="headerLink">
    <a href="#%e4%b8%80%e4%ba%9b%e5%85%b6%e4%bb%96%e5%af%b9%e6%af%94%e7%bb%93%e8%ae%ba" class="header-mark"></a>一些其他对比结论</h3><ul>
<li>对纯CPU 运算场景，并发不超过物理core时，比如Prime运算，比如DRDS(CPU bound，IO在网络，可以加并发弥补)
<ul>
<li>海光的IPC能保持稳定；</li>
<li>intel的IPC有所下降，但是QPS在IPC下降后还能完美线性</li>
</ul>
</li>
<li>在openssl和MySQL oltp_read_only场景下
<ul>
<li>如果并发没超过物理core数时，海光和Intel都能随着并发的翻倍性能能增加80%</li>
<li>如果并发超过物理core数后，Intel还能随着并发的翻倍性能增加50%，海光增加就只有20%了</li>
<li>简单理解在这两个场景下Intel的HT能发挥半个物理core的作用，海光的HT就只能发挥0.2个物理core的作用了</li>
</ul>
</li>
<li>海光5280/7280 是Zen1/Zen2的AMD 架构，每个core只有一个fpu，综上在多个场景下HT基本上都可以忽略</li>
</ul>
<h2 id="系列文章" class="headerLink">
    <a href="#%e7%b3%bb%e5%88%97%e6%96%87%e7%ab%a0" class="header-mark"></a>系列文章</h2><p><a href="/2021/06/01/CPU%e7%9a%84%e5%88%b6%e9%80%a0%e5%92%8c%e6%a6%82%e5%bf%b5/" rel="">CPU的制造和概念</a></p>
<p>[CPU 性能和Cache Line](/2021/05/16/CPU Cache Line 和性能/)</p>
<p>[Perf IPC以及CPU性能](/2021/05/16/Perf IPC以及CPU利用率/)</p>
<p><a href="/2021/06/18/%e5%87%a0%e6%ac%beCPU%e6%80%a7%e8%83%bd%e5%af%b9%e6%af%94/" rel="">Intel、海光、鲲鹏920、飞腾2500 CPU性能对比</a></p>
<p><a href="/2021/05/15/%e9%a3%9e%e8%85%beARM%e8%8a%af%e7%89%87%28FT2500%29%e7%9a%84%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95/" rel="">飞腾ARM芯片(FT2500)的性能测试</a></p>
<p><a href="/2021/05/14/%e5%8d%81%e5%b9%b4%e5%90%8e%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%98%e6%98%af%e4%b8%8d%e6%95%a2%e6%8b%a5%e6%8a%b1NUMA/" rel="">十年后数据库还是不敢拥抱NUMA？</a></p>
<p><a href="/2021/03/07/%e4%b8%80%e6%ac%a1%e6%b5%b7%e5%85%89%e7%89%a9%e7%90%86%e6%9c%ba%e8%b5%84%e6%ba%90%e7%ab%9e%e4%ba%89%e5%8e%8b%e6%b5%8b%e7%9a%84%e8%ae%b0%e5%bd%95/" rel="">一次海光物理机资源竞争压测的记录</a></p>
<p>[Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的](/2019/12/16/Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的/)</p>
<h2 id="参考资料" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" class="header-mark"></a>参考资料</h2><p><a href="https://dino.ciuffetti.info/2011/07/howto-java-huge-pages-linux/" target="_blank" rel="noopener noreferrer">How to use Huge Pages with Java and Linux</a>这个资料中提到了Java使用HugePage的时候启动进程的用户权限问题，在我的docker容器中用的admin启动的进程，测试验证是不需要按资料中的设置。</p>
<p><a href="https://plantegg.github.io/2019/12/16/Intel%20PAUSE%E6%8C%87%E4%BB%A4%E5%8F%98%E5%8C%96%E6%98%AF%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8D%E8%87%AA%E6%97%8B%E9%94%81%E4%BB%A5%E5%8F%8AMySQL%E7%9A%84%E6%80%A7%E8%83%BD%E7%9A%84/" target="_blank" rel="noopener noreferrer">Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的</a></p>
<p><a href="https://bbs.huaweicloud.com/blogs/146367" target="_blank" rel="noopener noreferrer">华为TaiShan服务器ARMNginx应用调优案例 大量绑核、中断、Numa等相关调优信息</a></p>
]]></description>
</item><item>
    <title>Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的</title>
    <link>http://localhost:1313/posts/intel-pause%E6%8C%87%E4%BB%A4%E5%8F%98%E5%8C%96%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8Dmysql%E7%9A%84%E6%80%A7%E8%83%BD/</link>
    <pubDate>Mon, 16 Dec 2019 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/intel-pause%E6%8C%87%E4%BB%A4%E5%8F%98%E5%8C%96%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8Dmysql%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
    <description><![CDATA[<h1 id="intel-pause指令变化如何影响mysql的性能" class="headerLink">
    <a href="#intel-pause%e6%8c%87%e4%bb%a4%e5%8f%98%e5%8c%96%e5%a6%82%e4%bd%95%e5%bd%b1%e5%93%8dmysql%e7%9a%84%e6%80%a7%e8%83%bd" class="header-mark"></a>Intel PAUSE指令变化如何影响MySQL的性能</h1><h2 id="导读" class="headerLink">
    <a href="#%e5%af%bc%e8%af%bb" class="header-mark"></a>导读</h2><p>x86、arm指令都很多，无论是应用程序员还是数据库内核研发大多时候都不需要对这些指令深入理解，但是 Pause 指令和数据库操作太紧密了，本文通过一次非常有趣的性能优化来引入对 Pause 指令的理解，期望可以事半功倍地搞清楚 CPU指令集是如何影响你的程序的。</p>
<p>文章分成两大部分，第一部分是 MySQL 集群的一次全表扫描性能优化过程； 第二部分是问题解决后的原理分析以及Pause指令的来龙去脉和优缺点以及应用场景分析。</p>
<h2 id="业务结构" class="headerLink">
    <a href="#%e4%b8%9a%e5%8a%a1%e7%bb%93%e6%9e%84" class="header-mark"></a>业务结构</h2><p>为理解方便做了部分简化：</p>
<p>client -&gt; Tomcat -&gt; LVS -&gt; MySQL（32 个 MySQLD实例集群，每个实例8Core）</p>
<h2 id="场景描述" class="headerLink">
    <a href="#%e5%9c%ba%e6%99%af%e6%8f%8f%e8%bf%b0" class="header-mark"></a>场景描述</h2><p>业务按照 个人分库+单位分表: 32个RDS * 8个分库   * 4张分表=1024分表， 也就是 256个分库，每个分库4张表</p>
<p>通过 client 压 Tomcat 和 MySQL 集群（对数据做分库分表），MySQL 集群是32个实例，每个业务 SQL 都需要经过 Tomcat 拆分成 256 个 SQL 发送给 32 个MySQL 实例（每个MySQL 实例上有8个分库），这 256 条下发给 MySQL 的 SQL 不是完全串行，但也不是完全并行，有一定的并行性。</p>
<p>业务 SQL 如下是一个简单的select sum求和，这个 SQL在每个MySQL上都很快（有索引）</p>
<pre><code>SELECT SUM(emp_arr_amt) FROM table_c WHERE INSUTYPE='310' AND Revs_Flag='Z' AND accrym='201910' AND emp_no='1050457';
</code></pre>
<h2 id="监控指标说明" class="headerLink">
    <a href="#%e7%9b%91%e6%8e%a7%e6%8c%87%e6%a0%87%e8%af%b4%e6%98%8e" class="header-mark"></a>监控指标说明</h2><ul>
<li>后述或者截图中的逻辑RT/QPS是指 client 上看到的Tomcat的 RT 和 QPS；</li>
<li>RT ：response time 请求响应时间，判断性能瓶颈的唯一指标;</li>
<li>物理RT/QPS是指Tomcat看到的MySQL  RT 和QPS（这里的 RT 是指到达Tomcat节点网卡的 RT ，所以还包含了网络消耗）</li>
</ul>
<h2 id="问题描述" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0" class="header-mark"></a>问题描述：</h2><p>通过client压一个Tomcat节点+32个MySQL，QPS大概是430，Tomcat节点CPU跑满，MySQL  RT 是0.5ms，增加一个Tomcat节点，QPS大概是700，Tomcat CPU接近跑满，MySQL  RT 是0.6ms，到这里性能基本随着扩容线性增加，是符合预期的。</p>
<p>继续增加Tomcat节点来横向扩容性能，通过client压三个Tomcat节点+32个MySQL，QPS还是700，Tomcat节点CPU跑不满，MySQL  RT 是0.8ms，这就严重不符合预期了。</p>
<p>性能压测原则：</p>
<blockquote>
  <p>加并发QPS不再上升说明到了某个瓶颈，哪个环节RT增加最多瓶颈就在哪里</p>

</blockquote><p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221026145848312.png   alt="image-20221026145848312"  ></p>
<p><strong>到这里一切都还是符合我们的经验的，看起来就是 MySQL 有瓶颈（RT 增加明显）。</strong></p>
<h2 id="排查-mysql" class="headerLink">
    <a href="#%e6%8e%92%e6%9f%a5-mysql" class="header-mark"></a>排查 MySQL</h2><p>现场DBA通过监控看到MySQL CPU不到20%，没有慢查询，并且尝试用client越过所有中间环节直接压其中一个MySQL，可以将 MySQL CPU 跑满，这时的QPS大概是38000（对应上面的场景client QPS为700的时候，单个MySQL上的QPS才跑到6000) 所以排除了MySQL的嫌疑(这个推理不够严谨为后面排查埋下了大坑)。</p>
<p>那么接下来的嫌疑在网络、LVS 等中间环节上。</p>
<h2 id="lvs和网络的嫌疑" class="headerLink">
    <a href="#lvs%e5%92%8c%e7%bd%91%e7%bb%9c%e7%9a%84%e5%ab%8c%e7%96%91" class="header-mark"></a>LVS和网络的嫌疑</h2><p>首先通过大查询排除了带宽的问题，因为这里都是小包，pps到了72万，很自然想到了网关、LVS的限流之类的</p>
<p>pps监控，这台物理机有4个MySQL实例上，pps 9万左右，9*32/4=72万
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/b84245c17e213de528f2ad8090d504f6.png   alt="image.png"  ></p>
<p>…………（省略巨长的分析、拉人、扯皮过程）</p>
<p>最终所有网络因素都被排除，核心证据是：做压测的时候反复从 Tomcat 上 ping 后面的MySQL，RT 跟没有压力的时候一样，也说明了网络没有问题(请思考这个 ping 的作用)。</p>
<h2 id="问题的确认" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e7%9a%84%e7%a1%ae%e8%ae%a4" class="header-mark"></a>问题的确认</h2><p>尝试在Tomcat上打开日志，并将慢 SQL 阈值设置为100ms，这个时候确实能从日志中看到大量MySQL上的慢查询，因为这个SQL需要在Tomcat上做拆分成256个SQL，同时下发，一旦有一个SQL返回慢，整个请求就因为这个短板被拖累了。平均 RT  0.8ms，但是经常有超过100ms的话对整体影响还是很大的。</p>
<p>将Tomcat记录下来的慢查询（Tomcat增加了一个唯一id下发给MySQL）到MySQL日志中查找，果然发现MySQL上确实慢了，所以到这里基本确认是MySQL的问题，终于不用再纠结是否是网络问题了。</p>
<p>同时在Tomcat进行抓包，对网卡上的 RT 进行统计分析：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/ffd66d9a6098979b555dfb00d3494255.png   alt="image.png"  ></p>
<p>上是Tomcat上抓到的每个sql的物理RT 平均值，上面是QPS 430的时候， RT  0.6ms，下面是3个server，QPS为700，但是 RT 上升到了0.9ms，基本跟Tomcat监控记录到的物理RT一致。如果MySQL上也有类似抓包计算 RT 时间的话可以快速排除网络问题。</p>
<p>网络抓包得到的 RT 数据更容易被所有人接受。尝试过在MySQL上抓包，但是因为LVS模块的原因，进出端口、ip都被修改过，所以没法分析一个流的响应时间。</p>
<h2 id="重心再次转向mysql" class="headerLink">
    <a href="#%e9%87%8d%e5%bf%83%e5%86%8d%e6%ac%a1%e8%bd%ac%e5%90%91mysql" class="header-mark"></a>重心再次转向MySQL</h2><p>这个时候因为问题点基本确认，再去查看MySQL是否有问题的重心都不一样了，不再只是看看CPU和慢查询，这个问题明显更复杂一些。</p>
<blockquote>
  <p>教训：CPU只是影响性能的一个因素，RT 才是结果，要追着 RT 跑，而不是只看 CPU</p>

</blockquote><p>通过监控发现MySQL CPU虽然一直不高，但是经常看到running thread飙到100多，很快又降下去了，看起来像是突发性的并发查询请求太多导致了排队等待，每个MySQL实例是8Core的CPU，尝试将MySQL实例扩容到16Core（只是为了验证这个问题），QPS确实可以上升到1000（没有到达理想的1400）。</p>
<p>这是Tomcat上监控到的MySQL状态：
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/e73c1371a02106a52f8a13f89a9dd9ad.png   alt="image.png"  ></p>
<p>同时在MySQL机器上通过vmstat也可以看到这种飙升：
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/4dbd9dff9deacec0e9911e3a7d025578.png   alt="image.png"  ></p>
<p>以上分析可以清晰看到虽然 MySQL 整体压力不大，但是似乎会偶尔来一波卡顿、running 任务飙升。</p>
<p>像这种短暂突发性的并发流量似乎监控都很难看到（基本都被平均掉了），只有一些实时性监控偶尔会采集到这种短暂突发性飙升，这也导致了一开始忽视了MySQL。</p>
<p>所以接下来的核心问题就是MySQL为什么会有这种飙升、这种飙升的影响到底是什么？</p>
<h2 id="perf-top" class="headerLink">
    <a href="#perf-top" class="header-mark"></a>perf top</h2><p>直接用 perf 看下 MySQLD 进程，发现 ut_delay 高得不符合逻辑：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/cd145c494c074e01e9d2d1d5583a87a0.png   alt="image.png"  ></p>
<p>展开看一下，基本是在优化器中做索引命中行数的选择：</p>
<!-- raw HTML omitted -->
<p>跟直接在 MySQL 命令行中通过 show processlist看到的基本一致：</p>
<!-- raw HTML omitted -->
<p>这是 MySQL 的优化器在对索引进行统计，统计的时候要加锁，thread running 抖动的时候通过 show processlist 看到很多 thread处于 statistics 状态。也就是高并发下加锁影响了 CPU 压不上去同时 RT 剧烈增加。</p>
<p>这里ut_delay 消耗了 28% 的 CPU 肯定太不正常了，于是将 innodb_spin_wait_delay 从 30 改成 6 后性能立即上去了，继续增加 Tomcat 节点，QPS也可以线性增加。</p>
<blockquote>
  <p>耗CPU最高的调用函数栈是…<code>mutex_spin_wait</code>-&gt;<code>ut_delay</code>，属于锁等待的逻辑。InnoDB在这里用的是自旋锁，锁等待是通过调用 ut_delay 让 CPU做空循环在等锁的时候不释放CPU从而避免上下文切换，会消耗比较高的CPU。</p>

</blockquote><h2 id="最终的性能" class="headerLink">
    <a href="#%e6%9c%80%e7%bb%88%e7%9a%84%e6%80%a7%e8%83%bd" class="header-mark"></a>最终的性能</h2><p>调整参数 innodb_spin_wait_delay=6 后在4个Tomcat节点下，并发40时，QPS跑到了1700，物理RT：0.7，逻辑RT：19.6，cpu：90%，这个时候只需要继续扩容 Tomcat 节点的数量就可以增加QPS
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/48c976f989747266f9892403794996c0.png   alt="image.png"  ></p>
<p>再跟调整前比较一下，innodb_spin_wait_delay=30，并发40时，QPS 500+，物理RT：2.6ms 逻辑RT：72.1ms cpu：37%
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/fdb459972926cff371f5f5ab703790bb.png   alt="image.png"  ></p>
<p>再看看调整前压测的时候的vmstat和tsar &ndash;cpu，可以看到process running抖动明显
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/4dbd9dff9deacec0e9911e3a7d025578.png   alt="image.png"  ></p>
<p>对比修改delay后的process running就很稳定了，即使QPS大了3倍
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/ed46d35161ea28352acd4289a3e9ddad.png   alt="image.png"  ></p>
<h2 id="事后思考和分析" class="headerLink">
    <a href="#%e4%ba%8b%e5%90%8e%e6%80%9d%e8%80%83%e5%92%8c%e5%88%86%e6%9e%90" class="header-mark"></a>事后思考和分析</h2><p>到这里问题得到了完美解决，但是不禁要问为什么？ut_delay 是怎么工作的？ 和 innodb_spin_wait_delay 以及自旋锁的关系？</p>
<h2 id="原理解析" class="headerLink">
    <a href="#%e5%8e%9f%e7%90%86%e8%a7%a3%e6%9e%90" class="header-mark"></a>原理解析</h2><p>既然调整 innodb_spin_wait_delay 就能解决这个问题，那就要先分析一下 innodb_spin_wait_delay 的作用</p>
<h3 id="关于-innodb_spin_wait_delay" class="headerLink">
    <a href="#%e5%85%b3%e4%ba%8e-innodb_spin_wait_delay" class="header-mark"></a>关于 innodb_spin_wait_delay</h3><p>innodb通过大量的自旋锁(比如 <code>InnoDB</code> <a href="https://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_mutex" target="_blank" rel="noopener noreferrer">mutexes</a> and <a href="https://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_rw_lock" target="_blank" rel="noopener noreferrer">rw-locks</a>)来用高CPU消耗避免上下文切换，这是自旋锁的正确使用方式，在多核场景下，它们一起自旋抢同一个锁，容易造成<a href="https://stackoverflow.com/questions/30684974/are-cache-line-ping-pong-and-false-sharing-the-same" target="_blank" rel="noopener noreferrer">cache ping-pong</a>，进而多个CPU核之间会互相使对方缓存部分无效。所以这里<a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-spin_lock_polling.html" target="_blank" rel="noopener noreferrer">innodb通过增加 innodb_spin_wait_delay 和 Pause 配合来缓解cache ping-pong</a>，也就是本来通过CPU 高速自旋抢锁，换成了抢锁失败后 delay一下（Pause）但是不释放CPU，delay 时间到后继续抢锁，也就是把连续的自旋抢锁转换成了更稀疏的点状的抢锁（间隔的 delay是个随机数），这样不但避免了上下文切换也大大减少了cache ping-pong。</p>
<h3 id="自旋锁如何减少了cache-ping-pong" class="headerLink">
    <a href="#%e8%87%aa%e6%97%8b%e9%94%81%e5%a6%82%e4%bd%95%e5%87%8f%e5%b0%91%e4%ba%86cache-ping-pong" class="header-mark"></a>自旋锁如何减少了cache ping-pong</h3><p>多线程竞争锁的时候，加锁失败的线程会“忙等待”，直到它拿到锁。什么叫“忙等待”呢？它并不意味着一直执行 CAS 函数，而是会与 CPU 紧密配合 ，它通过 CPU 提供的 <code>PAUSE</code> 指令，减少循环等待时的cache ping-pong和耗电量；对于单核 CPU，忙等待并没有意义，此时它会主动把线程休眠。</p>
<h3 id="x86-pause-指令" class="headerLink">
    <a href="#x86-pause-%e6%8c%87%e4%bb%a4" class="header-mark"></a>X86 PAUSE 指令</h3><p>X86设计了Pause指令，也就是调用 Pause 指令的代码会抢着 CPU 不释放，但是CPU 会打个盹，比如 10个时钟周期，相对一次上下文切换是大几千个时钟周期。</p>
<p>这样应用一旦自旋抢锁失败可以先 Pause 一下，只是这个Pause 时间对于 MySQL 来说还不够久，所以需要增加参数 innodb_spin_wait_delay 来将休息时间放大一些。</p>
<p>在我们的这个场景下对每个 SQL的 RT 抖动非常敏感（放大256倍），所以过高的 delay 会导致部分SQL  RT  变高。</p>
<p>函数 ut_delay(ut_rnd_interval(0, srv_spin_wait_delay)) 用来执行这个delay：</p>
<pre><code>/***************************MySQL代码****************************/
/**Runs an idle loop on CPU. The argument gives the desired delay
in microseconds on 100 MHz Pentium + Visual C++.
@return dummy value */
UNIV_INTERN
ulint
ut_delay(ulint delay)  //delay 是[0,innodb_spin_wait_delay)之间的一个随机数
{
        ulint   i, j;
        UT_LOW_PRIORITY_CPU();
        j = 0;

        for (i = 0; i &lt; delay * 50; i++) {  //delay 放大50倍
                j += i;
                UT_RELAX_CPU();             //调用 CPU Pause
        }

        UT_RESUME_PRIORITY_CPU();
        return(j);
}
</code></pre>
<p>innodb_spin_wait_delay的默认值为6. spin 等待延迟是一个动态全局参数，可以在MySQL选项文件（my.cnf或my.ini）中指定该参数，或者在运行时使用SET GLOBAL 来修改。在我们的MySQL配置中默认改成了30，导致了这个问题。</p>
<h3 id="cpu-为什么要有pause" class="headerLink">
    <a href="#cpu-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%9c%89pause" class="header-mark"></a>CPU 为什么要有Pause</h3><p>首先可以看到 Pause 指令的作用：</p>
<ul>
<li>避免上下文切换，应用层想要休息可能会用yield、sleep，这两操作对于CPU来说太重了(伴随上下文切换)</li>
<li>能给超线程腾出计算能力（HT共享核，但是有单独的寄存器等存储单元，CPU Pause的时候，对应的HT可以占用计算资源），比如同一个core上先跑多个Pause，同时再跑 nop 指令，这时 nop指令的 IPC基本不受Pause的影响</li>
<li>节能（CPU可以休息、但是不让出来），CPU Pause 的时候你从 top 能看到 CPU 100%，但是不耗能。</li>
</ul>
<p>所以有了 Pause 指令后能够提高超线程的利用率,节能，减少上下文切换提高自旋锁的效率。</p>
<blockquote>
  <p><a href="https://www.reddit.com/r/intel/comments/hogk2n/research_on_the_impact_of_intel_Pause_instruction/" target="_blank" rel="noopener noreferrer">The PAUSE instruction is first introduced</a> for Intel Pentium 4 processor to improve the performance of “spin-wait loop”. The PAUSE instruction is typically used with software threads executing on two logical processors located in the same processor core, waiting for a lock to be released. Such short wait loops tend to last between tens and a few hundreds of cycles. When the wait loop is expected to last for thousands of cycles or more, it is preferable to yield to the operating system by calling one of the OS synchronization API functions, such as WaitForSingleObject on Windows OS.</p>
<p>An Intel® processor suffers a severe performance penalty when exiting the loop because it detects a possible memory order violation. The PAUSE instruction provides a hint to the processor that the code sequence is a spin-wait loop. The processor uses this hint to avoid the memory order violation in most situations. The PAUSE instruction can improve the performance of the processors supporting Intel Hyper-Threading Technology when executing “spin-wait loops”. With Pause instruction, processors are able to avoid the memory order violation and pipeline flush, and reduce power consumption through pipeline stall.</p>

</blockquote><p><strong>从intel sdm手册以及实际测试验证来看，Pause 指令在执行过程中，基本不占用流水线执行资源。</strong></p>
<h3 id="skylake-架构的8163-和-broadwell架构-e5-2682-cpu型号的不同" class="headerLink">
    <a href="#skylake-%e6%9e%b6%e6%9e%84%e7%9a%848163-%e5%92%8c-broadwell%e6%9e%b6%e6%9e%84-e5-2682-cpu%e5%9e%8b%e5%8f%b7%e7%9a%84%e4%b8%8d%e5%90%8c" class="header-mark"></a>Skylake 架构的8163 和 Broadwell架构 E5-2682 CPU型号的不同</h3><p>为什么用得好好的 innodb_spin_wait_delay 参数这次就不行了呢？</p>
<p>这是因为以前业务一直使用的是 E5-2682 CPU，这次用的是新一代架构的 Skylake 8163，那这两款CPU在这里的核心差别是？</p>
<p>在Intel 64-ia-32-architectures-optimization-manual手册中提到：</p>
<blockquote>
  <p>The latency of the PAUSE instruction in prior generation microarchitectures is about 10 cycles, whereas in Skylake microarchitecture it has been extended to as many as 140 cycles.</p>
<p><a href="https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol3/o_fe12b1e2a880e0ce-302.html" target="_blank" rel="noopener noreferrer">The PAUSE instruction can improves the performance</a> of processors supporting Intel Hyper-Threading Technology when executing “spin-wait loops” and other routines where one thread is accessing a shared lock or semaphore in a tight polling loop. When executing a spin-wait loop, the processor can suffer a severe performance penalty when exiting the loop because it detects a possible memory order violation and flushes the core processor’s pipeline. The PAUSE instruction provides a hint to the processor that the code sequence is a spin-wait loop. The processor uses this hint to avoid the memory order violation and prevent the pipeline flush. In addition, the PAUSE instruction de-
pipelines the spin-wait loop to prevent it from consuming execution resources excessively and consume power needlessly. (See<a href="https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol3/o_fe12b1e2a880e0ce-305.html" target="_blank" rel="noopener noreferrer"> Section 8.10.6.1, “Use the PAUSE Instruction in Spin-Wait Loops,” for more </a>information about using the PAUSE instruction with IA-32 processors supporting Intel Hyper-Threading Technology.)</p>

</blockquote><p>也就是**Skylake架构的CPU的PAUSE指令从之前的10 cycles 改成了 140 cycles。**这可是14倍的变化呀。</p>
<p>MySQL 使用 innodb_spin_wait_delay 控制 spin lock等待时间，等待时间时间从0*50个Pause到innodb_spin_wait_delay*50个Pause。
以前 innodb_spin_wait_delay 默认配置30，对于E5-2682 CPU，等待的最长时间为：
30 * 50 * 10=15000 cycles，对于2.5GHz的CPU，等待时间为6us。
对应计算 Skylake CPU的等待时间：30 *50 *140=210000 cycles，CPU主频也是2.5GHz，等待时间84us。</p>
<p>E5-2682 CPU型号在不同的delay参数和不同并发压力下的写入性能数据：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221026153750159.png   alt="image-20221026153750159"  ></p>
<p>Skylake 8163 CPU型号在不同的delay参数和不同并发压力下的写入性能数据：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20221026153813774.png   alt="image-20221026153813774"  ></p>
<p>==因为8163的cycles从10改到了140，所以可以看到delay参数对性能的影响更加陡峻。==</p>
<h2 id="总结分析" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93%e5%88%86%e6%9e%90" class="header-mark"></a>总结分析</h2><p>Intel CPU 架构不同使得 Pause 指令的CPU Cycles不同导致了 MySQL innodb_spin_wait_delay 在 spin lock 失败的时候（此时需要 Pause* innodb_spin_wait_delay*N）delay更久，使得调用方看到了MySQL更大的 RT ，进而导致 Tomcat Server上业务并发跑不起来，所以最终压力上不去。</p>
<p>在长链路的排查中，细化定位是哪个节点出了问题是最难的，要盯住 RT 而不是 CPU。</p>
<p>欲速则不达，做压测的时候还是要老老实实地从一个并发开始观察QPS、 RT ，然后一直增加压力到压不上去了，再看QPS、 RT 变化，然后确认瓶颈点。</p>
<h2 id="我想追加几个问题帮大家理解" class="headerLink">
    <a href="#%e6%88%91%e6%83%b3%e8%bf%bd%e5%8a%a0%e5%87%a0%e4%b8%aa%e9%97%ae%e9%a2%98%e5%b8%ae%e5%a4%a7%e5%ae%b6%e7%90%86%e8%a7%a3" class="header-mark"></a>我想追加几个问题帮大家理解</h2><h3 id="为什么要有自旋锁内核里面的spinlock" class="headerLink">
    <a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%9c%89%e8%87%aa%e6%97%8b%e9%94%81%e5%86%85%e6%a0%b8%e9%87%8c%e9%9d%a2%e7%9a%84spinlock" class="header-mark"></a>为什么要有自旋锁(内核里面的spinlock)?</h3><p>等锁的时候可以释放CPU进入等待，这叫悲观锁，代价是释放CPU必然导致上下文切换，一次上下文切换至少需要几千个时钟周期，也就是CPU需要几千个时钟周期来完成上下文切换的工作(几千个时钟周期没有产出&ndash;真浪费)</p>
<p>或者等锁的时候不释放CPU，赌很快能等到锁，这叫乐观锁，Linux OS用的是spinlock（类似大家看到的CAS），也就是CPU不释放一直不停地检查能否拿到锁，一个时钟周期检查一次太快了(想想你去银行柜台办业务，每秒钟问一次柜员轮到你了没有！)，所以CPU工程师就在想能不能提供一条指令一直占着CPU很久，这条指令就是pause，每一个spinlock就会调用pause休息几十、几百个时钟周期后再去看看能否抢到所(柜台给你提供了沙发茶水，你坐一会再去问柜员)</p>
<h3 id="执行pause指令的时候cpu真的休息了吗" class="headerLink">
    <a href="#%e6%89%a7%e8%a1%8cpause%e6%8c%87%e4%bb%a4%e7%9a%84%e6%97%b6%e5%80%99cpu%e7%9c%9f%e7%9a%84%e4%bc%91%e6%81%af%e4%ba%86%e5%90%97" class="header-mark"></a>执行Pause指令的时候CPU真的休息了吗？</h3><p>如果没有事情做的话，CPU是会停下来(省电)，如果开了超线程，如果一个核执行了Pause，那么对这个核的另一个超线程来说，白捡了100%的CPU，别人休息（Pause、stall）的时候正好给我用(这是超线程的本质)！</p>
<p>这也是为什么有些场景2个超线程能发挥2倍能力，有些场景2个超线程只能跑出1倍能力。</p>
<p>相对比上下文切换浪费的几千个时钟周期，Pause(spinlock)真是一点都没浪费。但如果你一直spinlock 几万、几十万个时钟周期都没等到锁还不释放也不对，这会导致其他线程调度不到CPU而饿死。一般自旋一段时间后都会放弃CPU转为上下文切换，所以MySQL 加了参数 innodb_spin_wait_delay 来控制spinlock的长短。</p>
<h3 id="并发高导致自旋锁效率低" class="headerLink">
    <a href="#%e5%b9%b6%e5%8f%91%e9%ab%98%e5%af%bc%e8%87%b4%e8%87%aa%e6%97%8b%e9%94%81%e6%95%88%e7%8e%87%e4%bd%8e" class="header-mark"></a>并发高导致自旋锁效率低？</h3><p>如果并发高，都抢同一个锁，这里的效率会随着并发的增加而降低，不展开了，记住这个结论，类似太多人在柜台问轮到自己没有，留给柜员办业务的时间反而少了！</p>
<h2 id="armhttpsstackoverflowcomquestions70810121why-does-hintspin-loop-use-isb-on-aarch64" class="headerLink">
    <a href="#armhttpsstackoverflowcomquestions70810121why-does-hintspin-loop-use-isb-on-aarch64" class="header-mark"></a><a href="https://stackoverflow.com/questions/70810121/why-does-hintspin-loop-use-isb-on-aarch64" target="_blank" rel="noopener noreferrer">ARM</a></h2><p>ARM 指令集中有 nop 来让流水线空转一个时钟周期，汇编里面的 yield 命令底层就是执行 nop 来达到目的，但是这还不够好，在64位的ARM 指令集里面增加了 <a href="https://developer.arm.com/documentation/ddi0596/2021-06/Base-Instructions/ISB--Instruction-Synchronization-Barrier-" target="_blank" rel="noopener noreferrer">ISB (instruction synchronization barrier)</a> 来<a href="https://github.com/rust-lang/rust/commit/c064b6560b7ce0adeb9bbf5d7dcf12b1acb0c807" target="_blank" rel="noopener noreferrer">实现类似 Pause 的作用</a> ：</p>
<blockquote>
  <p>On arm64 we have seen on several databases that ISB (instruction synchronization barrier) is better to use than yield in a spin loop. The yield instruction is a nop. The isb instruction puts the processor to sleep for some short time. isb is a good equivalent to the pause instruction on x86.</p>

</blockquote><h3 id="对比httpsgithubcomrust-langrustcommitc064b6560b7ce0adeb9bbf5d7dcf12b1acb0c807" class="headerLink">
    <a href="#%e5%af%b9%e6%af%94httpsgithubcomrust-langrustcommitc064b6560b7ce0adeb9bbf5d7dcf12b1acb0c807" class="header-mark"></a><a href="https://github.com/rust-lang/rust/commit/c064b6560b7ce0adeb9bbf5d7dcf12b1acb0c807" target="_blank" rel="noopener noreferrer">对比</a></h3><p>Below is an experiment that shows the effects of yield and isb on Arm64 and the
time of a pause instruction on x86 Intel processors.  The micro-benchmarks use
<a href="https://github.com/google/benchmark.git" target="_blank" rel="noopener noreferrer">https://github.com/google/benchmark.git</a></p>
<p>测试代码</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">$ cat a.cc
</span></span><span class="line"><span class="cl">static void BM_scalar_increment(benchmark::State&amp; state) {
</span></span><span class="line"><span class="cl">  int i = 0;
</span></span><span class="line"><span class="cl">  for (auto _ : state)
</span></span><span class="line"><span class="cl">    benchmark::DoNotOptimize(i++);
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">BENCHMARK(BM_scalar_increment);
</span></span><span class="line"><span class="cl">static void BM_yield(benchmark::State&amp; state) {
</span></span><span class="line"><span class="cl">  for (auto _ : state)
</span></span><span class="line"><span class="cl">    asm volatile(&#34;yield&#34;::);
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">BENCHMARK(BM_yield);
</span></span><span class="line"><span class="cl">static void BM_isb(benchmark::State&amp; state) {
</span></span><span class="line"><span class="cl">  for (auto _ : state)
</span></span><span class="line"><span class="cl">    asm volatile(&#34;isb&#34;::);
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">BENCHMARK(BM_isb);
</span></span><span class="line"><span class="cl">BENCHMARK_MAIN();</span></span></code></pre>
</div>
<p>测试结果</p>
<div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">$ g++ -o run a.cc -O2 -lbenchmark -lpthread
</span></span><span class="line"><span class="cl">$ ./run
</span></span><span class="line"><span class="cl">--------------------------------------------------------------
</span></span><span class="line"><span class="cl">Benchmark                    Time             CPU   Iterations
</span></span><span class="line"><span class="cl">--------------------------------------------------------------
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">AWS Graviton2 (Neoverse-N1) processor:
</span></span><span class="line"><span class="cl">BM_scalar_increment      0.485 ns        0.485 ns   1000000000
</span></span><span class="line"><span class="cl">BM_yield                 0.400 ns        0.400 ns   1000000000
</span></span><span class="line"><span class="cl">BM_isb                    13.2 ns         13.2 ns     52993304
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">AWS Graviton (A-72) processor:
</span></span><span class="line"><span class="cl">BM_scalar_increment      0.897 ns        0.874 ns    801558633
</span></span><span class="line"><span class="cl">BM_yield                 0.877 ns        0.875 ns    800002377
</span></span><span class="line"><span class="cl">BM_isb                    13.0 ns         12.7 ns     55169412
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Apple Arm64 M1 processor:
</span></span><span class="line"><span class="cl">BM_scalar_increment      0.315 ns        0.315 ns   1000000000
</span></span><span class="line"><span class="cl">BM_yield                 0.313 ns        0.313 ns   1000000000
</span></span><span class="line"><span class="cl">BM_isb                    9.06 ns         9.06 ns     77259282
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">static void BM_pause(benchmark::State&amp; state) {
</span></span><span class="line"><span class="cl">  for (auto _ : state)
</span></span><span class="line"><span class="cl">    asm volatile(&#34;pause&#34;::);
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">BENCHMARK(BM_pause);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Intel Skylake processor:
</span></span><span class="line"><span class="cl">BM_scalar_increment      0.295 ns        0.295 ns   1000000000
</span></span><span class="line"><span class="cl">BM_pause                  41.7 ns         41.7 ns     16780553
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Tested on Graviton2 aarch64-linux with `./x.py test`.</span></span></code></pre>
</div>
<p>依照如上测试结果可以看出在 ARM 指令集下一次 yield 基本耗费一个时钟周期，但是一次 isb 需要 20-30 个时钟周期，而在intel Skylate 下一次Pause 需要140个时钟周期</p>
<p>所以MySQL 的 <a href="https://bugs.mysql.com/bug.php?id=100664#:~:text=better%20user%20experience.-,isb,-%3A%0AThe%20pause%20instruction" target="_blank" rel="noopener noreferrer">aarch64 版本在2020年也终于进行了改进</a></p>
<h2 id="参考文章" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%ab%a0" class="header-mark"></a>参考文章</h2><p><a href="https://cloud.tencent.com/developer/article/1005284" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1005284</a></p>
<p><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-spin_lock_polling.html" target="_blank" rel="noopener noreferrer">mysql doc</a></p>
<p><a href="http://oliveryang.net/2018/01/cache-false-sharing-debug" target="_blank" rel="noopener noreferrer">Cache Line 伪共享发现与优化</a></p>
<p><a href="https://en.wikichip.org/w/images/e/eb/intel-ref-248966-037.pdf" target="_blank" rel="noopener noreferrer">intel spec</a></p>
<p><a href="https://mp.weixin.qq.com/s/dlKC13i9Z8wjDDiU2tig6Q" target="_blank" rel="noopener noreferrer">Intel PAUSE指令变化影响到MySQL的性能，该如何解决？</a></p>
<p><a href="https://topic.atatech.org/articles/173194" target="_blank" rel="noopener noreferrer">ARM软硬件协同设计：锁优化</a>, arm不同于x86，用的是yield、ISB 来代替Pause</p>
<p><a href="http://cr.openjdk.java.net/~dchuyko/8186670/yield/spinwait.html" target="_blank" rel="noopener noreferrer">http://cr.openjdk.java.net/~dchuyko/8186670/yield/spinwait.html</a></p>
<p><a href="https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/" target="_blank" rel="noopener noreferrer">https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</a> Windows+.NET 平台下的分析过程及修复方案</p>
]]></description>
</item><item>
    <title>Intel PAUSE指令变化是如何影响自旋锁以及MySQL的性能的</title>
    <link>http://localhost:1313/posts/intel-pause%E6%8C%87%E4%BB%A4%E5%8F%98%E5%8C%96%E6%98%AF%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8D%E8%87%AA%E6%97%8B%E9%94%81%E4%BB%A5%E5%8F%8Amysql%E7%9A%84%E6%80%A7%E8%83%BD%E7%9A%84/</link>
    <pubDate>Mon, 16 Dec 2019 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/intel-pause%E6%8C%87%E4%BB%A4%E5%8F%98%E5%8C%96%E6%98%AF%E5%A6%82%E4%BD%95%E5%BD%B1%E5%93%8D%E8%87%AA%E6%97%8B%E9%94%81%E4%BB%A5%E5%8F%8Amysql%E7%9A%84%E6%80%A7%E8%83%BD%E7%9A%84/</guid>
    <description><![CDATA[<h1 id="intel-pause指令变化如何影响mysql的性能" class="headerLink">
    <a href="#intel-pause%e6%8c%87%e4%bb%a4%e5%8f%98%e5%8c%96%e5%a6%82%e4%bd%95%e5%bd%b1%e5%93%8dmysql%e7%9a%84%e6%80%a7%e8%83%bd" class="header-mark"></a>Intel PAUSE指令变化如何影响MySQL的性能</h1><h2 id="导读" class="headerLink">
    <a href="#%e5%af%bc%e8%af%bb" class="header-mark"></a>导读</h2><p>x86、arm指令都很多，无论是应用程序员还是数据库内核研发大多时候都不需要对这些指令深入理解，但是 Pause 指令和数据库操作太紧密了，本文通过一次非常有趣的性能优化来引入对 Pause 指令的理解，期望可以事半功倍地搞清楚 CPU指令集是如何影响你的程序的。</p>
<p>文章分成两大部分，第一部分是 MySQL 集群的一次全表扫描性能优化过程； 第二部分是问题解决后的原理分析以及Pause指令的来龙去脉和优缺点以及应用场景分析。</p>
<h2 id="业务结构" class="headerLink">
    <a href="#%e4%b8%9a%e5%8a%a1%e7%bb%93%e6%9e%84" class="header-mark"></a>业务结构</h2><p>为理解方便做了部分简化：</p>
<p>client -&gt; Tomcat -&gt; LVS -&gt; MySQL（32 个 MySQLD实例集群，每个实例8Core）</p>
<h2 id="场景描述" class="headerLink">
    <a href="#%e5%9c%ba%e6%99%af%e6%8f%8f%e8%bf%b0" class="header-mark"></a>场景描述</h2><p>通过 client 压 Tomcat 和 MySQL 集群（对数据做分库分表），MySQL 集群是32个实例，每个业务 SQL 都需要经过 Tomcat 拆分成 256 个 SQL 发送给 32 个MySQL（每个MySQL上有8个分库），这 256 条下发给 MySQL 的 SQL 不是完全串行，但也不是完全并行，有一定的并行性。</p>
<p>业务 SQL 如下是一个简单的select sum求和，这个 SQL在每个MySQL上都很快（有索引）</p>
<pre><code>SELECT SUM(emp_arr_amt) FROM table_c WHERE INSUTYPE='310' AND Revs_Flag='Z' AND accrym='201910' AND emp_no='1050457';
</code></pre>
<h2 id="监控指标说明" class="headerLink">
    <a href="#%e7%9b%91%e6%8e%a7%e6%8c%87%e6%a0%87%e8%af%b4%e6%98%8e" class="header-mark"></a>监控指标说明</h2><ul>
<li>后述或者截图中的逻辑RT/QPS是指 client 上看到的Tomcat的 RT 和 QPS；</li>
<li>RT ：response time 请求响应时间，判断性能瓶颈的唯一指标;</li>
<li>物理RT/QPS是指Tomcat看到的MySQL  RT 和QPS（这里的 RT 是指到达Tomcat节点网卡的 RT ，所以还包含了网络消耗）</li>
</ul>
<h2 id="问题描述" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0" class="header-mark"></a>问题描述：</h2><p>通过client压一个Tomcat节点+32个MySQL，QPS大概是430，Tomcat节点CPU跑满，MySQL  RT 是0.5ms，增加一个Tomcat节点，QPS大概是700，Tomcat CPU接近跑满，MySQL  RT 是0.6ms，到这里性能基本随着扩容线性增加，是符合预期的。</p>
<p>继续增加Tomcat节点来横向扩容性能，通过client压三个Tomcat节点+32个MySQL，QPS还是700，Tomcat节点CPU跑不满，MySQL  RT 是0.8ms，这就严重不符合预期了。</p>
<p>性能压测原则：</p>
<blockquote>
  <p>加并发QPS不再上升说明到了某个瓶颈，哪个环节RT增加最多瓶颈就在哪里</p>

</blockquote><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221026145848312.png   alt="image-20221026145848312"  ></p>
<p><strong>到这里一切都还是符合我们的经验的，看起来就是 MySQL 有瓶颈（RT 增加明显）。</strong></p>
<h2 id="排查-mysql" class="headerLink">
    <a href="#%e6%8e%92%e6%9f%a5-mysql" class="header-mark"></a>排查 MySQL</h2><p>现场DBA通过监控看到MySQL CPU不到20%，没有慢查询，并且尝试用client越过所有中间环节直接压其中一个MySQL，可以将 MySQL CPU 跑满，这时的QPS大概是38000（对应上面的场景client QPS为700的时候，单个MySQL上的QPS才跑到6000) 所以排除了MySQL的嫌疑(这个推理不够严谨为后面排查埋下了大坑)。</p>
<p>那么接下来的嫌疑在网络、LVS 等中间环节上。</p>
<h2 id="lvs和网络的嫌疑" class="headerLink">
    <a href="#lvs%e5%92%8c%e7%bd%91%e7%bb%9c%e7%9a%84%e5%ab%8c%e7%96%91" class="header-mark"></a>LVS和网络的嫌疑</h2><p>首先通过大查询排除了带宽的问题，因为这里都是小包，pps到了72万，很自然想到了网关、LVS的限流之类的</p>
<p>pps监控，这台物理机有4个MySQL实例上，pps 9万左右，9*32/4=72万
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/b84245c17e213de528f2ad8090d504f6.png   alt="image.png"  ></p>
<p>…………（省略巨长的分析、拉人、扯皮过程）</p>
<p>最终所有网络因素都被排除，核心证据是：做压测的时候反复从 Tomcat 上 ping 后面的MySQL，RT 跟没有压力的时候一样，也说明了网络没有问题(请思考这个 ping 的作用)。</p>
<h2 id="问题的确认" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e7%9a%84%e7%a1%ae%e8%ae%a4" class="header-mark"></a>问题的确认</h2><p>尝试在Tomcat上打开日志，并将慢 SQL 阈值设置为100ms，这个时候确实能从日志中看到大量MySQL上的慢查询，因为这个SQL需要在Tomcat上做拆分成256个SQL，同时下发，一旦有一个SQL返回慢，整个请求就因为这个短板被拖累了。平均 RT  0.8ms，但是经常有超过100ms的话对整体影响还是很大的。</p>
<p>将Tomcat记录下来的慢查询（Tomcat增加了一个唯一id下发给MySQL）到MySQL日志中查找，果然发现MySQL上确实慢了，所以到这里基本确认是MySQL的问题，终于不用再纠结是否是网络问题了。</p>
<p>同时在Tomcat进行抓包，对网卡上的 RT 进行统计分析：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/ffd66d9a6098979b555dfb00d3494255.png   alt="image.png"  ></p>
<p>上是Tomcat上抓到的每个sql的物理RT 平均值，上面是QPS 430的时候， RT  0.6ms，下面是3个server，QPS为700，但是 RT 上升到了0.9ms，基本跟Tomcat监控记录到的物理RT一致。如果MySQL上也有类似抓包计算 RT 时间的话可以快速排除网络问题。</p>
<p>网络抓包得到的 RT 数据更容易被所有人接受。尝试过在MySQL上抓包，但是因为LVS模块的原因，进出端口、ip都被修改过，所以没法分析一个流的响应时间。</p>
<h2 id="重心再次转向mysql" class="headerLink">
    <a href="#%e9%87%8d%e5%bf%83%e5%86%8d%e6%ac%a1%e8%bd%ac%e5%90%91mysql" class="header-mark"></a>重心再次转向MySQL</h2><p>这个时候因为问题点基本确认，再去查看MySQL是否有问题的重心都不一样了，不再只是看看CPU和慢查询，这个问题明显更复杂一些。</p>
<blockquote>
  <p>教训：CPU只是影响性能的一个因素，RT 才是结果，要追着 RT 跑，而不是只看 CPU</p>

</blockquote><p>通过监控发现MySQL CPU虽然一直不高，但是经常看到running thread飙到100多，很快又降下去了，看起来像是突发性的并发查询请求太多导致了排队等待，每个MySQL实例是8Core的CPU，尝试将MySQL实例扩容到16Core（只是为了验证这个问题），QPS确实可以上升到1000（没有到达理想的1400）。</p>
<p>这是Tomcat上监控到的MySQL状态：
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/e73c1371a02106a52f8a13f89a9dd9ad.png   alt="image.png"  ></p>
<p>同时在MySQL机器上通过vmstat也可以看到这种飙升：
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/4dbd9dff9deacec0e9911e3a7d025578.png   alt="image.png"  ></p>
<p>以上分析可以清晰看到虽然 MySQL 整体压力不大，但是似乎会偶尔来一波卡顿、running 任务飙升。</p>
<p>像这种短暂突发性的并发流量似乎监控都很难看到（基本都被平均掉了），只有一些实时性监控偶尔会采集到这种短暂突发性飙升，这也导致了一开始忽视了MySQL。</p>
<p>所以接下来的核心问题就是MySQL为什么会有这种飙升、这种飙升的影响到底是什么？</p>
<h2 id="perf-top" class="headerLink">
    <a href="#perf-top" class="header-mark"></a>perf top</h2><p>直接用 perf 看下 MySQLD 进程，发现 ut_delay 高得不符合逻辑：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/cd145c494c074e01e9d2d1d5583a87a0.png   alt="image.png"  ></p>
<p>展开看一下，基本是在优化器中做索引命中行数的选择：</p>
<!-- raw HTML omitted -->
<p>跟直接在 MySQL 命令行中通过 show processlist看到的基本一致：</p>
<!-- raw HTML omitted -->
<p>这是 MySQL 的优化器在对索引进行统计，统计的时候要加锁，thread running 抖动的时候通过 show processlist 看到很多 thread处于 statistics 状态。也就是高并发下加锁影响了 CPU 压不上去同时 RT 剧烈增加。</p>
<p>这里ut_delay 消耗了 28% 的 CPU 肯定太不正常了，于是将 innodb_spin_wait_delay 从 30 改成 6 后性能立即上去了，继续增加 Tomcat 节点，QPS也可以线性增加。</p>
<blockquote>
  <p>耗CPU最高的调用函数栈是…<code>mutex_spin_wait</code>-&gt;<code>ut_delay</code>，属于锁等待的逻辑。InnoDB在这里用的是自旋锁，锁等待是通过调用 ut_delay 让 CPU做空循环在等锁的时候不释放CPU从而避免上下文切换，会消耗比较高的CPU。</p>

</blockquote><h2 id="最终的性能" class="headerLink">
    <a href="#%e6%9c%80%e7%bb%88%e7%9a%84%e6%80%a7%e8%83%bd" class="header-mark"></a>最终的性能</h2><p>调整参数 innodb_spin_wait_delay=6 后在4个Tomcat节点下，并发40时，QPS跑到了1700，物理RT：0.7，逻辑RT：19.6，cpu：90%，这个时候只需要继续扩容 Tomcat 节点的数量就可以增加QPS
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/48c976f989747266f9892403794996c0.png   alt="image.png"  ></p>
<p>再跟调整前比较一下，innodb_spin_wait_delay=30，并发40时，QPS 500+，物理RT：2.6ms 逻辑RT：72.1ms cpu：37%
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/fdb459972926cff371f5f5ab703790bb.png   alt="image.png"  ></p>
<p>再看看调整前压测的时候的vmstat和tsar &ndash;cpu，可以看到process running抖动明显
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/4dbd9dff9deacec0e9911e3a7d025578.png   alt="image.png"  ></p>
<p>对比修改delay后的process running就很稳定了，即使QPS大了3倍
<img class="tw-inline" loading="lazy" src=http://localhost:1313/images/oss/ed46d35161ea28352acd4289a3e9ddad.png   alt="image.png"  ></p>
<h2 id="事后思考和分析" class="headerLink">
    <a href="#%e4%ba%8b%e5%90%8e%e6%80%9d%e8%80%83%e5%92%8c%e5%88%86%e6%9e%90" class="header-mark"></a>事后思考和分析</h2><p>到这里问题得到了完美解决，但是不禁要问为什么？ut_delay 是怎么工作的？ 和 innodb_spin_wait_delay 以及自旋锁的关系？</p>
<h2 id="原理解析" class="headerLink">
    <a href="#%e5%8e%9f%e7%90%86%e8%a7%a3%e6%9e%90" class="header-mark"></a>原理解析</h2><p>既然调整 innodb_spin_wait_delay 就能解决这个问题，那就要先分析一下 innodb_spin_wait_delay 的作用</p>
<h3 id="关于-innodb_spin_wait_delay" class="headerLink">
    <a href="#%e5%85%b3%e4%ba%8e-innodb_spin_wait_delay" class="header-mark"></a>关于 innodb_spin_wait_delay</h3><p>innodb通过大量的自旋锁(比如 <code>InnoDB</code> <a href="https://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_mutex" target="_blank" rel="noopener noreferrer">mutexes</a> and <a href="https://dev.mysql.com/doc/refman/5.7/en/glossary.html#glos_rw_lock" target="_blank" rel="noopener noreferrer">rw-locks</a>)来用高CPU消耗避免上下文切换，这是自旋锁的正确使用方式，在多核场景下，它们一起自旋抢同一个锁，容易造成<a href="https://stackoverflow.com/questions/30684974/are-cache-line-ping-pong-and-false-sharing-the-same" target="_blank" rel="noopener noreferrer">cache ping-pong</a>，进而多个CPU核之间会互相使对方缓存部分无效。所以这里<a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-spin_lock_polling.html" target="_blank" rel="noopener noreferrer">innodb通过增加 innodb_spin_wait_delay 和 Pause 配合来缓解cache ping-pong</a>，也就是本来通过CPU 高速自旋抢锁，换成了抢锁失败后 delay一下（Pause）但是不释放CPU，delay 时间到后继续抢锁，也就是把连续的自旋抢锁转换成了更稀疏的点状的抢锁（间隔的 delay是个随机数），这样不但避免了上下文切换也大大减少了cache ping-pong。</p>
<h3 id="自旋锁如何减少了cache-ping-pong" class="headerLink">
    <a href="#%e8%87%aa%e6%97%8b%e9%94%81%e5%a6%82%e4%bd%95%e5%87%8f%e5%b0%91%e4%ba%86cache-ping-pong" class="header-mark"></a>自旋锁如何减少了cache ping-pong</h3><p>多线程竞争锁的时候，加锁失败的线程会“忙等待”，直到它拿到锁。什么叫“忙等待”呢？它并不意味着一直执行 CAS 函数，而是会与 CPU 紧密配合 ，它通过 CPU 提供的 <code>PAUSE</code> 指令，减少循环等待时的cache ping-pong和耗电量；对于单核 CPU，忙等待并没有意义，此时它会主动把线程休眠。</p>
<h3 id="x86-pause-指令" class="headerLink">
    <a href="#x86-pause-%e6%8c%87%e4%bb%a4" class="header-mark"></a>X86 PAUSE 指令</h3><p>X86设计了Pause指令，也就是调用 Pause 指令的代码会抢着 CPU 不释放，但是CPU 会打个盹，比如 10个时钟周期，相对一次上下文切换是大几千个时钟周期。</p>
<p>这样应用一旦自旋抢锁失败可以先 Pause 一下，只是这个Pause 时间对于 MySQL 来说还不够久，所以需要增加参数 innodb_spin_wait_delay 来将休息时间放大一些。</p>
<p>在我们的这个场景下对每个 SQL的 RT 抖动非常敏感（放大256倍），所以过高的 delay 会导致部分SQL  RT  变高。</p>
<p>函数 ut_delay(ut_rnd_interval(0, srv_spin_wait_delay)) 用来执行这个delay：</p>
<pre><code>/***************************MySQL代码****************************//**
Runs an idle loop on CPU. The argument gives the desired delay
in microseconds on 100 MHz Pentium + Visual C++.
@return dummy value */
UNIV_INTERN
ulint
ut_delay(ulint delay)  //delay 是[0,innodb_spin_wait_delay)之间的一个随机数
{
        ulint   i, j;

        UT_LOW_PRIORITY_CPU();

        j = 0;

        for (i = 0; i &lt; delay * 50; i++) {  //delay 放大50倍
                j += i;
                UT_RELAX_CPU();             //调用 CPU Pause
        }

        UT_RESUME_PRIORITY_CPU();

        return(j);
}
</code></pre>
<p>innodb_spin_wait_delay的默认值为6. spin 等待延迟是一个动态全局参数，您可以在MySQL选项文件（my.cnf或my.ini）中指定该参数，或者在运行时使用SET GLOBAL 来修改。在我们的MySQL配置中默认改成了30，导致了这个问题。</p>
<h3 id="cpu-为什么要有pause" class="headerLink">
    <a href="#cpu-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e6%9c%89pause" class="header-mark"></a>CPU 为什么要有Pause</h3><p>首先可以看到 Pause 指令的作用：</p>
<ul>
<li>避免上下文切换，应用层想要休息可能会用yield、sleep，这两操作对于CPU来说太重了(伴随上下文切换)</li>
<li>能给超线程腾出计算能力（HT共享核，但是有单独的寄存器等存储单元，CPU Pause的时候，对应的HT可以占用计算资源），比如同一个core上先跑多个Pause，同时再跑 nop 指令，这时 nop指令的 IPC基本不受Pause的影响</li>
<li>节能（CPU可以休息、但是不让出来），CPU Pause 的时候你从 top 能看到 CPU 100%，但是不耗能。</li>
</ul>
<p>所以有了 Pause 指令后能够提高超线程的利用率,节能，减少上下文切换提高自旋锁的效率。</p>
<blockquote>
  <p><a href="https://www.reddit.com/r/intel/comments/hogk2n/research_on_the_impact_of_intel_Pause_instruction/" target="_blank" rel="noopener noreferrer">The PAUSE instruction is first introduced</a> for Intel Pentium 4 processor to improve the performance of “spin-wait loop”. The PAUSE instruction is typically used with software threads executing on two logical processors located in the same processor core, waiting for a lock to be released. Such short wait loops tend to last between tens and a few hundreds of cycles. When the wait loop is expected to last for thousands of cycles or more, it is preferable to yield to the operating system by calling one of the OS synchronization API functions, such as WaitForSingleObject on Windows OS.</p>
<p>An Intel® processor suffers a severe performance penalty when exiting the loop because it detects a possible memory order violation. The PAUSE instruction provides a hint to the processor that the code sequence is a spin-wait loop. The processor uses this hint to avoid the memory order violation in most situations. The PAUSE instruction can improve the performance of the processors supporting Intel Hyper-Threading Technology when executing “spin-wait loops”. With Pause instruction, processors are able to avoid the memory order violation and pipeline flush, and reduce power consumption through pipeline stall.</p>

</blockquote><p><strong>从intel sdm手册以及实际测试验证来看，Pause 指令在执行过程中，基本不占用流水线执行资源。</strong></p>
<h3 id="skylake-架构的8163-和-broadwell架构-e5-2682-cpu型号的不同" class="headerLink">
    <a href="#skylake-%e6%9e%b6%e6%9e%84%e7%9a%848163-%e5%92%8c-broadwell%e6%9e%b6%e6%9e%84-e5-2682-cpu%e5%9e%8b%e5%8f%b7%e7%9a%84%e4%b8%8d%e5%90%8c" class="header-mark"></a>Skylake 架构的8163 和 Broadwell架构 E5-2682 CPU型号的不同</h3><p>为什么用得好好的 innodb_spin_wait_delay 参数这次就不行了呢？</p>
<p>这是因为以前业务一直使用的是 E5-2682 CPU，这次用的是新一代架构的 Skylake 8163，那这两款CPU在这里的核心差别是？</p>
<p>在Intel 64-ia-32-architectures-optimization-manual手册中提到：</p>
<blockquote>
  <p>The latency of the PAUSE instruction in prior generation microarchitectures is about 10 cycles, whereas in Skylake microarchitecture it has been extended to as many as 140 cycles.</p>
<p><a href="https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol3/o_fe12b1e2a880e0ce-302.html" target="_blank" rel="noopener noreferrer">The PAUSE instruction can improves the performance</a> of processors supporting Intel Hyper-Threading Technology when executing “spin-wait loops” and other routines where one thread is accessing a shared lock or semaphore in a tight polling loop. When executing a spin-wait loop, the processor can suffer a severe performance penalty when exiting the loop because it detects a possible memory order violation and flushes the core processor’s pipeline. The PAUSE instruction provides a hint to the processor that the code sequence is a spin-wait loop. The processor uses this hint to avoid the memory order violation and prevent the pipeline flush. In addition, the PAUSE instruction de-
pipelines the spin-wait loop to prevent it from consuming execution resources excessively and consume power needlessly. (See<a href="https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol3/o_fe12b1e2a880e0ce-305.html" target="_blank" rel="noopener noreferrer"> Section 8.10.6.1, “Use the PAUSE Instruction in Spin-Wait Loops,” for more </a>information about using the PAUSE instruction with IA-32 processors supporting Intel Hyper-Threading Technology.)</p>

</blockquote><p>也就是**Skylake架构的CPU的PAUSE指令从之前的10 cycles 改成了 140 cycles。**这可是14倍的变化呀。</p>
<p>MySQL 使用 innodb_spin_wait_delay 控制 spin lock等待时间，等待时间时间从0*50个Pause到innodb_spin_wait_delay*50个Pause。
以前 innodb_spin_wait_delay 默认配置30，对于E5-2682 CPU，等待的最长时间为：
30 * 50 * 10=15000 cycles，对于2.5GHz的CPU，等待时间为6us。
对应计算 Skylake CPU的等待时间：30 *50 *140=210000 cycles，CPU主频也是2.5GHz，等待时间84us。</p>
<p>E5-2682 CPU型号在不同的delay参数和不同并发压力下的写入性能数据：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221026153750159.png   alt="image-20221026153750159"  ></p>
<p>Skylake 8163 CPU型号在不同的delay参数和不同并发压力下的写入性能数据：</p>
<p><img class="tw-inline" loading="lazy" src=http://localhost:1313/images/951413iMgBlog/image-20221026153813774.png   alt="image-20221026153813774"  ></p>
<p>==因为8163的cycles从10改到了140，所以可以看到delay参数对性能的影响更加陡峻。==</p>
<h2 id="总结分析" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93%e5%88%86%e6%9e%90" class="header-mark"></a>总结分析</h2><p>Intel CPU 架构不同使得 Pause 指令的CPU Cycles不同导致了 MySQL innodb_spin_wait_delay 在 spin lock 失败的时候（此时需要 Pause* innodb_spin_wait_delay*N）delay更久，使得调用方看到了MySQL更大的 RT ，进而导致 Tomcat Server上业务并发跑不起来，所以最终压力上不去。</p>
<p>在长链路的排查中，细化定位是哪个节点出了问题是最难的，要盯住 RT 而不是 CPU。</p>
<p>欲速则不达，做压测的时候还是要老老实实地从一个并发开始观察QPS、 RT ，然后一直增加压力到压不上去了，再看QPS、 RT 变化，然后确认瓶颈点。</p>
<h2 id="参考文章" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83%e6%96%87%e7%ab%a0" class="header-mark"></a>参考文章</h2><p><a href="https://cloud.tencent.com/developer/article/1005284" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1005284</a></p>
<p><a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-spin_lock_polling.html" target="_blank" rel="noopener noreferrer">mysql doc</a></p>
<p><a href="http://oliveryang.net/2018/01/cache-false-sharing-debug" target="_blank" rel="noopener noreferrer">Cache Line 伪共享发现与优化</a></p>
<p><a href="https://en.wikichip.org/w/images/e/eb/intel-ref-248966-037.pdf" target="_blank" rel="noopener noreferrer">intel spec</a></p>
<p><a href="https://mp.weixin.qq.com/s/dlKC13i9Z8wjDDiU2tig6Q" target="_blank" rel="noopener noreferrer">Intel PAUSE指令变化影响到MySQL的性能，该如何解决？</a></p>
<p><a href="https://topic.atatech.org/articles/173194" target="_blank" rel="noopener noreferrer">ARM软硬件协同设计：锁优化</a>, arm不同于x86，用的是yield来代替Pause</p>
<p><a href="http://cr.openjdk.java.net/~dchuyko/8186670/yield/spinwait.html" target="_blank" rel="noopener noreferrer">http://cr.openjdk.java.net/~dchuyko/8186670/yield/spinwait.html</a></p>
<p><a href="https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/" target="_blank" rel="noopener noreferrer">https://aloiskraus.wordpress.com/2018/06/16/why-skylakex-cpus-are-sometimes-50-slower-how-intel-has-broken-existing-code/</a> Windows+.NET 平台下的分析过程及修复方案</p>
]]></description>
</item><item>
    <title>双11全链路压测中通过Perf发现的一个SpringMVC 的性能问题</title>
    <link>http://localhost:1313/posts/%E4%BC%98%E9%85%B7%E5%8F%8C11%E5%85%A8%E9%93%BE%E8%B7%AF%E5%8E%8B%E6%B5%8B%E4%B8%AD%E9%80%9A%E8%BF%87perf%E5%8F%91%E7%8E%B0%E7%9A%84%E4%B8%80%E4%B8%AAspringmvc-%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 26 Jul 2018 16:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E4%BC%98%E9%85%B7%E5%8F%8C11%E5%85%A8%E9%93%BE%E8%B7%AF%E5%8E%8B%E6%B5%8B%E4%B8%AD%E9%80%9A%E8%BF%87perf%E5%8F%91%E7%8E%B0%E7%9A%84%E4%B8%80%E4%B8%AAspringmvc-%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[<h1 id="双11全链路压测中通过perf发现的一个springmvc-的性能问题" class="headerLink">
    <a href="#%e5%8f%8c11%e5%85%a8%e9%93%be%e8%b7%af%e5%8e%8b%e6%b5%8b%e4%b8%ad%e9%80%9a%e8%bf%87perf%e5%8f%91%e7%8e%b0%e7%9a%84%e4%b8%80%e4%b8%aaspringmvc-%e7%9a%84%e6%80%a7%e8%83%bd%e9%97%ae%e9%a2%98" class="header-mark"></a>双11全链路压测中通过Perf发现的一个SpringMVC 的性能问题</h1><blockquote>
  <p>在最近的全链路压测中TPS不够理想，然后通过perf 工具（perf record 采样， perf report 展示）看到(可以点击看大图)：</p>

</blockquote><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/b5610fa7e994b1e4578d38347a1478a7   alt="screenshot"  ></p>
<h2 id="再来看cpu消耗的火焰图" class="headerLink">
    <a href="#%e5%86%8d%e6%9d%a5%e7%9c%8bcpu%e6%b6%88%e8%80%97%e7%9a%84%e7%81%ab%e7%84%b0%e5%9b%be" class="header-mark"></a>再来看CPU消耗的火焰图：</h2><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/d228b47200f56fbbf5aadf0da56cbf15   alt="screenshot"  ></p>
<p>图中CPU的消耗占21%，不太正常。</p>
<blockquote>
  <p>可以看到Spring框架消耗了比较多的CPU，具体原因就是在Spring MVC中会大量使用到
@RequestMapping
@PathVariable
带来使用上的便利</p>

</blockquote><h2 id="业务方修改代码去掉spring中的methodmapping解析后的结果性能提升了40" class="headerLink">
    <a href="#%e4%b8%9a%e5%8a%a1%e6%96%b9%e4%bf%ae%e6%94%b9%e4%bb%a3%e7%a0%81%e5%8e%bb%e6%8e%89spring%e4%b8%ad%e7%9a%84methodmapping%e8%a7%a3%e6%9e%90%e5%90%8e%e7%9a%84%e7%bb%93%e6%9e%9c%e6%80%a7%e8%83%bd%e6%8f%90%e5%8d%87%e4%ba%8640" class="header-mark"></a>业务方修改代码去掉spring中的methodMapping解析后的结果（性能提升了40%）：</h2><p><img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/a97e6f1da93173055b1385eebba8e327.png   alt="screenshot.png"  ></p>
<p>图中核心业务逻辑能抢到的cpu是21%（之前是15%）。spring methodMapping相关的也在火焰图中找不到了</p>
<h3 id="spring收到请求url后要取出请求变量和做业务运算具体代码对照第一个图的调用堆栈" class="headerLink">
    <a href="#spring%e6%94%b6%e5%88%b0%e8%af%b7%e6%b1%82url%e5%90%8e%e8%a6%81%e5%8f%96%e5%87%ba%e8%af%b7%e6%b1%82%e5%8f%98%e9%87%8f%e5%92%8c%e5%81%9a%e4%b8%9a%e5%8a%a1%e8%bf%90%e7%ae%97%e5%85%b7%e4%bd%93%e4%bb%a3%e7%a0%81%e5%af%b9%e7%85%a7%e7%ac%ac%e4%b8%80%e4%b8%aa%e5%9b%be%e7%9a%84%e8%b0%83%e7%94%a8%e5%a0%86%e6%a0%88" class="header-mark"></a>Spring收到请求URL后要取出请求变量和做业务运算，具体代码(对照第一个图的调用堆栈）：</h3><div class="code-block highlight is-open show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-1" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">170	public RequestMappingInfo More ...getMatchingCondition(HttpServletRequest request) {
</span></span><span class="line"><span class="cl">171		RequestMethodsRequestCondition methods = methodsCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">172		ParamsRequestCondition params = paramsCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">173		HeadersRequestCondition headers = headersCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">174		ConsumesRequestCondition consumes = consumesCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">175		ProducesRequestCondition produces = producesCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">176
</span></span><span class="line"><span class="cl">177		if (methods == null || params == null || headers == null || consumes == null || produces == null) {
</span></span><span class="line"><span class="cl">178			return null;
</span></span><span class="line"><span class="cl">179		}
</span></span><span class="line"><span class="cl">180
</span></span><span class="line"><span class="cl">181		PatternsRequestCondition patterns = patternsCondition.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">182		if (patterns == null) {
</span></span><span class="line"><span class="cl">183			return null;
</span></span><span class="line"><span class="cl">184		}
</span></span><span class="line"><span class="cl">185
</span></span><span class="line"><span class="cl">186		RequestConditionHolder custom = customConditionHolder.getMatchingCondition(request);
</span></span><span class="line"><span class="cl">187		if (custom == null) {
</span></span><span class="line"><span class="cl">188			return null;
</span></span><span class="line"><span class="cl">189		}
</span></span><span class="line"><span class="cl">190
</span></span><span class="line"><span class="cl">191		return new RequestMappingInfo(patterns, methods, params, headers, consumes, produces, custom.getCondition());
</span></span><span class="line"><span class="cl">192	}</span></span></code></pre>
</div>
<h3 id="domatch-代码" class="headerLink">
    <a href="#domatch-%e4%bb%a3%e7%a0%81" class="header-mark"></a>doMatch 代码：</h3><div class="code-block highlight is-closed show-line-numbers  tw-group tw-my-2">
  <div class="
    code-block-title 
    
    tw-flex 
    tw-flex-row 
    tw-justify-between 
    tw-w-full tw-bg-bgColor-secondary
    ">      
    <button 
      class="
        tw-select-none 
        tw-mx-2 
        tw-block
        group-[.is-open]:tw-rotate-90
        tw-transition-[transform] 
        tw-duration-500 
        tw-ease-in-out
        print:!tw-hidden"
      disabled
      aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z"/></svg></button>

    <div class="code-block-title-bar tw-w-full">
      <p class="tw-select-none !tw-my-1">text</p>
    </div>
    <div class="tw-flex">
      <button 
        class="
          line-number-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.show-line-numbers]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle line numbers"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M61.77 401l17.5-20.15a19.92 19.92 0 0 0 5.07-14.19v-3.31C84.34 356 80.5 352 73 352H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8h22.83a157.41 157.41 0 0 0-11 12.31l-5.61 7c-4 5.07-5.25 10.13-2.8 14.88l1.05 1.93c3 5.76 6.29 7.88 12.25 7.88h4.73c10.33 0 15.94 2.44 15.94 9.09 0 4.72-4.2 8.22-14.36 8.22a41.54 41.54 0 0 1-15.47-3.12c-6.49-3.88-11.74-3.5-15.6 3.12l-5.59 9.31c-3.72 6.13-3.19 11.72 2.63 15.94 7.71 4.69 20.38 9.44 37 9.44 34.16 0 48.5-22.75 48.5-44.12-.03-14.38-9.12-29.76-28.73-34.88zM496 224H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm0-160H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16V80a16 16 0 0 0-16-16zm0 320H176a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h320a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h64a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H64V40a8 8 0 0 0-8-8H32a8 8 0 0 0-7.14 4.42l-8 16A8 8 0 0 0 24 64h8v64H16a8 8 0 0 0-8 8v16a8 8 0 0 0 8 8zm-3.91 160H80a8 8 0 0 0 8-8v-16a8 8 0 0 0-8-8H41.32c3.29-10.29 48.34-18.68 48.34-56.44 0-29.06-25-39.56-44.47-39.56-21.36 0-33.8 10-40.46 18.75-4.37 5.59-3 10.84 2.8 15.37l8.58 6.88c5.61 4.56 11 2.47 16.12-2.44a13.44 13.44 0 0 1 9.46-3.84c3.33 0 9.28 1.56 9.28 8.75C51 248.19 0 257.31 0 304.59v4C0 316 5.08 320 12.09 320z"/></svg></button>

      <button 
        class="
          wrap-code-button
          tw-select-none 
          tw-mx-2 
          tw-hidden 
          group-[.is-open]:tw-block 
          group-[.is-wrap]:tw-text-fgColor-link 
          print:!tw-hidden" 
        title="Toggle code wrap"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z"/></svg></button>
      
      <button 
        class="
          copy-code-button
          tw-select-none
          tw-mx-2 
          tw-hidden
          group-[.is-open]:tw-block
          hover:tw-text-fgColor-link 
          print:!tw-hidden"
        title="Copy code">
          <span class="copy-icon tw-block"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z"/></svg></span>
          <span class="check-icon tw-hidden"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"/></svg></span>
      </button>
        
      <button 
        class="
          tw-select-none 
          tw-mx-2 
          tw-block 
          group-[.is-open]:tw-hidden 
          print:!tw-hidden" 
        disabled
        aria-hidden="true"><svg class="icon"
    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z"/></svg></button>
    </div>
  </div>
  <pre style="counter-reset: codeblock;" class="tw-block tw-m-0 tw-p-0"><code 
    id="codeblock-id-2" 
    class="
      chroma 
      !tw-block 
      tw-p-0
      tw-m-0
      tw-transition-[max-height] 
      tw-duration-500 
      tw-ease-in-out 
      group-[.is-closed]:!tw-max-h-0 
      group-[.is-wrap]:tw-text-wrap
      tw-overflow-y-hidden
      tw-overflow-x-auto
      tw-scrollbar-thin
      "><span class="line"><span class="cl">96 
</span></span><span class="line"><span class="cl">97 	protected boolean More ...doMatch(String pattern, String path, boolean fullMatch,
</span></span><span class="line"><span class="cl">98 			Map&lt;String, String&gt; uriTemplateVariables) {
</span></span><span class="line"><span class="cl">99 
</span></span><span class="line"><span class="cl">100		if (path.startsWith(this.pathSeparator) != pattern.startsWith(this.pathSeparator)) {
</span></span><span class="line"><span class="cl">101			return false;
</span></span><span class="line"><span class="cl">102		}
</span></span><span class="line"><span class="cl">103
</span></span><span class="line"><span class="cl">104		String[] pattDirs = StringUtils.tokenizeToStringArray(pattern, this.pathSeparator, this.trimTokens, true);
</span></span><span class="line"><span class="cl">105		String[] pathDirs = StringUtils.tokenizeToStringArray(path, this.pathSeparator, this.trimTokens, true);
</span></span><span class="line"><span class="cl">106
</span></span><span class="line"><span class="cl">107		int pattIdxStart = 0;
</span></span><span class="line"><span class="cl">108		int pattIdxEnd = pattDirs.length - 1;
</span></span><span class="line"><span class="cl">109		int pathIdxStart = 0;
</span></span><span class="line"><span class="cl">110		int pathIdxEnd = pathDirs.length - 1;
</span></span><span class="line"><span class="cl">111
</span></span><span class="line"><span class="cl">112		// Match all elements up to the first **
</span></span><span class="line"><span class="cl">113		while (pattIdxStart &lt;= pattIdxEnd &amp;&amp; pathIdxStart &lt;= pathIdxEnd) {
</span></span><span class="line"><span class="cl">114			String patDir = pattDirs[pattIdxStart];
</span></span><span class="line"><span class="cl">115			if (&#34;**&#34;.equals(patDir)) {
</span></span><span class="line"><span class="cl">116				break;
</span></span><span class="line"><span class="cl">117			}
</span></span><span class="line"><span class="cl">118			if (!matchStrings(patDir, pathDirs[pathIdxStart], uriTemplateVariables)) {
</span></span><span class="line"><span class="cl">119				return false;
</span></span><span class="line"><span class="cl">120			}
</span></span><span class="line"><span class="cl">121			pattIdxStart++;
</span></span><span class="line"><span class="cl">122			pathIdxStart++;
</span></span><span class="line"><span class="cl">123		}
</span></span><span class="line"><span class="cl">124
</span></span><span class="line"><span class="cl">125		if (pathIdxStart &gt; pathIdxEnd) {
</span></span><span class="line"><span class="cl">126			// Path is exhausted, only match if rest of pattern is * or **&#39;s
</span></span><span class="line"><span class="cl">127			if (pattIdxStart &gt; pattIdxEnd) {
</span></span><span class="line"><span class="cl">128				return (pattern.endsWith(this.pathSeparator) ? path.endsWith(this.pathSeparator) :
</span></span><span class="line"><span class="cl">129						!path.endsWith(this.pathSeparator));
</span></span><span class="line"><span class="cl">130			}
</span></span><span class="line"><span class="cl">131			if (!fullMatch) {
</span></span><span class="line"><span class="cl">132				return true;
</span></span><span class="line"><span class="cl">133			}
</span></span><span class="line"><span class="cl">134			if (pattIdxStart == pattIdxEnd &amp;&amp; pattDirs[pattIdxStart].equals(&#34;*&#34;) &amp;&amp; path.endsWith(this.pathSeparator)) {
</span></span><span class="line"><span class="cl">135				return true;
</span></span><span class="line"><span class="cl">136			}
</span></span><span class="line"><span class="cl">137			for (int i = pattIdxStart; i &lt;= pattIdxEnd; i++) {
</span></span><span class="line"><span class="cl">138				if (!pattDirs[i].equals(&#34;**&#34;)) {
</span></span><span class="line"><span class="cl">139					return false;
</span></span><span class="line"><span class="cl">140				}
</span></span><span class="line"><span class="cl">141			}
</span></span><span class="line"><span class="cl">142			return true;
</span></span><span class="line"><span class="cl">143		}
</span></span><span class="line"><span class="cl">144		else if (pattIdxStart &gt; pattIdxEnd) {
</span></span><span class="line"><span class="cl">145			// String not exhausted, but pattern is. Failure.
</span></span><span class="line"><span class="cl">146			return false;
</span></span><span class="line"><span class="cl">147		}
</span></span><span class="line"><span class="cl">148		else if (!fullMatch &amp;&amp; &#34;**&#34;.equals(pattDirs[pattIdxStart])) {
</span></span><span class="line"><span class="cl">149			// Path start definitely matches due to &#34;**&#34; part in pattern.
</span></span><span class="line"><span class="cl">150			return true;
</span></span><span class="line"><span class="cl">151		}
</span></span><span class="line"><span class="cl">152
</span></span><span class="line"><span class="cl">153		// up to last &#39;**&#39;
</span></span><span class="line"><span class="cl">154		while (pattIdxStart &lt;= pattIdxEnd &amp;&amp; pathIdxStart &lt;= pathIdxEnd) {
</span></span><span class="line"><span class="cl">155			String patDir = pattDirs[pattIdxEnd];
</span></span><span class="line"><span class="cl">156			if (patDir.equals(&#34;**&#34;)) {
</span></span><span class="line"><span class="cl">157				break;
</span></span><span class="line"><span class="cl">158			}
</span></span><span class="line"><span class="cl">159			if (!matchStrings(patDir, pathDirs[pathIdxEnd], uriTemplateVariables)) {
</span></span><span class="line"><span class="cl">160				return false;
</span></span><span class="line"><span class="cl">161			}
</span></span><span class="line"><span class="cl">162			pattIdxEnd--;
</span></span><span class="line"><span class="cl">163			pathIdxEnd--;
</span></span><span class="line"><span class="cl">164		}
</span></span><span class="line"><span class="cl">165		if (pathIdxStart &gt; pathIdxEnd) {
</span></span><span class="line"><span class="cl">166			// String is exhausted
</span></span><span class="line"><span class="cl">167			for (int i = pattIdxStart; i &lt;= pattIdxEnd; i++) {
</span></span><span class="line"><span class="cl">168				if (!pattDirs[i].equals(&#34;**&#34;)) {
</span></span><span class="line"><span class="cl">169					return false;
</span></span><span class="line"><span class="cl">170				}
</span></span><span class="line"><span class="cl">171			}
</span></span><span class="line"><span class="cl">172			return true;
</span></span><span class="line"><span class="cl">173		}
</span></span><span class="line"><span class="cl">174
</span></span><span class="line"><span class="cl">175		while (pattIdxStart != pattIdxEnd &amp;&amp; pathIdxStart &lt;= pathIdxEnd) {
</span></span><span class="line"><span class="cl">176			int patIdxTmp = -1;
</span></span><span class="line"><span class="cl">177			for (int i = pattIdxStart + 1; i &lt;= pattIdxEnd; i++) {
</span></span><span class="line"><span class="cl">178				if (pattDirs[i].equals(&#34;**&#34;)) {
</span></span><span class="line"><span class="cl">179					patIdxTmp = i;
</span></span><span class="line"><span class="cl">180					break;
</span></span><span class="line"><span class="cl">181				}
</span></span><span class="line"><span class="cl">182			}
</span></span><span class="line"><span class="cl">183			if (patIdxTmp == pattIdxStart + 1) {
</span></span><span class="line"><span class="cl">184				// &#39;**/**&#39; situation, so skip one
</span></span><span class="line"><span class="cl">185				pattIdxStart++;
</span></span><span class="line"><span class="cl">186				continue;
</span></span><span class="line"><span class="cl">187			}
</span></span><span class="line"><span class="cl">188			// Find the pattern between padIdxStart &amp; padIdxTmp in str between
</span></span><span class="line"><span class="cl">189			// strIdxStart &amp; strIdxEnd
</span></span><span class="line"><span class="cl">190			int patLength = (patIdxTmp - pattIdxStart - 1);
</span></span><span class="line"><span class="cl">191			int strLength = (pathIdxEnd - pathIdxStart + 1);
</span></span><span class="line"><span class="cl">192			int foundIdx = -1;
</span></span><span class="line"><span class="cl">193
</span></span><span class="line"><span class="cl">194			strLoop:
</span></span><span class="line"><span class="cl">195			for (int i = 0; i &lt;= strLength - patLength; i++) {
</span></span><span class="line"><span class="cl">196				for (int j = 0; j &lt; patLength; j++) {
</span></span><span class="line"><span class="cl">197					String subPat = pattDirs[pattIdxStart + j + 1];
</span></span><span class="line"><span class="cl">198					String subStr = pathDirs[pathIdxStart + i + j];
</span></span><span class="line"><span class="cl">199					if (!matchStrings(subPat, subStr, uriTemplateVariables)) {
</span></span><span class="line"><span class="cl">200						continue strLoop;
</span></span><span class="line"><span class="cl">201					}
</span></span><span class="line"><span class="cl">202				}
</span></span><span class="line"><span class="cl">203				foundIdx = pathIdxStart + i;
</span></span><span class="line"><span class="cl">204				break;
</span></span><span class="line"><span class="cl">205			}
</span></span><span class="line"><span class="cl">206
</span></span><span class="line"><span class="cl">207			if (foundIdx == -1) {
</span></span><span class="line"><span class="cl">208				return false;
</span></span><span class="line"><span class="cl">209			}
</span></span><span class="line"><span class="cl">210
</span></span><span class="line"><span class="cl">211			pattIdxStart = patIdxTmp;
</span></span><span class="line"><span class="cl">212			pathIdxStart = foundIdx + patLength;
</span></span><span class="line"><span class="cl">213		}
</span></span><span class="line"><span class="cl">214
</span></span><span class="line"><span class="cl">215		for (int i = pattIdxStart; i &lt;= pattIdxEnd; i++) {
</span></span><span class="line"><span class="cl">216			if (!pattDirs[i].equals(&#34;**&#34;)) {
</span></span><span class="line"><span class="cl">217				return false;
</span></span><span class="line"><span class="cl">218			}
</span></span><span class="line"><span class="cl">219		}
</span></span><span class="line"><span class="cl">220
</span></span><span class="line"><span class="cl">221		return true;
</span></span><span class="line"><span class="cl">222	}</span></span></code></pre>
</div>
<p>最后补一个找到瓶颈点后 Google到类似问题的文章，并给出了具体数据和解决方法：<a href="http://www.cnblogs.com/ucos/articles/5542012.html" target="_blank" rel="noopener noreferrer">http://www.cnblogs.com/ucos/articles/5542012.html</a></p>
<p>以及这篇文章中给出的优化前后对比图：
<img class="tw-inline" loading="lazy" src=http://localhost:1313/Users/ren/case/ossimg/3c61ad759ae5f44bbb2a24e4714c2ee8   alt="screenshot"  ></p>
]]></description>
</item></channel>
</rss>
