<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>RTT - 标签 - plantegg</title>
        <link>http://localhost:1313/tags/rtt/</link>
        <description>RTT - 标签 - plantegg</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Sat, 06 May 2023 12:30:03 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/rtt/" rel="self" type="application/rss+xml" /><item>
    <title>我的网络传输速度为什么突然下降了</title>
    <link>http://localhost:1313/posts/%E6%88%91%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E7%AA%81%E7%84%B6%E4%B8%8B%E9%99%8D%E4%BA%86/</link>
    <pubDate>Sat, 06 May 2023 12:30:03 &#43;0000</pubDate><author>
        <name>作者</name>
    </author><guid>http://localhost:1313/posts/%E6%88%91%E7%9A%84%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6%E4%B8%BA%E4%BB%80%E4%B9%88%E7%AA%81%E7%84%B6%E4%B8%8B%E9%99%8D%E4%BA%86/</guid>
    <description><![CDATA[<h1 id="我的网络传输速度为什么突然下降了" class="headerLink">
    <a href="#%e6%88%91%e7%9a%84%e7%bd%91%e7%bb%9c%e4%bc%a0%e8%be%93%e9%80%9f%e5%ba%a6%e4%b8%ba%e4%bb%80%e4%b9%88%e7%aa%81%e7%84%b6%e4%b8%8b%e9%99%8d%e4%ba%86" class="header-mark"></a>我的网络传输速度为什么突然下降了</h1><h2 id="前言" class="headerLink">
    <a href="#%e5%89%8d%e8%a8%80" class="header-mark"></a>前言</h2><p>这个问题是我星球成员做星球里面的必做实验时碰到的一个问题</p>
<p>最后的分析用到了我们的抓包大法+ping一ping真牛逼的证明方案，所以特意放出来供大家试试，同时也检验大家对知识的掌握和运用。</p>
<p>这个问题很好，在EC2上稳定重现，假如你们的业务碰到了这个问题你怎么解决？</p>
<p>或者换个场景描述：你有一个SQL单独执行很快，2个SQL并行一起查速度就降到了原来的10%，是DB还是谁的锅？</p>
<p>推特上大佬们的讨论，看看别人都是怎么思考和推理的：https://treeverse.app/view/RDzsOXjO</p>
<h2 id="问题描述" class="headerLink">
    <a href="#%e9%97%ae%e9%a2%98%e6%8f%8f%e8%bf%b0" class="header-mark"></a>问题描述</h2><p>一个降速问题，在AWS的 <a href="t2.micro" rel="">t2.micro</a>机器上几乎100％复现，操作:</p>
<ol>
<li>开三台aws <a href="t2.micro" rel="">t2.micro</a>机器，一台做server两台做client, 已知正常情况rtt是0.5ms，bandwidth 60mbps，文件大小2g</li>
<li>client1 去curl get server 文件，等一段时间速度稳定在 60mbps</li>
<li>然后用 client2 去curl get server 文件</li>
<li>可以观察到两个client都降速到3.5mbps，这种情况就是算把server跑坏了。</li>
<li>关掉client2, 观察到client1恢复到7-8mbps，但是远低于60mbps的带宽上限，也就是速度被限制到了标称的10%</li>
<li>server搞坏之后，client重新下载就会出现一开始还行，但过10s就会掉到7-8mbps的情况，需要重启server才能恢复到60mbps</li>
</ol>
<p>星球不能发多图，和pcap文件，重现的详细抓包、截图等都放在 google driver上了: <a href="https://drive.google.com/drive/folders/13rsOQ-6VZhXu0JRMLlUypRposRRcRN-a" target="_blank" rel="noopener noreferrer">https://drive.google.com/drive/folders/13rsOQ-6VZhXu0JRMLlUypRposRRcRN-a</a> （<strong>建议大家去下载client2.pcap抓包看看</strong>）</p>
<p>抓包发现大量dup ack, 且bytes in flight很大，server send buffer很大。</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/FryRnESX2vOUCICndaLZ3MuaqSmH.png   alt="img"  ></p>
<p><strong>==强烈建议你先别往下看，去下载上面链接中的抓包文件分析看看，然后和下面的分析对比一下==</strong></p>
<hr>
<h2 id="分析" class="headerLink">
    <a href="#%e5%88%86%e6%9e%90" class="header-mark"></a>分析</h2><p>有网络大牛陈硕老师 <a href="https://twitter.com/bnu_chenshuo/status/1654288717673291776" target="_blank" rel="noopener noreferrer">在EC2上重现了这个问题</a> 以及他的分析，速度由300Mbps下降到了60Mbps：</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/Fnl-CGFUBMjLwQWa2i6kPo7MuJFc.png   alt="img"  ></p>
<p>以及 左耳朵耗子 老师也做了实验以及分析：https://twitter.com/haoel/status/1654655067365179393</p>
<p>我的分析：https://articles.zsxq.com/id_iq5a872u8sux.html</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20230506132001274.png   alt="image-20230506132001274"  ></p>
<h3 id="证明" class="headerLink">
    <a href="#%e8%af%81%e6%98%8e" class="header-mark"></a>证明</h3><p>证明原理如这个图</p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20230506131422140.png   alt="image-20230506131422140"  ></p>
<p><img class="tw-inline" loading="lazy" src=https://cdn.jsdelivr.net/gh/plantegg/plantegg.github.io/images/951413iMgBlog/image-20230506131709216.png   alt="image-20230506131709216"  ></p>
<h2 id="总结" class="headerLink">
    <a href="#%e6%80%bb%e7%bb%93" class="header-mark"></a>总结</h2><p>99%的人不会弄脏双手去实验，哪怕是只需要下载一个抓包就能分析出来都不会去下载。但是为什么刚好是两位陈老师会去测试重现一下呢(原谅你没有AWS机器，但是不接受你不去google driver下载抓包文件 :) )，大概率他们的时间、经验、知识都比你要丰富一些，但是他们不忌惮弄脏手而你只想做个过客看看就懂，但最后你真的啥都没看懂！</p>
]]></description>
</item></channel>
</rss>
