(()=>{var ee=(e,o)=>()=>(o||e((o={exports:{}}).exports,o),o.exports);var W=ee((ve,U)=>{U.exports=window.Tablesort});var te=W();function oe(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function X(e,o){e=e||[];for(let t=0;t<e.length;t++)o(e[t])}function Y(){return document.documentElement&&document.documentElement.scrollTop||document.body.scrollTop}function ne(){let e=document.getElementById("menu-toggle-mobile"),o=document.getElementById("menu-mobile");window.menuToggleMobileEventListener||(e.addEventListener("click",()=>{document.body.classList.toggle("blur"),e.classList.toggle("active"),o.classList.toggle("active")}),window.menuToggleMobileEventListener=!0),window._menuMobileOnClickMask=()=>{e.classList.remove("active"),o.classList.remove("active")},window.clickMaskEventSet.add(window._menuMobileOnClickMask)}function H(e){window.setTheme(e),window.saveTheme(e)}function ie(){Array.from(document.getElementsByClassName("theme-switch")).forEach(e=>{e.addEventListener("click",()=>{let o=document.body.getAttribute("theme");H(o==="dark"?"light":"dark");for(let t of window.switchThemeEventSet)t()})})}function se(){Array.from(document.getElementsByClassName("color-theme-select")).forEach(e=>{let o=document.body.getAttribute("theme");for(let t=0;t<e.options.length;t++)if(e.options[t].value===o){e.selectedIndex=t;break}e.addEventListener("change",()=>{let t=e.value;window.localStorage&&localStorage.setItem("theme",t),t!=="auto"?H(t):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?H("dark"):H("light");for(let i of window.switchThemeEventSet)i()})})}function Z(){let e=window.config.search,o=window.matchMedia&&window.matchMedia("only screen and (max-width: 680px)").matches;if(!e||o&&window._searchMobileOnce||!o&&window._searchDesktopOnce)return;let t=e.maxResultLength?e.maxResultLength:10,i=e.snippetLength?e.snippetLength:50,n=e.highlightTag?e.highlightTag:"em",s=e.isCaseSensitive?e.isCaseSensitive:!1,d=e.minMatchCharLength?e.minMatchCharLength:1,w=e.findAllMatches?e.findAllMatches:!1,g=e.location?e.location:0,_=e.threshold?e.threshold:.3,A=e.distance?e.distance:100,v=e.ignoreLocation?e.ignoreLocation:!1,D=e.useExtendedSearch?e.useExtendedSearch:!1,q=e.ignoreFieldNorm?e.ignoreFieldNorm:!1,L=e.termFrequency?e.termFrequency:1,O=e.pageLength?e.pageLength:.75,a=e.termSimilarity?e.termSimilarity:1,F=e.termSaturation?e.termSaturation:1.4,E=o?"mobile":"desktop",$=document.getElementById(`header-${E}`),k=document.getElementById(`search-input-${E}`),R=document.getElementById(`search-toggle-${E}`),B=document.getElementById(`search-loading-${E}`),f=document.getElementById(`search-clear-${E}`),V=window.config["autocomplete.min.js"],P=window.config["algoliasearch.min.js"],Q=window.config["pagefind.js"],G=window.config["fuse.min.js"];o?(window._searchMobileOnce=!0,k.addEventListener("focus",()=>{C("autocomplete-script",V,()=>{J(),k.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",P,null):window.config?.search?.type==="fuse"?C("fuse-script",G,null):N(),document.body.classList.add("blur"),$.classList.add("open"),k.focus()}),document.getElementById("search-cancel-mobile").addEventListener("click",()=>{$.classList.remove("open"),document.body.classList.remove("blur"),document.getElementById("menu-toggle-mobile").classList.remove("active"),document.getElementById("menu-mobile").classList.remove("active"),B.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")}),f.addEventListener("click",()=>{f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},!1),window._searchMobileOnClickMask=()=>{$.classList.remove("open"),B.style.display="none",f.style.display="none",window._searchMobile&&window._searchMobile.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchMobileOnClickMask)):(window._searchDesktopOnce=!0,R.addEventListener("click",()=>{C("autocomplete-script",V,()=>{J(),k.focus()}),window.config?.search?.type==="algolia"?C("algolia-script",P,null):window.config?.search?.type==="fuse"?C("fuse-script",G,null):N(),document.body.classList.add("blur"),$.classList.add("open"),k.focus()}),f.addEventListener("click",()=>{f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")}),document.addEventListener("keydown",p=>{p.ctrlKey&&p.code==="KeyK"&&(p.preventDefault(),R.click())}),window._searchDesktopOnClickMask=()=>{$.classList.remove("open"),B.style.display="none",f.style.display="none",window._searchDesktop&&window._searchDesktop.autocomplete.setVal("")},window.clickMaskEventSet.add(window._searchDesktopOnClickMask)),k.addEventListener("input",()=>{k.value===""?f.style.display="none":f.style.display="inline"});let J=()=>{let p=autocomplete(`#search-input-${E}`,{hint:!1,autoselect:!0,dropdownMenuContainer:`#search-dropdown-${E}`,clearOnSelected:!1,cssClasses:{noPrefix:!0},debug:!0},{name:"search",source:(m,S)=>{B.style.display="inline",f.style.display="none";let u=l=>{B.style.display="none",f.style.display="inline",S(l)};if(e.type==="algolia")window._algoliaIndex=window._algoliaIndex||algoliasearch(e.algoliaAppID,e.algoliaSearchKey).initIndex(e.algoliaIndex),window._algoliaIndex.search(m,{offset:0,length:t*8,attributesToHighlight:["title"],attributesToRetrieve:["*"],attributesToSnippet:[`content:${i}`],highlightPreTag:`<${n}>`,highlightPostTag:`</${n}>`}).then(({hits:l})=>{let c={};l.forEach(({uri:r,date:I,_highlightResult:{title:y},_snippetResult:{content:x}})=>{c[r]&&c[r].context.length>x.value||(c[r]={uri:r,title:y.value,date:I,context:x.value})}),u(Object.values(c).slice(0,t))}).catch(l=>{console.error(l),u([])});else if(e.type==="fuse"){let l=()=>{let c={};return window._fuseIndex.search(m).forEach(({item:r,refIndex:I,matches:y})=>{let x=r.title,M=r.content;y.forEach(({indices:T,value:ye,key:K})=>{if(K==="content"){let b=0;for(let h=0;h<T.length;h++){let j=M.substring(T[h][0]+b,T[h][1]+1+b),z=`<${n}>`+j+`</${n}>`;M=M.substring(0,T[h][0]+b)+z+M.substring(T[h][1]+1+b,M.length),b+=n.length*2+5}}else if(K==="title"){let b=0;for(let h=0;h<T.length;h++){let j=x.substring(T[h][0]+b,T[h][1]+1+b),z=`<${n}>`+j+`</${n}>`;x=x.substring(0,T[h][0]+b)+z+x.substring(T[h][1]+1+b,M.length),b+=n.length*2+5}}}),c[r.uri]={uri:r.uri,title:x,date:r.date,context:M}}),console.log(c),Object.values(c).slice(0,t)};window._fuseIndex?u(l()):fetch(e.fuseIndexURL).then(c=>c.json()).then(c=>{let r={isCaseSensitive:s,findAllMatches:w,minMatchCharLength:d,location:g,threshold:_,distance:A,ignoreLocation:v,useExtendedSearch:D,ignoreFieldNorm:q,includeScore:!1,shouldSort:!0,includeMatches:!0,keys:["content","title"]};window._fuseIndex=new Fuse(c,r),u(l())}).catch(c=>{console.error(c),u([])})}else window._pgfIndex===void 0&&N(),window._pgfIndex.debouncedSearch(m,300).then(l=>{if(l===null||!("results"in l)){u([]);return}Promise.all(l.results.slice(0,t).map(c=>c.data())).then(c=>{let r={};for(let I of c)for(let y of I.sub_results)y.url===void 0||!("anchor"in y)||y.anchor.element!="h2"||(r[y.url]={uri:y.url,title:I.meta.title,date:I.meta.date,context:n==="mark"?y.excerpt:y.excerpt.replace(/<mark>(.*?)<\/mark>/gi,`<${n}>$1</${n}>`)});u(Object.values(r))})})},templates:{suggestion:({title:m,uri:S,date:u,context:l})=>`<div><a href=${S}><span class="suggestion-title">${m}</span></a><span class="suggestion-date">${u}</span></div><div class="suggestion-context">${l}</div>`,empty:({query:m})=>`<div class="search-empty">${e.noResultsFound}: <span class="search-query">"${oe(m)}"</span></div>`,footer:()=>{let{searchType:m,icon:S,href:u}=e.type==="algolia"?{searchType:"algolia",icon:'<svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --><path d="M229.3 182.6c-49.3 0-89.2 39.9-89.2 89.2 0 49.3 39.9 89.2 89.2 89.2s89.2-39.9 89.2-89.2c0-49.3-40-89.2-89.2-89.2zm62.7 56.6l-58.9 30.6c-1.8.9-3.8-.4-3.8-2.3V201c0-1.5 1.3-2.7 2.7-2.6 26.2 1 48.9 15.7 61.1 37.1.7 1.3.2 3-1.1 3.7zM389.1 32H58.9C26.4 32 0 58.4 0 90.9V421c0 32.6 26.4 59 58.9 59H389c32.6 0 58.9-26.4 58.9-58.9V90.9C448 58.4 421.6 32 389.1 32zm-202.6 84.7c0-10.8 8.7-19.5 19.5-19.5h45.3c10.8 0 19.5 8.7 19.5 19.5v15.4c0 1.8-1.7 3-3.3 2.5-12.3-3.4-25.1-5.1-38.1-5.1-13.5 0-26.7 1.8-39.4 5.5-1.7.5-3.4-.8-3.4-2.5v-15.8zm-84.4 37l9.2-9.2c7.6-7.6 19.9-7.6 27.5 0l7.7 7.7c1.1 1.1 1 3-.3 4-6.2 4.5-12.1 9.4-17.6 14.9-5.4 5.4-10.4 11.3-14.8 17.4-1 1.3-2.9 1.5-4 .3l-7.7-7.7c-7.6-7.5-7.6-19.8 0-27.4zm127.2 244.8c-70 0-126.6-56.7-126.6-126.6s56.7-126.6 126.6-126.6c70 0 126.6 56.6 126.6 126.6 0 69.8-56.7 126.6-126.6 126.6z"/></svg>',href:"https://www.algolia.com/"}:e.type==="fuse"?{searchType:"Fuse.js",icon:"",href:"https://fusejs.io/"}:{searchType:"pagefind",icon:"",href:"https://pagefind.app"};return`<div class="search-footer">Search by <a href="${u}" rel="noopener noreffer" target="_blank">${S} ${m}</a></div>`}}});p.on("autocomplete:selected",(m,S,u,l)=>{m.preventDefault()}),o?window._searchMobile=p:window._searchDesktop=p};function C(p,m,S){if(document.querySelector(`#${p}`)===null){let u=document.querySelector("head"),l=document.createElement("script");l.setAttribute("src",m),l.setAttribute("id",p),l.onload=S,u.appendChild(l)}}function N(){import(Q).then(p=>{window._pgfIndex=p,window._pgfIndex.options({excerptLength:i,termFrequency:L,pageLength:O,termSimilarity:a,termSaturation:F}).then(()=>{window._pgfIndex.init()})})}}function le(){document.querySelectorAll(".details").forEach(e=>{let o=e.getElementsByClassName("details-summary")[0],t=o.nextElementSibling;e.classList.contains("open")&&(t.style.maxHeight=t.scrollHeight+"px"),o.addEventListener("click",()=>{e.classList.contains("open")?t.style.maxHeight="0px":t.style.maxHeight=t.scrollHeight+"px",e.classList.toggle("open")},!1),addEventListener("beforeprint",()=>{e.classList.contains("open")||o.click()})})}function ce(){window.config.lightGallery&&lightGallery(document.getElementById("content"),window.config.lightGallery)}function ae(){window.config?.table?.sort&&document.querySelectorAll(".content table").forEach(e=>new te(e))}function re(){let e=document.getElementById("TableOfContents");if(e===null)return;let o=window.matchMedia&&window.matchMedia("only screen and (max-width: 1000px)").matches;if(document.getElementById("toc-static").getAttribute("kept")||o)window._tocOnScroll&&window.scrollEventSet.delete(window._tocOnScroll);else{let t=document.getElementById("toc-auto"),i=e.querySelectorAll("a:first-child"),n=e.getElementsByTagName("li"),s=document.getElementsByClassName("headerLink"),d=document.body.getAttribute("header-desktop")!=="normal",w=document.getElementById("header-desktop").offsetHeight,g=20+(d?w:0),_=t.offsetTop,A=_-g+(d?0:w);window._tocOnScroll=window._tocOnScroll||(()=>{let D=document.getElementById("post-footer").offsetTop-t.getBoundingClientRect().height,q=D-g+(d?0:w);if(window.newScrollTop<A?(t.style.position="absolute",t.style.top=`${_}px`):window.newScrollTop>q?(t.style.position="absolute",t.style.top=`${D}px`):(t.style.position="fixed",t.style.top=`${g}px`),i.length===0)return;let L=-1,O=g+window.newScrollTop;if(s.length>0)if(s[s.length-1].offsetTop<O)L=s.length-1;else for(let a=0;a<s.length-1;a++){let F=s[a].offsetTop,E=s[a+1].offsetTop;if(F<=O&&E>O){L=a;break}}if(Array.from(i).forEach(a=>a.classList.remove("active")),Array.from(n).forEach(a=>a.classList.remove("has-active")),L>=0&&L<i.length){i[L].classList.add("active");let a=i[L].parentElement;for(;a!==e;)a.classList.add("has-active"),a=a.parentElement.parentElement}}),window._tocOnScroll(),window.scrollEventSet.add(window._tocOnScroll)}}function de(){window.config.mapbox&&(mapboxgl.accessToken=window.config.mapbox.accessToken,mapboxgl.setRTLTextPlugin(window.config.mapbox.RTLTextPlugin),window._mapboxArr=window._mapboxArr||[],X(document.getElementsByClassName("mapbox"),e=>{let{lng:o,lat:t,zoom:i,lightStyle:n,darkStyle:s,marked:d,navigation:w,geolocate:g,scale:_,fullscreen:A}=window.config.data[e.id],v=new mapboxgl.Map({container:e,center:[o,t],zoom:i,minZoom:.2,style:window.isDark?s:n,attributionControl:!1});d&&new mapboxgl.Marker().setLngLat([o,t]).addTo(v),w&&v.addControl(new mapboxgl.NavigationControl,"bottom-right"),g&&v.addControl(new mapboxgl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},showUserLocation:!0,trackUserLocation:!0}),"bottom-right"),_&&v.addControl(new mapboxgl.ScaleControl),A&&v.addControl(new mapboxgl.FullscreenControl),v.addControl(new MapboxLanguage),window._mapboxArr.push(v)}),window._mapboxOnSwitchTheme=()=>{X(window._mapboxArr,e=>{let o=e.getContainer(),{lightStyle:t,darkStyle:i}=window.config.data[o.id];e.setStyle(window.isDark?i:t),e.addControl(new MapboxLanguage)})},window.switchThemeEventSet.add(window._mapboxOnSwitchTheme))}function ue(){if(window.config.typeit){let e=window.config.typeit,o=e.speed?e.speed:100,t=e.cursorSpeed?e.cursorSpeed:1e3,i=e.cursorChar?e.cursorChar:"|";Object.values(e.data).forEach(n=>{let s=d=>{let w=n[d];if(!document.getElementById(w).hasAttribute("data-typeit-id")){let g=new TypeIt(`#${w}`,{strings:window.config.data[w],speed:o,lifeLike:!0,cursorSpeed:t,cursorChar:i,waitUntilVisible:!0,afterComplete:()=>{if(d===n.length-1){e.duration>=0&&window.setTimeout(()=>{g.destroy()},e.duration);return}g.destroy(),s(d+1)}}).go()}};s(0)})}}function we(){function e(i){let n=document.getElementsByTagName("meta");for(let s=0;s<n.length;s++)if(n[s].getAttribute("name")===i)return n[s]}let o=e("theme-color"),t={light:"#f8f8f8",dark:"#161b22"};window._metaThemeColorOnSwitchTheme=()=>{o.content=t[document.body.getAttribute("theme")]},window.switchThemeEventSet.add(window._metaThemeColorOnSwitchTheme),window._metaThemeColorOnSwitchTheme()}function me(){let e=document.getElementById("back-to-top-button");function o(){window.newScrollTop=Y(),window.newScrollTop>20?e.style.opacity="1":e.style.opacity="0";for(let t of window.scrollEventSet)t();window.oldScrollTop=window.newScrollTop}window.addEventListener("scroll",o,!1)}function he(){window.addEventListener("resize",()=>{window._resizeTimeout||(window._resizeTimeout=window.setTimeout(()=>{window._resizeTimeout=null;for(let e of window.resizeEventSet)e();Z()},100))},!1)}function ge(){document.getElementById("mask").addEventListener("click",()=>{for(let e of window.clickMaskEventSet)e();document.body.classList.remove("blur")},!1)}function pe(){document.querySelectorAll(".code-block").forEach(e=>{let o=e.querySelector("div.code-block-title-bar"),t=e.querySelector("code.chroma"),i=e.querySelector("button.copy-code-button"),n=i.querySelector("span.copy-icon"),s=i.querySelector("span.check-icon"),d=e.querySelector("button.wrap-code-button"),w=e.querySelector("button.line-number-button");t.style.maxHeight=t.scrollHeight+10+"px",o.addEventListener("click",()=>{e.classList.toggle("is-open"),e.classList.toggle("is-closed")}),i?.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent),n.style.display="none",s.style.display="block",setTimeout(()=>{n.style.display="block",s.style.display="none"},3e3)}),d?.addEventListener("click",()=>{t.style.maxHeight="fit-content",e.classList.toggle("is-wrap"),t.style.maxHeight=t.scrollHeight+10+"px"}),w.addEventListener("click",()=>{e.classList.toggle("show-line-numbers")}),addEventListener("beforeprint",g=>{e.classList.contains("is-closed")&&o.click(),e.classList.contains("is-wrap")||d.click()})})}function fe(){window.isDark=document.body.getAttribute("theme")!=="light",window.newScrollTop=Y(),window.oldScrollTop=window.newScrollTop,window.scrollEventSet=new Set,window.resizeEventSet=new Set,window.clickMaskEventSet=new Set,window.objectFitImages&&objectFitImages(),ne(),ie(),se(),we(),Z(),pe(),le(),ce(),ae(),ue(),de(),re(),me(),he(),ge()}fe();})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovVXNlcnMvcmVuL3NyYy9odWdvL2Jsb2cvdGhlbWVzL0RvSXQvYXNzZXRzL2pzL3NoaW1zL3RhYmxlc29ydC5qcyIsICI8c3RkaW4+Il0sCiAgInNvdXJjZXNDb250ZW50IjogWyJtb2R1bGUuZXhwb3J0cyA9IHdpbmRvdy5UYWJsZXNvcnQ7XG4iLCAiZXhwb3J0IHt9O1xuXG4vLyBUT0RPOiBhZGQgbW9yZSBnbG9iYWwgc3RhdGVzIHRvIHRoZSB3aW5kb3cgb2JqZWN0XG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBXaW5kb3cge1xuICAgIGlzRGFyazogYm9vbGVhbjtcbiAgICBjb25maWc/OiB7XG4gICAgICB0YWJsZT86IHtcbiAgICAgICAgc29ydD86IGJvb2xlYW47XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLW5ldyAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi9cbmNvbnN0IFRhYmxlc29ydCA9IHJlcXVpcmUoXCJ0YWJsZXNvcnRcIik7XG4vLyBjb25zdCBhdXRvY29tcGxldGUgPSByZXF1aXJlKCdhdXRvY29tcGxldGUuanMnKVxuXG5mdW5jdGlvbiBlc2NhcGUodW5zYWZlKSB7XG4gIHJldHVybiB1bnNhZmVcbiAgICAucmVwbGFjZSgvJi9nLCBcIiZhbXA7XCIpXG4gICAgLnJlcGxhY2UoLzwvZywgXCImbHQ7XCIpXG4gICAgLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpXG4gICAgLnJlcGxhY2UoL1wiL2csIFwiJnF1b3Q7XCIpXG4gICAgLnJlcGxhY2UoLycvZywgXCImIzAzOTtcIik7XG59XG5cbmZ1bmN0aW9uIGZvckVhY2goZWxlbWVudHMsIGhhbmRsZXIpIHtcbiAgZWxlbWVudHMgPSBlbGVtZW50cyB8fCBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykgaGFuZGxlcihlbGVtZW50c1tpXSk7XG59XG5cbmZ1bmN0aW9uIGdldFNjcm9sbFRvcCgpIHtcbiAgcmV0dXJuIChcbiAgICAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApIHx8XG4gICAgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3BcbiAgKTtcbn1cblxuZnVuY3Rpb24gaXNNb2JpbGVXaW5kb3coKSB7XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYShcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2ODBweClcIikubWF0Y2hlcztcbn1cblxuLyoqXG4gKiBJbml0aWFsaXplIHRoZSBtb2JpbGUgbWVudSBiYXIuXG4gKi9cbmZ1bmN0aW9uIGluaXRNZW51TW9iaWxlKCkge1xuICBjb25zdCBtZW51VG9nZ2xlTW9iaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXRvZ2dsZS1tb2JpbGVcIik7XG4gIGNvbnN0IG1lbnVNb2JpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lbnUtbW9iaWxlXCIpO1xuICAvLyBJZiBubyBldmVudCBsaXN0ZW5lciBoYXMgYmVlbiByZWdpc3RlcmVkIHlldCwgYWRkIG9uZS5cbiAgaWYgKCF3aW5kb3cubWVudVRvZ2dsZU1vYmlsZUV2ZW50TGlzdGVuZXIpIHtcbiAgICBtZW51VG9nZ2xlTW9iaWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoXCJibHVyXCIpO1xuICAgICAgbWVudVRvZ2dsZU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgICAgbWVudU1vYmlsZS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xuICAgIH0pO1xuICAgIHdpbmRvdy5tZW51VG9nZ2xlTW9iaWxlRXZlbnRMaXN0ZW5lciA9IHRydWU7XG4gIH1cbiAgLy8gUmVtb3ZlIHRoZSBtYXNrIHdoZW4gY2xpY2sgb24gaXQuXG4gIHdpbmRvdy5fbWVudU1vYmlsZU9uQ2xpY2tNYXNrID0gKCkgPT4ge1xuICAgIG1lbnVUb2dnbGVNb2JpbGUuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICBtZW51TW9iaWxlLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XG4gIH07XG4gIHdpbmRvdy5jbGlja01hc2tFdmVudFNldC5hZGQod2luZG93Ll9tZW51TW9iaWxlT25DbGlja01hc2spO1xufVxuXG4vKipcbiAqIFNldCB0aGUgY29sb3IgdGhlbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB0aGVtZVxuICovXG5mdW5jdGlvbiBzZXRDb2xvclRoZW1lKHRoZW1lKSB7XG4gIHdpbmRvdy5zZXRUaGVtZSh0aGVtZSk7XG4gIHdpbmRvdy5zYXZlVGhlbWUodGhlbWUpO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHN3aXRjaCB0aGVtZSBidXR0b24uXG4gKi9cbmZ1bmN0aW9uIGluaXRTd2l0Y2hUaGVtZSgpIHtcbiAgQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwidGhlbWUtc3dpdGNoXCIpKS5mb3JFYWNoKFxuICAgICh0aGVtZVN3aXRjaCkgPT4ge1xuICAgICAgdGhlbWVTd2l0Y2guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgY3VycmVudFRoZW1lID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoXCJ0aGVtZVwiKTtcbiAgICAgICAgaWYgKGN1cnJlbnRUaGVtZSA9PT0gXCJkYXJrXCIpIHtcbiAgICAgICAgICBzZXRDb2xvclRoZW1lKFwibGlnaHRcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0Q29sb3JUaGVtZShcImRhcmtcIik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgc2VsZWN0IHRoZW1lIGJ1dHRvbi5cbiAqL1xuZnVuY3Rpb24gaW5pdFNlbGVjdFRoZW1lKCkge1xuICBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJjb2xvci10aGVtZS1zZWxlY3RcIikpLmZvckVhY2goXG4gICAgKHRoZW1lU2VsZWN0KSA9PiB7XG4gICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgdGhlbWVcbiAgICAgIGNvbnN0IGN1cnJlbnRUaGVtZSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIik7XG4gICAgICAvLyBTZXQgdGhlIHNlbGVjdGVkIEluZGV4XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoZW1lU2VsZWN0Lm9wdGlvbnMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3QgaSA9IHRoZW1lU2VsZWN0Lm9wdGlvbnNbal07XG4gICAgICAgIGlmIChpLnZhbHVlID09PSBjdXJyZW50VGhlbWUpIHtcbiAgICAgICAgICB0aGVtZVNlbGVjdC5zZWxlY3RlZEluZGV4ID0gajtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGVtZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgdGhlbWUgPSB0aGVtZVNlbGVjdC52YWx1ZTtcbiAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZSAmJiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRoZW1lXCIsIHRoZW1lKTtcbiAgICAgICAgaWYgKHRoZW1lICE9PSBcImF1dG9cIikge1xuICAgICAgICAgIHNldENvbG9yVGhlbWUodGhlbWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHdpbmRvdy5tYXRjaE1lZGlhICYmXG4gICAgICAgICAgICB3aW5kb3cubWF0Y2hNZWRpYShcIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIikubWF0Y2hlc1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgc2V0Q29sb3JUaGVtZShcImRhcmtcIik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldENvbG9yVGhlbWUoXCJsaWdodFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSB0aGUgc2VhcmNoIGJveC5cbiAqIEByZXR1cm5zIHtudWxsfVxuICovXG5mdW5jdGlvbiBpbml0U2VhcmNoKCkge1xuICBjb25zdCBzZWFyY2hDb25maWcgPSB3aW5kb3cuY29uZmlnLnNlYXJjaDtcbiAgY29uc3QgaXNNb2JpbGUgPVxuICAgIHdpbmRvdy5tYXRjaE1lZGlhICYmXG4gICAgd2luZG93Lm1hdGNoTWVkaWEoXCJvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjgwcHgpXCIpLm1hdGNoZXM7XG4gIC8vIElmIHRoZXJlIGlzIG5vIHNlYXJjaCBjb25maWdcbiAgLy8gT3IgdGhlIHNlYXJjaCBoYXMgYmVlbiBpbml0aWFsaXplZCBhbHJlYWR5XG4gIC8vIFJldHVybiBkaXJlY3RseVxuICBpZiAoXG4gICAgIXNlYXJjaENvbmZpZyB8fFxuICAgIChpc01vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZU9uY2UpIHx8XG4gICAgKCFpc01vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3BPbmNlKVxuICApXG4gICAgcmV0dXJuO1xuXG4gIC8vIEluaXRpYWxpemUgZGVmYXVsdCBzZWFyY2ggY29uZmlnXG4gIGNvbnN0IG1heFJlc3VsdExlbmd0aCA9IHNlYXJjaENvbmZpZy5tYXhSZXN1bHRMZW5ndGhcbiAgICA/IHNlYXJjaENvbmZpZy5tYXhSZXN1bHRMZW5ndGhcbiAgICA6IDEwO1xuICBjb25zdCBzbmlwcGV0TGVuZ3RoID0gc2VhcmNoQ29uZmlnLnNuaXBwZXRMZW5ndGhcbiAgICA/IHNlYXJjaENvbmZpZy5zbmlwcGV0TGVuZ3RoXG4gICAgOiA1MDtcbiAgY29uc3QgaGlnaGxpZ2h0VGFnID0gc2VhcmNoQ29uZmlnLmhpZ2hsaWdodFRhZ1xuICAgID8gc2VhcmNoQ29uZmlnLmhpZ2hsaWdodFRhZ1xuICAgIDogXCJlbVwiO1xuICBjb25zdCBpc0Nhc2VTZW5zaXRpdmUgPSBzZWFyY2hDb25maWcuaXNDYXNlU2Vuc2l0aXZlXG4gICAgPyBzZWFyY2hDb25maWcuaXNDYXNlU2Vuc2l0aXZlXG4gICAgOiBmYWxzZTtcbiAgY29uc3QgbWluTWF0Y2hDaGFyTGVuZ3RoID0gc2VhcmNoQ29uZmlnLm1pbk1hdGNoQ2hhckxlbmd0aFxuICAgID8gc2VhcmNoQ29uZmlnLm1pbk1hdGNoQ2hhckxlbmd0aFxuICAgIDogMTtcbiAgY29uc3QgZmluZEFsbE1hdGNoZXMgPSBzZWFyY2hDb25maWcuZmluZEFsbE1hdGNoZXNcbiAgICA/IHNlYXJjaENvbmZpZy5maW5kQWxsTWF0Y2hlc1xuICAgIDogZmFsc2U7XG4gIGNvbnN0IGxvY2F0aW9uID0gc2VhcmNoQ29uZmlnLmxvY2F0aW9uID8gc2VhcmNoQ29uZmlnLmxvY2F0aW9uIDogMDtcbiAgY29uc3QgdGhyZXNob2xkID0gc2VhcmNoQ29uZmlnLnRocmVzaG9sZCA/IHNlYXJjaENvbmZpZy50aHJlc2hvbGQgOiAwLjM7XG4gIGNvbnN0IGRpc3RhbmNlID0gc2VhcmNoQ29uZmlnLmRpc3RhbmNlID8gc2VhcmNoQ29uZmlnLmRpc3RhbmNlIDogMTAwO1xuICBjb25zdCBpZ25vcmVMb2NhdGlvbiA9IHNlYXJjaENvbmZpZy5pZ25vcmVMb2NhdGlvblxuICAgID8gc2VhcmNoQ29uZmlnLmlnbm9yZUxvY2F0aW9uXG4gICAgOiBmYWxzZTtcbiAgY29uc3QgdXNlRXh0ZW5kZWRTZWFyY2ggPSBzZWFyY2hDb25maWcudXNlRXh0ZW5kZWRTZWFyY2hcbiAgICA/IHNlYXJjaENvbmZpZy51c2VFeHRlbmRlZFNlYXJjaFxuICAgIDogZmFsc2U7XG4gIGNvbnN0IGlnbm9yZUZpZWxkTm9ybSA9IHNlYXJjaENvbmZpZy5pZ25vcmVGaWVsZE5vcm1cbiAgICA/IHNlYXJjaENvbmZpZy5pZ25vcmVGaWVsZE5vcm1cbiAgICA6IGZhbHNlO1xuICBjb25zdCB0ZXJtRnJlcXVlbmN5ID0gc2VhcmNoQ29uZmlnLnRlcm1GcmVxdWVuY3lcbiAgICA/IHNlYXJjaENvbmZpZy50ZXJtRnJlcXVlbmN5XG4gICAgOiAxLjA7XG4gIGNvbnN0IHBhZ2VMZW5ndGggPSBzZWFyY2hDb25maWcucGFnZUxlbmd0aCA/IHNlYXJjaENvbmZpZy5wYWdlTGVuZ3RoIDogMC43NTtcbiAgY29uc3QgdGVybVNpbWlsYXJpdHkgPSBzZWFyY2hDb25maWcudGVybVNpbWlsYXJpdHlcbiAgICA/IHNlYXJjaENvbmZpZy50ZXJtU2ltaWxhcml0eVxuICAgIDogMS4wO1xuICBjb25zdCB0ZXJtU2F0dXJhdGlvbiA9IHNlYXJjaENvbmZpZy50ZXJtU2F0dXJhdGlvblxuICAgID8gc2VhcmNoQ29uZmlnLnRlcm1TYXR1cmF0aW9uXG4gICAgOiAxLjQ7XG4gIGNvbnN0IHN1ZmZpeCA9IGlzTW9iaWxlID8gXCJtb2JpbGVcIiA6IFwiZGVza3RvcFwiO1xuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgaGVhZGVyLSR7c3VmZml4fWApO1xuICBjb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzZWFyY2gtaW5wdXQtJHtzdWZmaXh9YCk7XG4gIGNvbnN0IHNlYXJjaFRvZ2dsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzZWFyY2gtdG9nZ2xlLSR7c3VmZml4fWApO1xuICBjb25zdCBzZWFyY2hMb2FkaW5nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHNlYXJjaC1sb2FkaW5nLSR7c3VmZml4fWApO1xuICBjb25zdCBzZWFyY2hDbGVhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzZWFyY2gtY2xlYXItJHtzdWZmaXh9YCk7XG4gIGNvbnN0IGF1dG9jb21wbGV0ZUpzID0gd2luZG93LmNvbmZpZ1tcImF1dG9jb21wbGV0ZS5taW4uanNcIl07XG4gIGNvbnN0IGFsZ29saWFKcyA9IHdpbmRvdy5jb25maWdbXCJhbGdvbGlhc2VhcmNoLm1pbi5qc1wiXTtcbiAgY29uc3QgcGFnZWZpbmRKcyA9IHdpbmRvdy5jb25maWdbXCJwYWdlZmluZC5qc1wiXTtcbiAgY29uc3QgZnVzZUpzID0gd2luZG93LmNvbmZpZ1tcImZ1c2UubWluLmpzXCJdO1xuICBpZiAoaXNNb2JpbGUpIHtcbiAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZU9uY2UgPSB0cnVlO1xuICAgIC8vIFR1cm4gb24gdGhlIG1hc2sgd2hlbiBjbGlja2luZyBvbiB0aGUgc2VhcmNoIGJ1dHRvblxuICAgIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCAoKSA9PiB7XG4gICAgICBsb2FkU2NyaXB0KFwiYXV0b2NvbXBsZXRlLXNjcmlwdFwiLCBhdXRvY29tcGxldGVKcywgKCkgPT4ge1xuICAgICAgICBpbml0QXV0b3NlYXJjaCgpO1xuICAgICAgICBzZWFyY2hJbnB1dC5mb2N1cygpO1xuICAgICAgfSk7XG4gICAgICBpZiAod2luZG93LmNvbmZpZz8uc2VhcmNoPy50eXBlID09PSBcImFsZ29saWFcIikge1xuICAgICAgICBsb2FkU2NyaXB0KFwiYWxnb2xpYS1zY3JpcHRcIiwgYWxnb2xpYUpzLCBudWxsKTtcbiAgICAgIH0gZWxzZSBpZiAod2luZG93LmNvbmZpZz8uc2VhcmNoPy50eXBlID09PSBcImZ1c2VcIikge1xuICAgICAgICBsb2FkU2NyaXB0KFwiZnVzZS1zY3JpcHRcIiwgZnVzZUpzLCBudWxsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxvYWRQYWdlZmluZCgpO1xuICAgICAgfVxuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwiYmx1clwiKTtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QuYWRkKFwib3BlblwiKTtcbiAgICAgIHNlYXJjaElucHV0LmZvY3VzKCk7XG4gICAgfSk7XG4gICAgLy8gVHVybiBvZmYgdGhlIGV2ZXJ5dGhpbmcgd2hlbiBjbGlja2luZyBvbiB0aGUgY2FuY2VsIGJ1dHRvblxuICAgIGRvY3VtZW50XG4gICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2gtY2FuY2VsLW1vYmlsZVwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKFwib3BlblwiKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwiYmx1clwiKTtcbiAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LXRvZ2dsZS1tb2JpbGVcIilcbiAgICAgICAgICAuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtZW51LW1vYmlsZVwiKS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZS5hdXRvY29tcGxldGUuc2V0VmFsKFwiXCIpO1xuICAgICAgfSk7XG4gICAgLy8gQ2xlYXIgdGhlIHNlYXJjaCBib3ggd2hlbiBjbGlja2luZyBvbiB0aGUgY2xlYXIgYnV0dG9uXG4gICAgc2VhcmNoQ2xlYXIuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgICgpID0+IHtcbiAgICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZS5hdXRvY29tcGxldGUuc2V0VmFsKFwiXCIpO1xuICAgICAgfSxcbiAgICAgIGZhbHNlLFxuICAgICk7XG4gICAgLy8gUmVtb3ZlIHRoZSBtYXNrIHdoZW4gY2xpY2sgb24gaXRcbiAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZU9uQ2xpY2tNYXNrID0gKCkgPT4ge1xuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoXCJvcGVuXCIpO1xuICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB3aW5kb3cuX3NlYXJjaE1vYmlsZSAmJiB3aW5kb3cuX3NlYXJjaE1vYmlsZS5hdXRvY29tcGxldGUuc2V0VmFsKFwiXCIpO1xuICAgIH07XG4gICAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0LmFkZCh3aW5kb3cuX3NlYXJjaE1vYmlsZU9uQ2xpY2tNYXNrKTtcbiAgfSBlbHNlIHtcbiAgICB3aW5kb3cuX3NlYXJjaERlc2t0b3BPbmNlID0gdHJ1ZTtcbiAgICAvLyBUdXJuIG9uIHRoZSBtYXNrIHdoZW4gY2xpY2tpbmcgb24gdGhlIHNlYXJjaCBidXR0b25cbiAgICBzZWFyY2hUb2dnbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGxvYWRTY3JpcHQoXCJhdXRvY29tcGxldGUtc2NyaXB0XCIsIGF1dG9jb21wbGV0ZUpzLCAoKSA9PiB7XG4gICAgICAgIGluaXRBdXRvc2VhcmNoKCk7XG4gICAgICAgIHNlYXJjaElucHV0LmZvY3VzKCk7XG4gICAgICB9KTtcbiAgICAgIGlmICh3aW5kb3cuY29uZmlnPy5zZWFyY2g/LnR5cGUgPT09IFwiYWxnb2xpYVwiKSB7XG4gICAgICAgIGxvYWRTY3JpcHQoXCJhbGdvbGlhLXNjcmlwdFwiLCBhbGdvbGlhSnMsIG51bGwpO1xuICAgICAgfSBlbHNlIGlmICh3aW5kb3cuY29uZmlnPy5zZWFyY2g/LnR5cGUgPT09IFwiZnVzZVwiKSB7XG4gICAgICAgIGxvYWRTY3JpcHQoXCJmdXNlLXNjcmlwdFwiLCBmdXNlSnMsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbG9hZFBhZ2VmaW5kKCk7XG4gICAgICB9XG4gICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoXCJibHVyXCIpO1xuICAgICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJvcGVuXCIpO1xuICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKTtcbiAgICB9KTtcbiAgICAvLyBDbGVhciB0aGUgc2VhcmNoIGJveCB3aGVuIGNsaWNraW5nIG9uIHRoZSBjbGVhciBidXR0b25cbiAgICBzZWFyY2hDbGVhci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgc2VhcmNoQ2xlYXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgd2luZG93Ll9zZWFyY2hEZXNrdG9wICYmIHdpbmRvdy5fc2VhcmNoRGVza3RvcC5hdXRvY29tcGxldGUuc2V0VmFsKFwiXCIpO1xuICAgIH0pO1xuICAgIC8vIFRvZ2dsZSBzZWFyY2ggd2hlbiBDdHJsICsgSyBpcyBwcmVzc2VkXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGUpID0+IHtcbiAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5jb2RlID09PSBcIktleUtcIikge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNlYXJjaFRvZ2dsZS5jbGljaygpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIC8vIFJlbW92ZSB0aGUgbWFzayB3aGVuIGNsaWNrIG9uIGl0XG4gICAgd2luZG93Ll9zZWFyY2hEZXNrdG9wT25DbGlja01hc2sgPSAoKSA9PiB7XG4gICAgICBoZWFkZXIuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5cIik7XG4gICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHdpbmRvdy5fc2VhcmNoRGVza3RvcCAmJiB3aW5kb3cuX3NlYXJjaERlc2t0b3AuYXV0b2NvbXBsZXRlLnNldFZhbChcIlwiKTtcbiAgICB9O1xuICAgIHdpbmRvdy5jbGlja01hc2tFdmVudFNldC5hZGQod2luZG93Ll9zZWFyY2hEZXNrdG9wT25DbGlja01hc2spO1xuICB9XG4gIC8vIERpc3BsYXkgdGhlIGNsZWFyIGJ1dHRvbiBvbmx5IHdoZW4gdGhlIHNlYXJjaCBib3ggaXMgbm90IGVtcHR5XG4gIHNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgaWYgKHNlYXJjaElucHV0LnZhbHVlID09PSBcIlwiKSBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgZWxzZSBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcbiAgfSk7XG5cbiAgY29uc3QgaW5pdEF1dG9zZWFyY2ggPSAoKSA9PiB7XG4gICAgY29uc3QgYXV0b3NlYXJjaCA9IGF1dG9jb21wbGV0ZShcbiAgICAgIGAjc2VhcmNoLWlucHV0LSR7c3VmZml4fWAsXG4gICAgICB7XG4gICAgICAgIGhpbnQ6IGZhbHNlLFxuICAgICAgICBhdXRvc2VsZWN0OiB0cnVlLFxuICAgICAgICBkcm9wZG93bk1lbnVDb250YWluZXI6IGAjc2VhcmNoLWRyb3Bkb3duLSR7c3VmZml4fWAsXG4gICAgICAgIGNsZWFyT25TZWxlY3RlZDogZmFsc2UsXG4gICAgICAgIGNzc0NsYXNzZXM6IHsgbm9QcmVmaXg6IHRydWUgfSxcbiAgICAgICAgZGVidWc6IHRydWUsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiBcInNlYXJjaFwiLFxuICAgICAgICBzb3VyY2U6IChxdWVyeSwgY2FsbGJhY2spID0+IHtcbiAgICAgICAgICBzZWFyY2hMb2FkaW5nLnN0eWxlLmRpc3BsYXkgPSBcImlubGluZVwiO1xuICAgICAgICAgIHNlYXJjaENsZWFyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICBjb25zdCBmaW5pc2ggPSAocmVzdWx0cykgPT4ge1xuICAgICAgICAgICAgc2VhcmNoTG9hZGluZy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBzZWFyY2hDbGVhci5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcbiAgICAgICAgICAgIGNhbGxiYWNrKHJlc3VsdHMpO1xuICAgICAgICAgIH07XG4gICAgICAgICAgaWYgKHNlYXJjaENvbmZpZy50eXBlID09PSBcImFsZ29saWFcIikge1xuICAgICAgICAgICAgd2luZG93Ll9hbGdvbGlhSW5kZXggPVxuICAgICAgICAgICAgICB3aW5kb3cuX2FsZ29saWFJbmRleCB8fFxuICAgICAgICAgICAgICBhbGdvbGlhc2VhcmNoKFxuICAgICAgICAgICAgICAgIHNlYXJjaENvbmZpZy5hbGdvbGlhQXBwSUQsXG4gICAgICAgICAgICAgICAgc2VhcmNoQ29uZmlnLmFsZ29saWFTZWFyY2hLZXksXG4gICAgICAgICAgICAgICkuaW5pdEluZGV4KHNlYXJjaENvbmZpZy5hbGdvbGlhSW5kZXgpO1xuICAgICAgICAgICAgd2luZG93Ll9hbGdvbGlhSW5kZXhcbiAgICAgICAgICAgICAgLnNlYXJjaChxdWVyeSwge1xuICAgICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgICBsZW5ndGg6IG1heFJlc3VsdExlbmd0aCAqIDgsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlc1RvSGlnaGxpZ2h0OiBbXCJ0aXRsZVwiXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzVG9SZXRyaWV2ZTogW1wiKlwiXSxcbiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzVG9TbmlwcGV0OiBbYGNvbnRlbnQ6JHtzbmlwcGV0TGVuZ3RofWBdLFxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodFByZVRhZzogYDwke2hpZ2hsaWdodFRhZ30+YCxcbiAgICAgICAgICAgICAgICBoaWdobGlnaHRQb3N0VGFnOiBgPC8ke2hpZ2hsaWdodFRhZ30+YCxcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLnRoZW4oKHsgaGl0cyB9KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHt9O1xuICAgICAgICAgICAgICAgIGhpdHMuZm9yRWFjaChcbiAgICAgICAgICAgICAgICAgICh7XG4gICAgICAgICAgICAgICAgICAgIHVyaSxcbiAgICAgICAgICAgICAgICAgICAgZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgX2hpZ2hsaWdodFJlc3VsdDogeyB0aXRsZSB9LFxuICAgICAgICAgICAgICAgICAgICBfc25pcHBldFJlc3VsdDogeyBjb250ZW50IH0sXG4gICAgICAgICAgICAgICAgICB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzW3VyaV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzW3VyaV0uY29udGV4dC5sZW5ndGggPiBjb250ZW50LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdHNbdXJpXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICB1cmksXG4gICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRpdGxlLnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgIGRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGVudC52YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBmaW5pc2goT2JqZWN0LnZhbHVlcyhyZXN1bHRzKS5zbGljZSgwLCBtYXhSZXN1bHRMZW5ndGgpKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgZmluaXNoKFtdKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIGlmIChzZWFyY2hDb25maWcudHlwZSA9PT0gXCJmdXNlXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlYXJjaCA9ICgpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHt9O1xuICAgICAgICAgICAgICB3aW5kb3cuX2Z1c2VJbmRleFxuICAgICAgICAgICAgICAgIC5zZWFyY2gocXVlcnkpXG4gICAgICAgICAgICAgICAgLmZvckVhY2goKHsgaXRlbSwgcmVmSW5kZXgsIG1hdGNoZXMgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgbGV0IHRpdGxlID0gaXRlbS50aXRsZTtcbiAgICAgICAgICAgICAgICAgIGxldCBjb250ZW50ID0gaXRlbS5jb250ZW50O1xuICAgICAgICAgICAgICAgICAgbWF0Y2hlcy5mb3JFYWNoKCh7IGluZGljZXMsIHZhbHVlLCBrZXkgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ID09PSBcImNvbnRlbnRcIikge1xuICAgICAgICAgICAgICAgICAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5kaWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3Vic3RyID0gY29udGVudC5zdWJzdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMF0gKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRhZyA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGA8JHtoaWdobGlnaHRUYWd9PmAgKyBzdWJzdHIgKyBgPC8ke2hpZ2hsaWdodFRhZ30+YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN1YnN0cmluZygwLCBpbmRpY2VzW2ldWzBdICsgb2Zmc2V0KSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRhZyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3Vic3RyaW5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljZXNbaV1bMV0gKyAxICsgb2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQubGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGhpZ2hsaWdodFRhZy5sZW5ndGggKiAyICsgNTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluZGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1YnN0ciA9IHRpdGxlLnN1YnN0cmluZyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVswXSArIG9mZnNldCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGFnID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgYDwke2hpZ2hsaWdodFRhZ30+YCArIHN1YnN0ciArIGA8LyR7aGlnaGxpZ2h0VGFnfT5gO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZS5zdWJzdHJpbmcoMCwgaW5kaWNlc1tpXVswXSArIG9mZnNldCkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0YWcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZS5zdWJzdHJpbmcoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNlc1tpXVsxXSArIDEgKyBvZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudC5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgKz0gaGlnaGxpZ2h0VGFnLmxlbmd0aCAqIDIgKyA1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICByZXN1bHRzW2l0ZW0udXJpXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgdXJpOiBpdGVtLnVyaSxcbiAgICAgICAgICAgICAgICAgICAgdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIGRhdGU6IGl0ZW0uZGF0ZSxcbiAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGVudCxcbiAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdHMpO1xuICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhyZXN1bHRzKS5zbGljZSgwLCBtYXhSZXN1bHRMZW5ndGgpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICghd2luZG93Ll9mdXNlSW5kZXgpIHtcbiAgICAgICAgICAgICAgZmV0Y2goc2VhcmNoQ29uZmlnLmZ1c2VJbmRleFVSTClcbiAgICAgICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAgICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgaXNDYXNlU2Vuc2l0aXZlLFxuICAgICAgICAgICAgICAgICAgICBmaW5kQWxsTWF0Y2hlcyxcbiAgICAgICAgICAgICAgICAgICAgbWluTWF0Y2hDaGFyTGVuZ3RoLFxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgdGhyZXNob2xkLFxuICAgICAgICAgICAgICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgICAgICAgICAgICAgaWdub3JlTG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgIHVzZUV4dGVuZGVkU2VhcmNoLFxuICAgICAgICAgICAgICAgICAgICBpZ25vcmVGaWVsZE5vcm0sXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGVTY29yZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIHNob3VsZFNvcnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGluY2x1ZGVNYXRjaGVzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBrZXlzOiBbXCJjb250ZW50XCIsIFwidGl0bGVcIl0sXG4gICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgd2luZG93Ll9mdXNlSW5kZXggPSBuZXcgRnVzZShkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgIGZpbmlzaChzZWFyY2goKSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgICAgZmluaXNoKFtdKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSBmaW5pc2goc2VhcmNoKCkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAod2luZG93Ll9wZ2ZJbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGxvYWRQYWdlZmluZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2luZG93Ll9wZ2ZJbmRleC5kZWJvdW5jZWRTZWFyY2gocXVlcnksIDMwMCkudGhlbigocmVzcCkgPT4ge1xuICAgICAgICAgICAgICBpZiAocmVzcCA9PT0gbnVsbCB8fCAhKFwicmVzdWx0c1wiIGluIHJlc3ApKSB7XG4gICAgICAgICAgICAgICAgZmluaXNoKFtdKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgUHJvbWlzZS5hbGwoXG4gICAgICAgICAgICAgICAgcmVzcC5yZXN1bHRzLnNsaWNlKDAsIG1heFJlc3VsdExlbmd0aCkubWFwKChyKSA9PiByLmRhdGEoKSksXG4gICAgICAgICAgICAgICkudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgciBvZiByZXMpIHtcbiAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgX3Igb2Ygci5zdWJfcmVzdWx0cykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgICAgX3IudXJsID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAhKFwiYW5jaG9yXCIgaW4gX3IpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgX3IuYW5jaG9yLmVsZW1lbnQgIT0gXCJoMlwiXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0c1tfci51cmxdID0ge1xuICAgICAgICAgICAgICAgICAgICAgIHVyaTogX3IudXJsLFxuICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiByLm1ldGEudGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgZGF0ZTogci5tZXRhLmRhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgY29udGV4dDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodFRhZyA9PT0gXCJtYXJrXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfci5leGNlcnB0XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogX3IuZXhjZXJwdC5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLzxtYXJrPiguKj8pPFxcL21hcms+L2dpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYDwke2hpZ2hsaWdodFRhZ30+JDE8LyR7aGlnaGxpZ2h0VGFnfT5gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZpbmlzaChPYmplY3QudmFsdWVzKHJlc3VsdHMpKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlczoge1xuICAgICAgICAgIHN1Z2dlc3Rpb246ICh7IHRpdGxlLCB1cmksIGRhdGUsIGNvbnRleHQgfSkgPT5cbiAgICAgICAgICAgIGA8ZGl2PjxhIGhyZWY9JHt1cml9PjxzcGFuIGNsYXNzPVwic3VnZ2VzdGlvbi10aXRsZVwiPiR7dGl0bGV9PC9zcGFuPjwvYT48c3BhbiBjbGFzcz1cInN1Z2dlc3Rpb24tZGF0ZVwiPiR7ZGF0ZX08L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cInN1Z2dlc3Rpb24tY29udGV4dFwiPiR7Y29udGV4dH08L2Rpdj5gLFxuICAgICAgICAgIGVtcHR5OiAoeyBxdWVyeSB9KSA9PlxuICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJzZWFyY2gtZW1wdHlcIj4ke3NlYXJjaENvbmZpZy5ub1Jlc3VsdHNGb3VuZH06IDxzcGFuIGNsYXNzPVwic2VhcmNoLXF1ZXJ5XCI+XCIke2VzY2FwZShxdWVyeSl9XCI8L3NwYW4+PC9kaXY+YCxcbiAgICAgICAgICBmb290ZXI6ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgc2VhcmNoVHlwZSwgaWNvbiwgaHJlZiB9ID1cbiAgICAgICAgICAgICAgc2VhcmNoQ29uZmlnLnR5cGUgPT09IFwiYWxnb2xpYVwiXG4gICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6IFwiYWxnb2xpYVwiLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnPHN2ZyBjbGFzcz1cImljb25cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgdmlld0JveD1cIjAgMCA0NDggNTEyXCI+PCEtLSBGb250IEF3ZXNvbWUgRnJlZSA1LjE1LjQgYnkgQGZvbnRhd2Vzb21lIC0gaHR0cHM6Ly9mb250YXdlc29tZS5jb20gTGljZW5zZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tL2xpY2Vuc2UvZnJlZSAoSWNvbnM6IENDIEJZIDQuMCwgRm9udHM6IFNJTCBPRkwgMS4xLCBDb2RlOiBNSVQgTGljZW5zZSkgLS0+PHBhdGggZD1cIk0yMjkuMyAxODIuNmMtNDkuMyAwLTg5LjIgMzkuOS04OS4yIDg5LjIgMCA0OS4zIDM5LjkgODkuMiA4OS4yIDg5LjJzODkuMi0zOS45IDg5LjItODkuMmMwLTQ5LjMtNDAtODkuMi04OS4yLTg5LjJ6bTYyLjcgNTYuNmwtNTguOSAzMC42Yy0xLjguOS0zLjgtLjQtMy44LTIuM1YyMDFjMC0xLjUgMS4zLTIuNyAyLjctMi42IDI2LjIgMSA0OC45IDE1LjcgNjEuMSAzNy4xLjcgMS4zLjIgMy0xLjEgMy43ek0zODkuMSAzMkg1OC45QzI2LjQgMzIgMCA1OC40IDAgOTAuOVY0MjFjMCAzMi42IDI2LjQgNTkgNTguOSA1OUgzODljMzIuNiAwIDU4LjktMjYuNCA1OC45LTU4LjlWOTAuOUM0NDggNTguNCA0MjEuNiAzMiAzODkuMSAzMnptLTIwMi42IDg0LjdjMC0xMC44IDguNy0xOS41IDE5LjUtMTkuNWg0NS4zYzEwLjggMCAxOS41IDguNyAxOS41IDE5LjV2MTUuNGMwIDEuOC0xLjcgMy0zLjMgMi41LTEyLjMtMy40LTI1LjEtNS4xLTM4LjEtNS4xLTEzLjUgMC0yNi43IDEuOC0zOS40IDUuNS0xLjcuNS0zLjQtLjgtMy40LTIuNXYtMTUuOHptLTg0LjQgMzdsOS4yLTkuMmM3LjYtNy42IDE5LjktNy42IDI3LjUgMGw3LjcgNy43YzEuMSAxLjEgMSAzLS4zIDQtNi4yIDQuNS0xMi4xIDkuNC0xNy42IDE0LjktNS40IDUuNC0xMC40IDExLjMtMTQuOCAxNy40LTEgMS4zLTIuOSAxLjUtNCAuM2wtNy43LTcuN2MtNy42LTcuNS03LjYtMTkuOCAwLTI3LjR6bTEyNy4yIDI0NC44Yy03MCAwLTEyNi42LTU2LjctMTI2LjYtMTI2LjZzNTYuNy0xMjYuNiAxMjYuNi0xMjYuNmM3MCAwIDEyNi42IDU2LjYgMTI2LjYgMTI2LjYgMCA2OS44LTU2LjcgMTI2LjYtMTI2LjYgMTI2LjZ6XCIvPjwvc3ZnPicsXG4gICAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cuYWxnb2xpYS5jb20vXCIsXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgOiBzZWFyY2hDb25maWcudHlwZSA9PT0gXCJmdXNlXCJcbiAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaFR5cGU6IFwiRnVzZS5qc1wiLFxuICAgICAgICAgICAgICAgICAgICAgIGljb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL2Z1c2Vqcy5pby9cIixcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgICAgc2VhcmNoVHlwZTogXCJwYWdlZmluZFwiLFxuICAgICAgICAgICAgICAgICAgICAgIGljb246IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgaHJlZjogXCJodHRwczovL3BhZ2VmaW5kLmFwcFwiLFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwic2VhcmNoLWZvb3RlclwiPlNlYXJjaCBieSA8YSBocmVmPVwiJHtocmVmfVwiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZmVyXCIgdGFyZ2V0PVwiX2JsYW5rXCI+JHtpY29ufSAke3NlYXJjaFR5cGV9PC9hPjwvZGl2PmA7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgKTtcbiAgICBhdXRvc2VhcmNoLm9uKFxuICAgICAgXCJhdXRvY29tcGxldGU6c2VsZWN0ZWRcIixcbiAgICAgIChldmVudCwgX3N1Z2dlc3Rpb24sIF9kYXRhc2V0LCBfY29udGV4dCkgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSxcbiAgICApO1xuICAgIGlmIChpc01vYmlsZSkgd2luZG93Ll9zZWFyY2hNb2JpbGUgPSBhdXRvc2VhcmNoO1xuICAgIGVsc2Ugd2luZG93Ll9zZWFyY2hEZXNrdG9wID0gYXV0b3NlYXJjaDtcbiAgfTtcbiAgZnVuY3Rpb24gbG9hZFNjcmlwdChpZCwgdXJsLCBvbmxvYWQpIHtcbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aWR9YCkgPT09IG51bGwpIHtcbiAgICAgIGNvbnN0IGhlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiaGVhZFwiKTtcbiAgICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFwic3JjXCIsIHVybCk7XG4gICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKFwiaWRcIiwgaWQpO1xuICAgICAgc2NyaXB0Lm9ubG9hZCA9IG9ubG9hZDtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gbG9hZFBhZ2VmaW5kKCkge1xuICAgIGltcG9ydChwYWdlZmluZEpzKS50aGVuKChwKSA9PiB7XG4gICAgICB3aW5kb3cuX3BnZkluZGV4ID0gcDtcbiAgICAgIHdpbmRvdy5fcGdmSW5kZXhcbiAgICAgICAgLm9wdGlvbnMoe1xuICAgICAgICAgIGV4Y2VycHRMZW5ndGg6IHNuaXBwZXRMZW5ndGgsXG4gICAgICAgICAgdGVybUZyZXF1ZW5jeTogdGVybUZyZXF1ZW5jeSxcbiAgICAgICAgICBwYWdlTGVuZ3RoOiBwYWdlTGVuZ3RoLFxuICAgICAgICAgIHRlcm1TaW1pbGFyaXR5OiB0ZXJtU2ltaWxhcml0eSxcbiAgICAgICAgICB0ZXJtU2F0dXJhdGlvbjogdGVybVNhdHVyYXRpb24sXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICB3aW5kb3cuX3BnZkluZGV4LmluaXQoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdERldGFpbHMoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGV0YWlsc1wiKS5mb3JFYWNoKCgkZGV0YWlscykgPT4ge1xuICAgIGNvbnN0ICRzdW1tYXJ5ID0gJGRldGFpbHMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgICAgIFwiZGV0YWlscy1zdW1tYXJ5XCIsXG4gICAgKVswXSBhcyBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdCBjb250ZW50ID0gJHN1bW1hcnkubmV4dEVsZW1lbnRTaWJsaW5nIGFzIEhUTUxEaXZFbGVtZW50O1xuICAgIGlmICgkZGV0YWlscy5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKSB7XG4gICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IGNvbnRlbnQuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xuICAgIH1cbiAgICAkc3VtbWFyeS5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgKCkgPT4ge1xuICAgICAgICBpZiAoJGRldGFpbHMuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlblwiKSkge1xuICAgICAgICAgIGNvbnRlbnQuc3R5bGUubWF4SGVpZ2h0ID0gXCIwcHhcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb250ZW50LnN0eWxlLm1heEhlaWdodCA9IGNvbnRlbnQuc2Nyb2xsSGVpZ2h0ICsgXCJweFwiO1xuICAgICAgICB9XG4gICAgICAgICRkZXRhaWxzLmNsYXNzTGlzdC50b2dnbGUoXCJvcGVuXCIpO1xuICAgICAgfSxcbiAgICAgIGZhbHNlLFxuICAgICk7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcihcImJlZm9yZXByaW50XCIsICgpID0+IHtcbiAgICAgIGlmICgkZGV0YWlscy5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuXCIpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgICRzdW1tYXJ5LmNsaWNrKCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbml0TGlnaHRHYWxsZXJ5KCkge1xuICBpZiAod2luZG93LmNvbmZpZy5saWdodEdhbGxlcnkpIHtcbiAgICBsaWdodEdhbGxlcnkoXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnRcIiksXG4gICAgICB3aW5kb3cuY29uZmlnLmxpZ2h0R2FsbGVyeSxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUYWJsZXNvcnQoKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnPy50YWJsZT8uc29ydCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29udGVudCB0YWJsZVwiKS5mb3JFYWNoKCh0YWJsZSkgPT4gbmV3IFRhYmxlc29ydCh0YWJsZSkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUb2MoKSB7XG4gIGNvbnN0IHRvY0NvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIlRhYmxlT2ZDb250ZW50c1wiKTtcbiAgLy8gUmV0dXJuIGRpcmVjdGx5IGlmIG5vIHRvY1xuICBpZiAodG9jQ29yZSA9PT0gbnVsbCkgcmV0dXJuO1xuICBjb25zdCBpc1RvY1N0YXRpYyA9XG4gICAgd2luZG93Lm1hdGNoTWVkaWEgJiZcbiAgICB3aW5kb3cubWF0Y2hNZWRpYShcIm9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpXCIpLm1hdGNoZXM7XG5cbiAgaWYgKFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9jLXN0YXRpY1wiKS5nZXRBdHRyaWJ1dGUoXCJrZXB0XCIpIHx8XG4gICAgaXNUb2NTdGF0aWNcbiAgKSB7XG4gICAgaWYgKHdpbmRvdy5fdG9jT25TY3JvbGwpIHdpbmRvdy5zY3JvbGxFdmVudFNldC5kZWxldGUod2luZG93Ll90b2NPblNjcm9sbCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgdG9jID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b2MtYXV0b1wiKTtcbiAgICBjb25zdCB0b2NMaW5rRWxlbWVudHMgPSB0b2NDb3JlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJhOmZpcnN0LWNoaWxkXCIpO1xuICAgIGNvbnN0IHRvY0xpRWxlbWVudHMgPSB0b2NDb3JlLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibGlcIik7XG4gICAgY29uc3QgaGVhZGVyTGlua0VsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcbiAgICAgIFwiaGVhZGVyTGlua1wiLFxuICAgICkgYXMgSFRNTENvbGxlY3Rpb25PZjxIVE1MSGVhZGluZ0VsZW1lbnQ+O1xuICAgIGNvbnN0IGhlYWRlcklzRml4ZWQgPVxuICAgICAgZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoXCJoZWFkZXItZGVza3RvcFwiKSAhPT0gXCJub3JtYWxcIjtcbiAgICBjb25zdCBoZWFkZXJIZWlnaHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhlYWRlci1kZXNrdG9wXCIpLm9mZnNldEhlaWdodDtcbiAgICBjb25zdCBUT1BfU1BBQ0lORyA9IDIwICsgKGhlYWRlcklzRml4ZWQgPyBoZWFkZXJIZWlnaHQgOiAwKTtcbiAgICBjb25zdCBtaW5Ub2NUb3AgPSB0b2Mub2Zmc2V0VG9wO1xuICAgIGNvbnN0IG1pblNjcm9sbFRvcCA9XG4gICAgICBtaW5Ub2NUb3AgLSBUT1BfU1BBQ0lORyArIChoZWFkZXJJc0ZpeGVkID8gMCA6IGhlYWRlckhlaWdodCk7XG4gICAgd2luZG93Ll90b2NPblNjcm9sbCA9XG4gICAgICB3aW5kb3cuX3RvY09uU2Nyb2xsIHx8XG4gICAgICAoKCkgPT4ge1xuICAgICAgICBjb25zdCBmb290ZXJUb3AgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBvc3QtZm9vdGVyXCIpLm9mZnNldFRvcDtcbiAgICAgICAgY29uc3QgbWF4VG9jVG9wID0gZm9vdGVyVG9wIC0gdG9jLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcbiAgICAgICAgY29uc3QgbWF4U2Nyb2xsVG9wID1cbiAgICAgICAgICBtYXhUb2NUb3AgLSBUT1BfU1BBQ0lORyArIChoZWFkZXJJc0ZpeGVkID8gMCA6IGhlYWRlckhlaWdodCk7XG4gICAgICAgIGlmICh3aW5kb3cubmV3U2Nyb2xsVG9wIDwgbWluU2Nyb2xsVG9wKSB7XG4gICAgICAgICAgLy8gSWYgc2Nyb2xsIHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2VcbiAgICAgICAgICAvLyBTZXQgdG9jIHRvIGFic29sdXRlXG4gICAgICAgICAgdG9jLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICAgIHRvYy5zdHlsZS50b3AgPSBgJHttaW5Ub2NUb3B9cHhgO1xuICAgICAgICB9IGVsc2UgaWYgKHdpbmRvdy5uZXdTY3JvbGxUb3AgPiBtYXhTY3JvbGxUb3ApIHtcbiAgICAgICAgICAvLyBJZiBzY3JvbGwgdG8gdGhlIGJvdHRvbSBvZiB0aGUgcGFnZVxuICAgICAgICAgIC8vIFNldCB0b2MgdG8gYWJzb2x1dGVcbiAgICAgICAgICB0b2Muc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgICAgICAgdG9jLnN0eWxlLnRvcCA9IGAke21heFRvY1RvcH1weGA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gSWYgaW4gdGhlIG1pZGRsZVxuICAgICAgICAgIC8vIFNldCB0b2MgdG8gZml4ZWQgd2l0aCBUT1BfU1BBQ0lOR1xuICAgICAgICAgIHRvYy5zdHlsZS5wb3NpdGlvbiA9IFwiZml4ZWRcIjtcbiAgICAgICAgICB0b2Muc3R5bGUudG9wID0gYCR7VE9QX1NQQUNJTkd9cHhgO1xuICAgICAgICB9XG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgYWN0aXZlIHRvYyBsaW5rXG4gICAgICAgIC8vIFJldHVybiBkaXJlY3RseSBpZiBubyB0b2MgbGlua1xuICAgICAgICBpZiAodG9jTGlua0VsZW1lbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuXG4gICAgICAgIGxldCBhY3RpdmVUb2NJbmRleCA9IC0xO1xuICAgICAgICBjb25zdCBJTkRFWF9TUEFDSU5HID0gVE9QX1NQQUNJTkcgKyB3aW5kb3cubmV3U2Nyb2xsVG9wO1xuICAgICAgICAvLyBJZiB0aGUgSU5ERVhfU1BBQ0lORyBpcyBiZWxvdyB0aGUgbGFzdCBoZWFkZXIgbGlua1xuICAgICAgICAvLyBhY3RpdmF0ZSB0aGUgbGFzdCBlbGVtZW50XG4gICAgICAgIGlmIChoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGhlYWRlckxpbmtFbGVtZW50c1toZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMV0ub2Zmc2V0VG9wIDxcbiAgICAgICAgICAgIElOREVYX1NQQUNJTkdcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGFjdGl2ZVRvY0luZGV4ID0gaGVhZGVyTGlua0VsZW1lbnRzLmxlbmd0aCAtIDE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIE90aGVyd2lzZSBhY3RpdmF0ZSB0aGUgZWxlbWVudCB0aGF0IGlzIGluIGJldHdlZW5cbiAgICAgICAgICAgIC8vIFVzZSBvZmZzZXRUb3AgaW5zdGVhZCBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgZm9yIGJldHRlciBwZXJmb3JtYW5jZVxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFkZXJMaW5rRWxlbWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRoaXNUb3AgPSBoZWFkZXJMaW5rRWxlbWVudHNbaV0ub2Zmc2V0VG9wO1xuICAgICAgICAgICAgICBjb25zdCBuZXh0VG9wID0gaGVhZGVyTGlua0VsZW1lbnRzW2kgKyAxXS5vZmZzZXRUb3A7XG4gICAgICAgICAgICAgIGlmICh0aGlzVG9wIDw9IElOREVYX1NQQUNJTkcgJiYgbmV4dFRvcCA+IElOREVYX1NQQUNJTkcpIHtcbiAgICAgICAgICAgICAgICBhY3RpdmVUb2NJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVtb3ZlIGFsbCBsZWdhY3kgc3RhdGVzXG4gICAgICAgIEFycmF5LmZyb20odG9jTGlua0VsZW1lbnRzKS5mb3JFYWNoKCh0b2NMaW5rKSA9PlxuICAgICAgICAgIHRvY0xpbmsuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKSxcbiAgICAgICAgKTtcbiAgICAgICAgQXJyYXkuZnJvbSh0b2NMaUVsZW1lbnRzKS5mb3JFYWNoKCh0b2NMaSkgPT5cbiAgICAgICAgICB0b2NMaS5jbGFzc0xpc3QucmVtb3ZlKFwiaGFzLWFjdGl2ZVwiKSxcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBTZXQgdGhlIHRvY0xpbmtFbGVtZW50IHRvIGFjdGl2ZVxuICAgICAgICAvLyBhbmQgYWxsIGl0cyBwYXJlbnQgdG8gaGFzLWFjdGl2ZVxuICAgICAgICBpZiAoYWN0aXZlVG9jSW5kZXggPj0gMCAmJiBhY3RpdmVUb2NJbmRleCA8IHRvY0xpbmtFbGVtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICB0b2NMaW5rRWxlbWVudHNbYWN0aXZlVG9jSW5kZXhdLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgICAgLy8gdG9jTGlua0VsZW1lbnRzW2FjdGl2ZVRvY0luZGV4XS5zY3JvbGxJbnRvVmlldyh7XG4gICAgICAgICAgLy8gICBiZWhhdmlvcjogJ3Ntb290aCcsXG4gICAgICAgICAgLy8gICBibG9jazogJ2NlbnRlcidcbiAgICAgICAgICAvLyB9KVxuICAgICAgICAgIGxldCBwYXJlbnQgPSB0b2NMaW5rRWxlbWVudHNbYWN0aXZlVG9jSW5kZXhdLnBhcmVudEVsZW1lbnQ7XG4gICAgICAgICAgd2hpbGUgKHBhcmVudCAhPT0gdG9jQ29yZSkge1xuICAgICAgICAgICAgcGFyZW50LmNsYXNzTGlzdC5hZGQoXCJoYXMtYWN0aXZlXCIpO1xuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIHdpbmRvdy5fdG9jT25TY3JvbGwoKTtcbiAgICB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQuYWRkKHdpbmRvdy5fdG9jT25TY3JvbGwpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRNYXBib3goKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLm1hcGJveCkge1xuICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gd2luZG93LmNvbmZpZy5tYXBib3guYWNjZXNzVG9rZW47XG4gICAgbWFwYm94Z2wuc2V0UlRMVGV4dFBsdWdpbih3aW5kb3cuY29uZmlnLm1hcGJveC5SVExUZXh0UGx1Z2luKTtcbiAgICB3aW5kb3cuX21hcGJveEFyciA9IHdpbmRvdy5fbWFwYm94QXJyIHx8IFtdO1xuICAgIGZvckVhY2goZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1hcGJveFwiKSwgKCRtYXBib3gpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgbG5nLFxuICAgICAgICBsYXQsXG4gICAgICAgIHpvb20sXG4gICAgICAgIGxpZ2h0U3R5bGUsXG4gICAgICAgIGRhcmtTdHlsZSxcbiAgICAgICAgbWFya2VkLFxuICAgICAgICBuYXZpZ2F0aW9uLFxuICAgICAgICBnZW9sb2NhdGUsXG4gICAgICAgIHNjYWxlLFxuICAgICAgICBmdWxsc2NyZWVuLFxuICAgICAgfSA9IHdpbmRvdy5jb25maWcuZGF0YVskbWFwYm94LmlkXTtcbiAgICAgIGNvbnN0IG1hcGJveCA9IG5ldyBtYXBib3hnbC5NYXAoe1xuICAgICAgICBjb250YWluZXI6ICRtYXBib3gsXG4gICAgICAgIGNlbnRlcjogW2xuZywgbGF0XSxcbiAgICAgICAgem9vbSxcbiAgICAgICAgbWluWm9vbTogMC4yLFxuICAgICAgICBzdHlsZTogd2luZG93LmlzRGFyayA/IGRhcmtTdHlsZSA6IGxpZ2h0U3R5bGUsXG4gICAgICAgIGF0dHJpYnV0aW9uQ29udHJvbDogZmFsc2UsXG4gICAgICB9KTtcbiAgICAgIGlmIChtYXJrZWQpIHtcbiAgICAgICAgbmV3IG1hcGJveGdsLk1hcmtlcigpLnNldExuZ0xhdChbbG5nLCBsYXRdKS5hZGRUbyhtYXBib3gpO1xuICAgICAgfVxuICAgICAgaWYgKG5hdmlnYXRpb24pIHtcbiAgICAgICAgbWFwYm94LmFkZENvbnRyb2wobmV3IG1hcGJveGdsLk5hdmlnYXRpb25Db250cm9sKCksIFwiYm90dG9tLXJpZ2h0XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGdlb2xvY2F0ZSkge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChcbiAgICAgICAgICBuZXcgbWFwYm94Z2wuR2VvbG9jYXRlQ29udHJvbCh7XG4gICAgICAgICAgICBwb3NpdGlvbk9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgZW5hYmxlSGlnaEFjY3VyYWN5OiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNob3dVc2VyTG9jYXRpb246IHRydWUsXG4gICAgICAgICAgICB0cmFja1VzZXJMb2NhdGlvbjogdHJ1ZSxcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBcImJvdHRvbS1yaWdodFwiLFxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgaWYgKHNjYWxlKSB7XG4gICAgICAgIG1hcGJveC5hZGRDb250cm9sKG5ldyBtYXBib3hnbC5TY2FsZUNvbnRyb2woKSk7XG4gICAgICB9XG4gICAgICBpZiAoZnVsbHNjcmVlbikge1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgbWFwYm94Z2wuRnVsbHNjcmVlbkNvbnRyb2woKSk7XG4gICAgICB9XG4gICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94TGFuZ3VhZ2UoKSk7XG4gICAgICB3aW5kb3cuX21hcGJveEFyci5wdXNoKG1hcGJveCk7XG4gICAgfSk7XG4gICAgd2luZG93Ll9tYXBib3hPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgICAgZm9yRWFjaCh3aW5kb3cuX21hcGJveEFyciwgKG1hcGJveCkgPT4ge1xuICAgICAgICBjb25zdCAkbWFwYm94ID0gbWFwYm94LmdldENvbnRhaW5lcigpO1xuICAgICAgICBjb25zdCB7IGxpZ2h0U3R5bGUsIGRhcmtTdHlsZSB9ID0gd2luZG93LmNvbmZpZy5kYXRhWyRtYXBib3guaWRdO1xuICAgICAgICBtYXBib3guc2V0U3R5bGUod2luZG93LmlzRGFyayA/IGRhcmtTdHlsZSA6IGxpZ2h0U3R5bGUpO1xuICAgICAgICBtYXBib3guYWRkQ29udHJvbChuZXcgTWFwYm94TGFuZ3VhZ2UoKSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHdpbmRvdy5zd2l0Y2hUaGVtZUV2ZW50U2V0LmFkZCh3aW5kb3cuX21hcGJveE9uU3dpdGNoVGhlbWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRUeXBlaXQoKSB7XG4gIGlmICh3aW5kb3cuY29uZmlnLnR5cGVpdCkge1xuICAgIGNvbnN0IHR5cGVpdENvbmZpZyA9IHdpbmRvdy5jb25maWcudHlwZWl0O1xuICAgIGNvbnN0IHNwZWVkID0gdHlwZWl0Q29uZmlnLnNwZWVkID8gdHlwZWl0Q29uZmlnLnNwZWVkIDogMTAwO1xuICAgIGNvbnN0IGN1cnNvclNwZWVkID0gdHlwZWl0Q29uZmlnLmN1cnNvclNwZWVkXG4gICAgICA/IHR5cGVpdENvbmZpZy5jdXJzb3JTcGVlZFxuICAgICAgOiAxMDAwO1xuICAgIGNvbnN0IGN1cnNvckNoYXIgPSB0eXBlaXRDb25maWcuY3Vyc29yQ2hhciA/IHR5cGVpdENvbmZpZy5jdXJzb3JDaGFyIDogXCJ8XCI7XG4gICAgT2JqZWN0LnZhbHVlcyh0eXBlaXRDb25maWcuZGF0YSkuZm9yRWFjaCgoZ3JvdXApID0+IHtcbiAgICAgIGNvbnN0IHR5cGVvbmUgPSAoaSkgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IGdyb3VwW2ldO1xuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5oYXNBdHRyaWJ1dGUoXCJkYXRhLXR5cGVpdC1pZFwiKSkge1xuICAgICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IFR5cGVJdChgIyR7aWR9YCwge1xuICAgICAgICAgICAgc3RyaW5nczogd2luZG93LmNvbmZpZy5kYXRhW2lkXSxcbiAgICAgICAgICAgIHNwZWVkLFxuICAgICAgICAgICAgbGlmZUxpa2U6IHRydWUsXG4gICAgICAgICAgICBjdXJzb3JTcGVlZCxcbiAgICAgICAgICAgIGN1cnNvckNoYXIsXG4gICAgICAgICAgICB3YWl0VW50aWxWaXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgYWZ0ZXJDb21wbGV0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoaSA9PT0gZ3JvdXAubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlaXRDb25maWcuZHVyYXRpb24gPj0gMCkge1xuICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgICB9LCB0eXBlaXRDb25maWcuZHVyYXRpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaW5zdGFuY2UuZGVzdHJveSgpO1xuICAgICAgICAgICAgICB0eXBlb25lKGkgKyAxKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSkuZ28oKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHR5cGVvbmUoMCk7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdE1ldGEoKSB7XG4gIGZ1bmN0aW9uIGdldE1ldGEobWV0YU5hbWUpIHtcbiAgICBjb25zdCBtZXRhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwibWV0YVwiKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1ldGFzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAobWV0YXNbaV0uZ2V0QXR0cmlidXRlKFwibmFtZVwiKSA9PT0gbWV0YU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG1ldGFzW2ldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjb25zdCB0aGVtZUNvbG9yTWV0YSA9IGdldE1ldGEoXCJ0aGVtZS1jb2xvclwiKTtcbiAgY29uc3QgbWV0YUNvbG9ycyA9IHtcbiAgICBsaWdodDogXCIjZjhmOGY4XCIsXG4gICAgZGFyazogXCIjMTYxYjIyXCIsXG4gIH07XG4gIHdpbmRvdy5fbWV0YVRoZW1lQ29sb3JPblN3aXRjaFRoZW1lID0gKCkgPT4ge1xuICAgIHRoZW1lQ29sb3JNZXRhLmNvbnRlbnQgPSBtZXRhQ29sb3JzW2RvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKFwidGhlbWVcIildO1xuICB9O1xuICB3aW5kb3cuc3dpdGNoVGhlbWVFdmVudFNldC5hZGQod2luZG93Ll9tZXRhVGhlbWVDb2xvck9uU3dpdGNoVGhlbWUpO1xuICB3aW5kb3cuX21ldGFUaGVtZUNvbG9yT25Td2l0Y2hUaGVtZSgpO1xufVxuXG5mdW5jdGlvbiBvblNjcm9sbCgpIHtcbiAgY29uc3QgYmFja1RvVG9wID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJiYWNrLXRvLXRvcC1idXR0b25cIik7XG4gIGZ1bmN0aW9uIGhhbmRsZVNjcm9sbEV2ZW50KCkge1xuICAgIHdpbmRvdy5uZXdTY3JvbGxUb3AgPSBnZXRTY3JvbGxUb3AoKTtcbiAgICBpZiAod2luZG93Lm5ld1Njcm9sbFRvcCA+IDIwKSB7XG4gICAgICBiYWNrVG9Ub3Auc3R5bGUub3BhY2l0eSA9IFwiMVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBiYWNrVG9Ub3Auc3R5bGUub3BhY2l0eSA9IFwiMFwiO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5zY3JvbGxFdmVudFNldCkgZXZlbnQoKTtcbiAgICB3aW5kb3cub2xkU2Nyb2xsVG9wID0gd2luZG93Lm5ld1Njcm9sbFRvcDtcbiAgfVxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCBoYW5kbGVTY3JvbGxFdmVudCwgZmFsc2UpO1xufVxuXG5mdW5jdGlvbiBvblJlc2l6ZSgpIHtcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgXCJyZXNpemVcIixcbiAgICAoKSA9PiB7XG4gICAgICBpZiAoIXdpbmRvdy5fcmVzaXplVGltZW91dCkge1xuICAgICAgICB3aW5kb3cuX3Jlc2l6ZVRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgd2luZG93Ll9yZXNpemVUaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5yZXNpemVFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgICAgICBpbml0U2VhcmNoKCk7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBmYWxzZSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gb25DbGlja01hc2soKSB7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFza1wiKS5hZGRFdmVudExpc3RlbmVyKFxuICAgIFwiY2xpY2tcIixcbiAgICAoKSA9PiB7XG4gICAgICBmb3IgKGNvbnN0IGV2ZW50IG9mIHdpbmRvdy5jbGlja01hc2tFdmVudFNldCkgZXZlbnQoKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImJsdXJcIik7XG4gICAgfSxcbiAgICBmYWxzZSxcbiAgKTtcbn1cblxuZnVuY3Rpb24gaW5pdENvZGVibG9ja3MoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29kZS1ibG9ja1wiKS5mb3JFYWNoKChjb2RlQmxvY2spID0+IHtcbiAgICAvLyB0aGUgcXVlcmllcyBhcmUgZ3VhcmFudGVlZCB0byBiZSBzdWNjZXNzZnVsXG4gICAgY29uc3QgdGl0bGVCYXIgPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiZGl2LmNvZGUtYmxvY2stdGl0bGUtYmFyXCIsXG4gICAgKSBhcyBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdCBjaHJvbWEgPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcImNvZGUuY2hyb21hXCIpIGFzIEhUTUxFbGVtZW50O1xuICAgIGNvbnN0IGNvcHlDb2RlQnV0dG9uID0gY29kZUJsb2NrLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcImJ1dHRvbi5jb3B5LWNvZGUtYnV0dG9uXCIsXG4gICAgKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcbiAgICBjb25zdCBjb3B5SWNvbiA9IGNvcHlDb2RlQnV0dG9uLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcInNwYW4uY29weS1pY29uXCIsXG4gICAgKSBhcyBTVkdFbGVtZW50O1xuICAgIGNvbnN0IGNoZWNrSWNvbiA9IGNvcHlDb2RlQnV0dG9uLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcInNwYW4uY2hlY2staWNvblwiLFxuICAgICkgYXMgU1ZHRWxlbWVudDtcbiAgICBjb25zdCB3cmFwQ29kZUJ1dHRvbiA9IGNvZGVCbG9jay5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCJidXR0b24ud3JhcC1jb2RlLWJ1dHRvblwiLFxuICAgICkgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XG4gICAgY29uc3QgdG9nZ2xlTGluZU51bWJlcnNCdXR0b24gPSBjb2RlQmxvY2sucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiYnV0dG9uLmxpbmUtbnVtYmVyLWJ1dHRvblwiLFxuICAgICkgYXMgSFRNTEJ1dHRvbkVsZW1lbnQ7XG5cbiAgICBjaHJvbWEuc3R5bGUubWF4SGVpZ2h0ID0gY2hyb21hLnNjcm9sbEhlaWdodCArIDEwICsgXCJweFwiO1xuXG4gICAgLy8gaGFuZGxlIGV4cGFuZGluZyBhbmQgY29sbGFwc2luZyBjb2RlIGJsb2Nrc1xuICAgIHRpdGxlQmFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLW9wZW5cIik7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLWNsb3NlZFwiKTtcbiAgICB9KTtcblxuICAgIC8vIGhhbmRsZSBjb3B5aW5nIGNvZGUgdG8gY2xpcGJvYXJkXG4gICAgY29weUNvZGVCdXR0b24/LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChjaHJvbWEudGV4dENvbnRlbnQpO1xuICAgICAgLy8gdG9nZ2xlIGljb25zXG4gICAgICBjb3B5SWNvbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICBjaGVja0ljb24uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBjb3B5SWNvbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICBjaGVja0ljb24uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgfSwgMzAwMCk7XG4gICAgfSk7XG5cbiAgICAvLyBoYW5kbGUgd3JhcHBpbmcgbGluZXMgaW4gY29kZSBibG9ja3NcbiAgICB3cmFwQ29kZUJ1dHRvbj8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNocm9tYS5zdHlsZS5tYXhIZWlnaHQgPSBcImZpdC1jb250ZW50XCI7XG4gICAgICBjb2RlQmxvY2suY2xhc3NMaXN0LnRvZ2dsZShcImlzLXdyYXBcIik7XG4gICAgICBjaHJvbWEuc3R5bGUubWF4SGVpZ2h0ID0gY2hyb21hLnNjcm9sbEhlaWdodCArIDEwICsgXCJweFwiO1xuICAgIH0pO1xuXG4gICAgdG9nZ2xlTGluZU51bWJlcnNCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNvZGVCbG9jay5jbGFzc0xpc3QudG9nZ2xlKFwic2hvdy1saW5lLW51bWJlcnNcIik7XG4gICAgfSk7XG5cbiAgICBhZGRFdmVudExpc3RlbmVyKFwiYmVmb3JlcHJpbnRcIiwgKF8pID0+IHtcbiAgICAgIGlmIChjb2RlQmxvY2suY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtY2xvc2VkXCIpKSB7XG4gICAgICAgIHRpdGxlQmFyLmNsaWNrKCk7XG4gICAgICB9XG4gICAgICBpZiAoIWNvZGVCbG9jay5jbGFzc0xpc3QuY29udGFpbnMoXCJpcy13cmFwXCIpKSB7XG4gICAgICAgIHdyYXBDb2RlQnV0dG9uLmNsaWNrKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbml0KCkge1xuICB3aW5kb3cuaXNEYXJrID0gZG9jdW1lbnQuYm9keS5nZXRBdHRyaWJ1dGUoXCJ0aGVtZVwiKSAhPT0gXCJsaWdodFwiO1xuICB3aW5kb3cubmV3U2Nyb2xsVG9wID0gZ2V0U2Nyb2xsVG9wKCk7XG4gIHdpbmRvdy5vbGRTY3JvbGxUb3AgPSB3aW5kb3cubmV3U2Nyb2xsVG9wO1xuICB3aW5kb3cuc2Nyb2xsRXZlbnRTZXQgPSBuZXcgU2V0KCk7XG4gIHdpbmRvdy5yZXNpemVFdmVudFNldCA9IG5ldyBTZXQoKTtcbiAgd2luZG93LmNsaWNrTWFza0V2ZW50U2V0ID0gbmV3IFNldCgpO1xuICBpZiAod2luZG93Lm9iamVjdEZpdEltYWdlcykgb2JqZWN0Rml0SW1hZ2VzKCk7XG4gIGluaXRNZW51TW9iaWxlKCk7XG4gIGluaXRTd2l0Y2hUaGVtZSgpO1xuICBpbml0U2VsZWN0VGhlbWUoKTtcbiAgaW5pdE1ldGEoKTtcbiAgaW5pdFNlYXJjaCgpO1xuICBpbml0Q29kZWJsb2NrcygpO1xuICBpbml0RGV0YWlscygpO1xuICBpbml0TGlnaHRHYWxsZXJ5KCk7XG4gIGluaXRUYWJsZXNvcnQoKTtcbiAgaW5pdFR5cGVpdCgpO1xuICBpbml0TWFwYm94KCk7XG4gIGluaXRUb2MoKTtcbiAgb25TY3JvbGwoKTtcbiAgb25SZXNpemUoKTtcbiAgb25DbGlja01hc2soKTtcbn1cblxuaW5pdCgpO1xuIl0sCiAgIm1hcHBpbmdzIjogInFFQUFBLElBQUFBLEVBQUFDLEdBQUEsQ0FBQUMsR0FBQUMsSUFBQSxDQUFBQSxFQUFPLFFBQVUsT0FBTyxZQ2dCeEIsSUFBTUMsR0FBWSxJQUdsQixTQUFTQyxHQUFPQyxF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ZSxHQUFLLElBQ3RELENBQUMsRUFFREssRUFBd0IsaUJBQWlCLFFBQVMsSUFBTSxDQUN0RFAsRUFBVSxVQUFVLE9BQU8sbUJBQW1CLENBQ2hELENBQUMsRUFFRCxpQkFBaUIsY0FBZ0JRLEdBQU0sQ0FDakNSLEVBQVUsVUFBVSxTQUFTLFdBQVcsR0FDMUNDLEVBQVMsTUFBTSxFQUVaRCxFQUFVLFVBQVUsU0FBUyxTQUFTLEdBQ3pDTSxFQUFlLE1BQU0sQ0FFekIsQ0FBQyxDQUNILENBQUMsQ0FDSCxDQUVBLFNBQVNHLElBQU8sQ0FDZCxPQUFPLE9BQVMsU0FBUyxLQUFLLGFBQWEsT0FBTyxJQUFNLFFBQ3hELE9BQU8sYUFBZWIsRUFBYSxFQUNuQyxPQUFPLGFBQWUsT0FBTyxhQUM3QixPQUFPLGVBQWlCLElBQUksSUFDNUIsT0FBTyxlQUFpQixJQUFJLElBQzVCLE9BQU8sa0JBQW9CLElBQUksSUFDM0IsT0FBTyxpQkFBaUIsZ0JBQWdCLEVBQzVDbEosR0FBZSxFQUNmSyxHQUFnQixFQUNoQkksR0FBZ0IsRUFDaEJnSSxHQUFTLEVBQ1Q3SCxFQUFXLEVBQ1h5SSxHQUFlLEVBQ2Y5RCxHQUFZLEVBQ1pHLEdBQWlCLEVBQ2pCQyxHQUFjLEVBQ2RzQyxHQUFXLEVBQ1hkLEdBQVcsRUFDWHJCLEdBQVEsRUFDUmlELEdBQVMsRUFDVEksR0FBUyxFQUNUQyxHQUFZLENBQ2QsQ0FFQVcsR0FBSyIsCiAgIm5hbWVzIjogWyJyZXF1aXJlX3RhYmxlc29ydCIsICJfX2NvbW1vbkpTTWluIiwgImV4cG9ydHMiLCAibW9kdWxlIiwgIlRhYmxlc29ydCIsICJlc2NhcGUiLCAidW5zYWZlIiwgImZvckVhY2giLCAiZWxlbWVudHMiLCAiaGFuZGxlciIsICJpIiwgImdldFNjcm9sbFRvcCIsICJpbml0TWVudU1vYmlsZSIsICJtZW51VG9nZ2xlTW9iaWxlIiwgIm1lbnVNb2JpbGUiLCAic2V0Q29sb3JUaGVtZSIsICJ0aGVtZSIsICJpbml0U3dpdGNoVGhlbWUiLCAidGhlbWVTd2l0Y2giLCAiY3VycmVudFRoZW1lIiwgImV2ZW50IiwgImluaXRTZWxlY3RUaGVtZSIsICJ0aGVtZVNlbGVjdCIsICJqIiwgImluaXRTZWFyY2giLCAic2VhcmNoQ29uZmlnIiwgImlzTW9iaWxlIiwgIm1heFJlc3VsdExlbmd0aCIsICJzbmlwcGV0TGVuZ3RoIiwgImhpZ2hsaWdodFRhZyIsICJpc0Nhc2VTZW5zaXRpdmUiLCAibWluTWF0Y2hDaGFyTGVuZ3RoIiwgImZpbmRBbGxNYXRjaGVzIiwgImxvY2F0aW9uIiwgInRocmVzaG9sZCIsICJkaXN0YW5jZSIsICJpZ25vcmVMb2NhdGlvbiIsICJ1c2VFeHRlbmRlZFNlYXJjaCIsICJpZ25vcmVGaWVsZE5vcm0iLCAidGVybUZyZXF1ZW5jeSIsICJwYWdlTGVuZ3RoIiwgInRlcm1TaW1pbGFyaXR5IiwgInRlcm1TYXR1cmF0aW9uIiwgInN1ZmZpeCIsICJoZWFkZXIiLCAic2VhcmNoSW5wdXQiLCAic2VhcmNoVG9nZ2xlIiwgInNlYXJjaExvYWRpbmciLCAic2VhcmNoQ2xlYXIiLCAiYXV0b2NvbXBsZXRlSnMiLCAiYWxnb2xpYUpzIiwgInBhZ2VmaW5kSnMiLCAiZnVzZUpzIiwgImxvYWRTY3JpcHQiLCAiaW5pdEF1dG9zZWFyY2giLCAibG9hZFBhZ2VmaW5kIiwgImUiLCAiYXV0b3NlYXJjaCIsICJxdWVyeSIsICJjYWxsYmFjayIsICJmaW5pc2giLCAicmVzdWx0cyIsICJoaXRzIiwgInVyaSIsICJkYXRlIiwgInRpdGxlIiwgImNvbnRlbnQiLCAiZXJyIiwgInNlYXJjaCIsICJpdGVtIiwgInJlZkluZGV4IiwgIm1hdGNoZXMiLCAiaW5kaWNlcyIsICJ2YWx1ZSIsICJrZXkiLCAib2Zmc2V0IiwgImkiLCAic3Vic3RyIiwgInRhZyIsICJyZXNwb25zZSIsICJkYXRhIiwgIm9wdGlvbnMiLCAicmVzcCIsICJyIiwgInJlcyIsICJfciIsICJjb250ZXh0IiwgImVzY2FwZSIsICJzZWFyY2hUeXBlIiwgImljb24iLCAiaHJlZiIsICJfc3VnZ2VzdGlvbiIsICJfZGF0YXNldCIsICJfY29udGV4dCIsICJpZCIsICJ1cmwiLCAib25sb2FkIiwgImhlYWQiLCAic2NyaXB0IiwgImluaXREZXRhaWxzIiwgIiRkZXRhaWxzIiwgIiRzdW1tYXJ5IiwgImluaXRMaWdodEdhbGxlcnkiLCAiaW5pdFRhYmxlc29ydCIsICJ0YWJsZSIsICJUYWJsZXNvcnQiLCAiaW5pdFRvYyIsICJ0b2NDb3JlIiwgImlzVG9jU3RhdGljIiwgInRvYyIsICJ0b2NMaW5rRWxlbWVudHMiLCAidG9jTGlFbGVtZW50cyIsICJoZWFkZXJMaW5rRWxlbWVudHMiLCAiaGVhZGVySXNGaXhlZCIsICJoZWFkZXJIZWlnaHQiLCAiVE9QX1NQQUNJTkciLCAibWluVG9jVG9wIiwgIm1pblNjcm9sbFRvcCIsICJtYXhUb2NUb3AiLCAibWF4U2Nyb2xsVG9wIiwgImFjdGl2ZVRvY0luZGV4IiwgIklOREVYX1NQQUNJTkciLCAidGhpc1RvcCIsICJuZXh0VG9wIiwgInRvY0xpbmsiLCAidG9jTGkiLCAicGFyZW50IiwgImluaXRNYXBib3giLCAiZm9yRWFjaCIsICIkbWFwYm94IiwgImxuZyIsICJsYXQiLCAiem9vbSIsICJsaWdodFN0eWxlIiwgImRhcmtTdHlsZSIsICJtYXJrZWQiLCAibmF2aWdhdGlvbiIsICJnZW9sb2NhdGUiLCAic2NhbGUiLCAiZnVsbHNjcmVlbiIsICJtYXBib3giLCAiaW5pdFR5cGVpdCIsICJ0eXBlaXRDb25maWciLCAic3BlZWQiLCAiY3Vyc29yU3BlZWQiLCAiY3Vyc29yQ2hhciIsICJncm91cCIsICJ0eXBlb25lIiwgImluc3RhbmNlIiwgImluaXRNZXRhIiwgImdldE1ldGEiLCAibWV0YU5hbWUiLCAibWV0YXMiLCAidGhlbWVDb2xvck1ldGEiLCAibWV0YUNvbG9ycyIsICJvblNjcm9sbCIsICJiYWNrVG9Ub3AiLCAiaGFuZGxlU2Nyb2xsRXZlbnQiLCAiZ2V0U2Nyb2xsVG9wIiwgIm9uUmVzaXplIiwgIm9uQ2xpY2tNYXNrIiwgImluaXRDb2RlYmxvY2tzIiwgImNvZGVCbG9jayIsICJ0aXRsZUJhciIsICJjaHJvbWEiLCAiY29weUNvZGVCdXR0b24iLCAiY29weUljb24iLCAiY2hlY2tJY29uIiwgIndyYXBDb2RlQnV0dG9uIiwgInRvZ2dsZUxpbmVOdW1iZXJzQnV0dG9uIiwgIl8iLCAiaW5pdCJdCn0K
